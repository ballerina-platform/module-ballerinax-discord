{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Discord HTTP API (Preview)",
    "description" : "Preview of the Discord v10 HTTP API specification. See https://discord.com/developers/docs for more details.",
    "contact" : { },
    "version" : "10"
  },
  "externalDocs" : {
    "description" : "Discord Developer Documentation",
    "url" : "https://discord.com/developers/docs"
  },
  "servers" : [ {
    "url" : "https://discord.com/api/v10"
  }, {
    "url" : "discord.com/oauth2"
  }, {
    "url" : "https://discord.com/api/oauth2"
  } ],
  "paths" : {
    "/oauth2/applications/@me" : {
      "get" : {
        "summary" : "get_my_oauth2_application",
        "description" : "",
        "operationId" : "get_my_oauth2_application",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_my_oauth2_application",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrivateApplicationResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/users/@me/connections" : {
      "get" : {
        "summary" : "list_my_connections",
        "description" : "",
        "operationId" : "list_my_connections",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "200 response for list_my_connections",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "description" : "",
                  "nullable" : true,
                  "items" : {
                    "$ref" : "#/components/schemas/ConnectedAccountResponse"
                  }
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        }, {
          "OAuth2" : [ "connections" ]
        } ]
      }
    },
    "/users/@me/channels" : {
      "post" : {
        "summary" : "create_dm",
        "description" : "",
        "operationId" : "create_dm",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreatePrivateChannelRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for create_dm",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse200"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        }, {
          "OAuth2" : [ "dm_channels.read", "voice" ]
        } ]
      }
    },
    "/users/@me/guilds" : {
      "get" : {
        "summary" : "list_my_guilds",
        "description" : "",
        "operationId" : "list_my_guilds",
        "parameters" : [ {
          "name" : "before",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 200.0,
            "minimum" : 1.0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "with_counts",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "withCounts"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for list_my_guilds",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "description" : "",
                  "nullable" : true,
                  "items" : {
                    "$ref" : "#/components/schemas/MyGuildResponse"
                  }
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        }, {
          "OAuth2" : [ "guilds" ]
        } ]
      }
    },
    "/applications/@me" : {
      "get" : {
        "summary" : "get_my_application",
        "description" : "",
        "operationId" : "get_my_application",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_my_application",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrivateApplicationResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "patch" : {
        "summary" : "update_my_application",
        "description" : "",
        "operationId" : "update_my_application",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationFormPartial"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for update_my_application",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrivateApplicationResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/gateway/bot" : {
      "get" : {
        "summary" : "get_bot_gateway",
        "description" : "",
        "operationId" : "get_bot_gateway",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_bot_gateway",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayBotResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/oauth2/keys" : {
      "get" : {
        "summary" : "get_public_keys",
        "description" : "",
        "operationId" : "get_public_keys",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_public_keys",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OAuth2GetKeys"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ { }, {
          "BotToken" : [ ]
        } ]
      }
    },
    "/oauth2/@me" : {
      "get" : {
        "summary" : "get_my_oauth2_authorization",
        "description" : "",
        "operationId" : "get_my_oauth2_authorization",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_my_oauth2_authorization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OAuth2GetAuthorizationResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        }, {
          "OAuth2" : [ "activities.read", "activities.write", "applications.builds.read", "applications.builds.upload", "applications.commands", "applications.commands.permissions.update", "applications.commands.update", "applications.entitlements", "applications.store.update", "bot", "connections", "dm_channels.read", "email", "gdm.join", "guilds", "guilds.join", "guilds.members.read", "identify", "messages.read", "openid", "relationships.read", "role_connections.write", "rpc", "rpc.activities.write", "rpc.notifications.read", "rpc.screenshare.read", "rpc.screenshare.write", "rpc.video.read", "rpc.video.write", "rpc.voice.read", "rpc.voice.write", "voice", "webhook.incoming" ]
        } ]
      }
    },
    "/voice/regions" : {
      "get" : {
        "summary" : "list_voice_regions",
        "description" : "",
        "operationId" : "list_voice_regions",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "200 response for list_voice_regions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "description" : "",
                  "nullable" : true,
                  "items" : {
                    "$ref" : "#/components/schemas/VoiceRegionResponse"
                  }
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/users/@me" : {
      "get" : {
        "summary" : "get_my_user",
        "description" : "",
        "operationId" : "get_my_user",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_my_user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserPIIResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        }, {
          "OAuth2" : [ "identify" ]
        } ]
      },
      "patch" : {
        "summary" : "update_my_user",
        "description" : "",
        "operationId" : "update_my_user",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BotAccountPatchRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for update_my_user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserPIIResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/stage-instances" : {
      "post" : {
        "summary" : "create_stage_instance",
        "description" : "",
        "operationId" : "create_stage_instance",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StageInstancesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for create_stage_instance",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StageInstanceResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/sticker-packs" : {
      "get" : {
        "summary" : "list_sticker_packs",
        "description" : "",
        "operationId" : "list_sticker_packs",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "200 response for list_sticker_packs",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StickerPackCollectionResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ { }, {
          "BotToken" : [ ]
        } ]
      }
    },
    "/gateway" : {
      "get" : {
        "summary" : "get_gateway",
        "description" : "",
        "operationId" : "get_gateway",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_gateway",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ { }, {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds" : {
      "post" : {
        "summary" : "create_guild",
        "description" : "",
        "operationId" : "create_guild",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GuildCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "201 response for create_guild",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuildResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/channels/{channelId}/users/@me/threads/archived/private" : {
      "get" : {
        "summary" : "list_my_private_archived_threads",
        "description" : "",
        "operationId" : "list_my_private_archived_threads",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "before",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100.0,
            "minimum" : 2.0,
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for list_my_private_archived_threads",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThreadsResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/applications/{applicationId}/guilds/{guildId}/commands/permissions" : {
      "get" : {
        "summary" : "list_guild_application_command_permissions",
        "description" : "",
        "operationId" : "list_guild_application_command_permissions",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for list_guild_application_command_permissions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "description" : "",
                  "items" : {
                    "$ref" : "#/components/schemas/CommandPermissionsResponse"
                  }
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        }, {
          "OAuth2" : [ "applications.commands.permissions.update" ]
        } ]
      }
    },
    "/applications/{applicationId}/guilds/{guildId}/commands/{commandId}/permissions" : {
      "get" : {
        "summary" : "get_guild_application_command_permissions",
        "description" : "",
        "operationId" : "get_guild_application_command_permissions",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "commandId",
          "in" : "path",
          "description" : "Command ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_guild_application_command_permissions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommandPermissionsResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        }, {
          "OAuth2" : [ "applications.commands.permissions.update" ]
        } ]
      },
      "put" : {
        "summary" : "set_guild_application_command_permissions",
        "description" : "",
        "operationId" : "set_guild_application_command_permissions",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "commandId",
          "in" : "path",
          "description" : "Command ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationsGuildsCommandsCommandIdPermissionsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for set_guild_application_command_permissions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommandPermissionsResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        }, {
          "OAuth2" : [ "applications.commands.permissions.update" ]
        } ]
      }
    },
    "/channels/{channelId}/messages/{messageId}/reactions/{emojiName}/@me" : {
      "put" : {
        "summary" : "add_my_message_reaction",
        "description" : "",
        "operationId" : "add_my_message_reaction",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "messageId",
          "in" : "path",
          "description" : "Message ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "emojiName",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "maxLength" : 152133,
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for add_my_message_reaction",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "delete" : {
        "summary" : "delete_my_message_reaction",
        "description" : "",
        "operationId" : "delete_my_message_reaction",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "messageId",
          "in" : "path",
          "description" : "Message ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "emojiName",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "maxLength" : 152133,
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for delete_my_message_reaction",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/channels/{channelId}/threads/archived/private" : {
      "get" : {
        "summary" : "list_private_archived_threads",
        "description" : "",
        "operationId" : "list_private_archived_threads",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "before",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100.0,
            "minimum" : 2.0,
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for list_private_archived_threads",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThreadsResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/channels/{channelId}/threads/archived/public" : {
      "get" : {
        "summary" : "list_public_archived_threads",
        "description" : "",
        "operationId" : "list_public_archived_threads",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "before",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100.0,
            "minimum" : 2.0,
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for list_public_archived_threads",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThreadsResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/users/@me/applications/{applicationId}/role-connection" : {
      "get" : {
        "summary" : "get_application_user_role_connection",
        "description" : "",
        "operationId" : "get_application_user_role_connection",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_application_user_role_connection",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationUserRoleConnectionResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "role_connections.write" ]
        } ]
      },
      "put" : {
        "summary" : "update_application_user_role_connection",
        "description" : "",
        "operationId" : "update_application_user_role_connection",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UsersMeApplicationsRoleConnectionRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for update_application_user_role_connection",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationUserRoleConnectionResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "role_connections.write" ]
        } ]
      }
    },
    "/users/@me/guilds/{guildId}/member" : {
      "get" : {
        "summary" : "get_my_guild_member",
        "description" : "",
        "operationId" : "get_my_guild_member",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_my_guild_member",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrivateGuildMemberResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "guilds.members.read" ]
        } ]
      }
    },
    "/applications/{applicationId}/role-connections/metadata" : {
      "get" : {
        "summary" : "get_application_role_connections_metadata",
        "description" : "",
        "operationId" : "get_application_role_connections_metadata",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_application_role_connections_metadata",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "description" : "",
                  "nullable" : true,
                  "items" : {
                    "$ref" : "#/components/schemas/ApplicationRoleConnectionsMetadataItemResponse"
                  }
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "put" : {
        "summary" : "update_application_role_connections_metadata",
        "description" : "",
        "operationId" : "update_application_role_connections_metadata",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "maxItems" : 5,
                "type" : "array",
                "description" : "",
                "nullable" : true,
                "items" : {
                  "$ref" : "#/components/schemas/ApplicationRoleConnectionsMetadataItemRequest"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for update_application_role_connections_metadata",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "description" : "",
                  "nullable" : true,
                  "items" : {
                    "$ref" : "#/components/schemas/ApplicationRoleConnectionsMetadataItemResponse"
                  }
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/applications/{applicationId}/entitlements/{entitlementId}/consume" : {
      "post" : {
        "summary" : "consume_entitlement",
        "description" : "",
        "operationId" : "consume_entitlement",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "entitlementId",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for consume_entitlement",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        }, {
          "OAuth2" : [ "applications.entitlements" ]
        } ]
      }
    },
    "/applications/{applicationId}/guilds/{guildId}/commands/{commandId}" : {
      "get" : {
        "summary" : "get_guild_application_command",
        "description" : "",
        "operationId" : "get_guild_application_command",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "commandId",
          "in" : "path",
          "description" : "Command ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_guild_application_command",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationCommandResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        }, {
          "OAuth2" : [ "applications.commands.update" ]
        } ]
      },
      "delete" : {
        "summary" : "delete_guild_application_command",
        "description" : "",
        "operationId" : "delete_guild_application_command",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "commandId",
          "in" : "path",
          "description" : "Command ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for delete_guild_application_command",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        }, {
          "OAuth2" : [ "applications.commands.update" ]
        } ]
      },
      "patch" : {
        "summary" : "update_guild_application_command",
        "description" : "",
        "operationId" : "update_guild_application_command",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "commandId",
          "in" : "path",
          "description" : "Command ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationCommandPatchRequestPartial"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for update_guild_application_command",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationCommandResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        }, {
          "OAuth2" : [ "applications.commands.update" ]
        } ]
      }
    },
    "/applications/{applicationId}/guilds/{guildId}/commands" : {
      "get" : {
        "summary" : "list_guild_application_commands",
        "description" : "",
        "operationId" : "list_guild_application_commands",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "with_localizations",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "withLocalizations"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for list_guild_application_commands",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "description" : "",
                  "nullable" : true,
                  "items" : {
                    "$ref" : "#/components/schemas/ApplicationCommandResponse"
                  }
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        }, {
          "OAuth2" : [ "applications.commands.update" ]
        } ]
      },
      "put" : {
        "summary" : "bulk_set_guild_application_commands",
        "description" : "",
        "operationId" : "bulk_set_guild_application_commands",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "maxItems" : 110,
                "type" : "array",
                "description" : "",
                "nullable" : true,
                "items" : {
                  "$ref" : "#/components/schemas/ApplicationCommandUpdateRequest"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for bulk_set_guild_application_commands",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "description" : "",
                  "nullable" : true,
                  "items" : {
                    "$ref" : "#/components/schemas/ApplicationCommandResponse"
                  }
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        }, {
          "OAuth2" : [ "applications.commands.update" ]
        } ]
      },
      "post" : {
        "summary" : "create_guild_application_command",
        "description" : "",
        "operationId" : "create_guild_application_command",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationCommandCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for create_guild_application_command",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationCommandResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "201 response for create_guild_application_command",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationCommandResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        }, {
          "OAuth2" : [ "applications.commands.update" ]
        } ]
      }
    },
    "/channels/{channelId}/thread-members/@me" : {
      "put" : {
        "summary" : "join_thread",
        "description" : "",
        "operationId" : "join_thread",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for join_thread",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "delete" : {
        "summary" : "leave_thread",
        "description" : "",
        "operationId" : "leave_thread",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for leave_thread",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/channels/{channelId}/messages/bulk-delete" : {
      "post" : {
        "summary" : "bulk_delete_messages",
        "description" : "",
        "operationId" : "bulk_delete_messages",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ChannelsMessagesBulkDeleteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "204 response for bulk_delete_messages",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/channels/{channelId}/messages/{messageId}/reactions/{emojiName}/{userId}" : {
      "delete" : {
        "summary" : "delete_user_message_reaction",
        "description" : "",
        "operationId" : "delete_user_message_reaction",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "messageId",
          "in" : "path",
          "description" : "Message ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "emojiName",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "maxLength" : 152133,
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for delete_user_message_reaction",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/channels/{channelId}/messages/{messageId}/reactions/{emojiName}" : {
      "get" : {
        "summary" : "list_message_reactions_by_emoji",
        "description" : "",
        "operationId" : "list_message_reactions_by_emoji",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "messageId",
          "in" : "path",
          "description" : "Message ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "emojiName",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "maxLength" : 152133,
            "type" : "string"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100.0,
            "minimum" : 1.0,
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for list_message_reactions_by_emoji",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "description" : "",
                  "items" : {
                    "$ref" : "#/components/schemas/UserResponse"
                  }
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "delete" : {
        "summary" : "delete_all_message_reactions_by_emoji",
        "description" : "",
        "operationId" : "delete_all_message_reactions_by_emoji",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "messageId",
          "in" : "path",
          "description" : "Message ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "emojiName",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "maxLength" : 152133,
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for delete_all_message_reactions_by_emoji",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/channels/{channelId}/messages/{messageId}/reactions" : {
      "delete" : {
        "summary" : "delete_all_message_reactions",
        "description" : "",
        "operationId" : "delete_all_message_reactions",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "messageId",
          "in" : "path",
          "description" : "Message ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for delete_all_message_reactions",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/channels/{channelId}/messages/{messageId}/crosspost" : {
      "post" : {
        "summary" : "crosspost_message",
        "description" : "",
        "operationId" : "crosspost_message",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "messageId",
          "in" : "path",
          "description" : "Message ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for crosspost_message",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/channels/{channelId}/messages/{messageId}/threads" : {
      "post" : {
        "summary" : "create_thread_from_message",
        "description" : "",
        "operationId" : "create_thread_from_message",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "messageId",
          "in" : "path",
          "description" : "Message ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateTextThreadWithMessageRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "201 response for create_thread_from_message",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThreadResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/webhooks/{webhookId}/{webhookToken}/messages/@original" : {
      "get" : {
        "summary" : "get_original_webhook_message",
        "description" : "",
        "operationId" : "get_original_webhook_message",
        "parameters" : [ {
          "name" : "webhookId",
          "in" : "path",
          "description" : "Webhook ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "webhookToken",
          "in" : "path",
          "description" : "Webhook Token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "maxLength" : 152133,
            "type" : "string"
          }
        }, {
          "name" : "thread_id",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "x-ballerina-name" : "threadId"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_original_webhook_message",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ { }, {
          "BotToken" : [ ]
        } ]
      },
      "delete" : {
        "summary" : "delete_original_webhook_message",
        "description" : "",
        "operationId" : "delete_original_webhook_message",
        "parameters" : [ {
          "name" : "webhookId",
          "in" : "path",
          "description" : "Webhook ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "webhookToken",
          "in" : "path",
          "description" : "Webhook Token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "maxLength" : 152133,
            "type" : "string"
          }
        }, {
          "name" : "thread_id",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "x-ballerina-name" : "threadId"
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for delete_original_webhook_message",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ { }, {
          "BotToken" : [ ]
        } ]
      },
      "patch" : {
        "summary" : "update_original_webhook_message",
        "description" : "",
        "operationId" : "update_original_webhook_message",
        "parameters" : [ {
          "name" : "webhookId",
          "in" : "path",
          "description" : "Webhook ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "webhookToken",
          "in" : "path",
          "description" : "Webhook Token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "maxLength" : 152133,
            "type" : "string"
          }
        }, {
          "name" : "thread_id",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "x-ballerina-name" : "threadId"
        }, {
          "name" : "Content-Type",
          "in" : "header",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/x-www-form-urlencoded" ]
          },
          "x-ballerina-name" : "contentType"
        } ],
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessagesoriginalBody"
              },
              "encoding" : { }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "200 response for update_original_webhook_message",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ { }, {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/scheduled-events/{guildScheduledEventId}/users" : {
      "get" : {
        "summary" : "list_guild_scheduled_event_users",
        "description" : "",
        "operationId" : "list_guild_scheduled_event_users",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "guildScheduledEventId",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "with_member",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "withMember"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100.0,
            "minimum" : 1.0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "before",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for list_guild_scheduled_event_users",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "description" : "",
                  "nullable" : true,
                  "items" : {
                    "$ref" : "#/components/schemas/ScheduledEventUserResponse"
                  }
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/auto-moderation/rules/{ruleId}" : {
      "get" : {
        "summary" : "get_auto_moderation_rule",
        "description" : "",
        "operationId" : "get_auto_moderation_rule",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "ruleId",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_auto_moderation_rule",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse2001"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "delete" : {
        "summary" : "delete_auto_moderation_rule",
        "description" : "",
        "operationId" : "delete_auto_moderation_rule",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "ruleId",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for delete_auto_moderation_rule",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "patch" : {
        "summary" : "update_auto_moderation_rule",
        "description" : "",
        "operationId" : "update_auto_moderation_rule",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "ruleId",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RulesruleIdBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for update_auto_moderation_rule",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse2001"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/auto-moderation/rules" : {
      "get" : {
        "summary" : "list_auto_moderation_rules",
        "description" : "",
        "operationId" : "list_auto_moderation_rules",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for list_auto_moderation_rules",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "description" : "",
                  "nullable" : true,
                  "items" : {
                    "$ref" : "#/components/schemas/InlineResponseItems200"
                  }
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "post" : {
        "summary" : "create_auto_moderation_rule",
        "description" : "",
        "operationId" : "create_auto_moderation_rule",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AutoModerationRulesBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for create_auto_moderation_rule",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse2001"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/voice-states/@me" : {
      "patch" : {
        "summary" : "update_self_voice_state",
        "description" : "",
        "operationId" : "update_self_voice_state",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GuildsVoiceStatesMeRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "204 response for update_self_voice_state",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/members/search" : {
      "get" : {
        "summary" : "search_guild_members",
        "description" : "",
        "operationId" : "search_guild_members",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000.0,
            "minimum" : 1.0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for search_guild_members",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "description" : "",
                  "items" : {
                    "$ref" : "#/components/schemas/GuildMemberResponse"
                  }
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/threads/active" : {
      "get" : {
        "summary" : "get_active_guild_threads",
        "description" : "",
        "operationId" : "get_active_guild_threads",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_active_guild_threads",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThreadsResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/members/@me" : {
      "patch" : {
        "summary" : "update_my_guild_member",
        "description" : "",
        "operationId" : "update_my_guild_member",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GuildsMembersMeRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for update_my_guild_member",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrivateGuildMemberResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/members/{userId}/roles/{roleId}" : {
      "put" : {
        "summary" : "add_guild_member_role",
        "description" : "",
        "operationId" : "add_guild_member_role",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "description" : "Role ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for add_guild_member_role",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "delete" : {
        "summary" : "delete_guild_member_role",
        "description" : "",
        "operationId" : "delete_guild_member_role",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "description" : "Role ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for delete_guild_member_role",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/users/@me/guilds/{guildId}" : {
      "delete" : {
        "summary" : "leave_guild",
        "description" : "",
        "operationId" : "leave_guild",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for leave_guild",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/applications/{applicationId}/entitlements/{entitlementId}" : {
      "get" : {
        "summary" : "get_entitlement",
        "description" : "",
        "operationId" : "get_entitlement",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "entitlementId",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_entitlement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntitlementResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        }, {
          "OAuth2" : [ "applications.entitlements" ]
        } ]
      },
      "delete" : {
        "summary" : "delete_entitlement",
        "description" : "",
        "operationId" : "delete_entitlement",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "entitlementId",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for delete_entitlement",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        }, {
          "OAuth2" : [ "applications.entitlements" ]
        } ]
      }
    },
    "/applications/{applicationId}/entitlements" : {
      "get" : {
        "summary" : "get_entitlements",
        "description" : "",
        "operationId" : "get_entitlements",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "user_id",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "x-ballerina-name" : "userId"
        }, {
          "name" : "sku_ids",
          "in" : "query",
          "description" : "",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/SkuIds"
          },
          "x-ballerina-name" : "skuIds"
        }, {
          "name" : "guild_id",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "x-ballerina-name" : "guildId"
        }, {
          "name" : "before",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100.0,
            "minimum" : 1.0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "exclude_ended",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "excludeEnded"
        }, {
          "name" : "only_active",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "onlyActive"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_entitlements",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "description" : "",
                  "items" : {
                    "$ref" : "#/components/schemas/InlineResponseItems2001"
                  }
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        }, {
          "OAuth2" : [ "applications.entitlements" ]
        } ]
      },
      "post" : {
        "summary" : "create_entitlement",
        "description" : "",
        "operationId" : "create_entitlement",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateEntitlementRequestData"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for create_entitlement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntitlementResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/applications/{applicationId}/commands/{commandId}" : {
      "get" : {
        "summary" : "get_application_command",
        "description" : "",
        "operationId" : "get_application_command",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "commandId",
          "in" : "path",
          "description" : "Command ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_application_command",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationCommandResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        }, {
          "OAuth2" : [ "applications.commands.update" ]
        } ]
      },
      "delete" : {
        "summary" : "delete_application_command",
        "description" : "",
        "operationId" : "delete_application_command",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "commandId",
          "in" : "path",
          "description" : "Command ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for delete_application_command",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        }, {
          "OAuth2" : [ "applications.commands.update" ]
        } ]
      },
      "patch" : {
        "summary" : "update_application_command",
        "description" : "",
        "operationId" : "update_application_command",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "commandId",
          "in" : "path",
          "description" : "Command ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationCommandPatchRequestPartial"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for update_application_command",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationCommandResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        }, {
          "OAuth2" : [ "applications.commands.update" ]
        } ]
      }
    },
    "/applications/{applicationId}/commands" : {
      "get" : {
        "summary" : "list_application_commands",
        "description" : "",
        "operationId" : "list_application_commands",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "with_localizations",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "withLocalizations"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for list_application_commands",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "description" : "",
                  "nullable" : true,
                  "items" : {
                    "$ref" : "#/components/schemas/ApplicationCommandResponse"
                  }
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        }, {
          "OAuth2" : [ "applications.commands.update" ]
        } ]
      },
      "put" : {
        "summary" : "bulk_set_application_commands",
        "description" : "",
        "operationId" : "bulk_set_application_commands",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "maxItems" : 110,
                "type" : "array",
                "description" : "",
                "nullable" : true,
                "items" : {
                  "$ref" : "#/components/schemas/ApplicationCommandUpdateRequest"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for bulk_set_application_commands",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "description" : "",
                  "nullable" : true,
                  "items" : {
                    "$ref" : "#/components/schemas/ApplicationCommandResponse"
                  }
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        }, {
          "OAuth2" : [ "applications.commands.update" ]
        } ]
      },
      "post" : {
        "summary" : "create_application_command",
        "description" : "",
        "operationId" : "create_application_command",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationCommandCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for create_application_command",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationCommandResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "201 response for create_application_command",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationCommandResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        }, {
          "OAuth2" : [ "applications.commands.update" ]
        } ]
      }
    },
    "/interactions/{interactionId}/{interactionToken}/callback" : {
      "post" : {
        "summary" : "create_interaction_response",
        "description" : "",
        "operationId" : "create_interaction_response",
        "parameters" : [ {
          "name" : "interactionId",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "interactionToken",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "maxLength" : 152133,
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InteractionTokenCallbackBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "204 response for create_interaction_response",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ { }, {
          "BotToken" : [ ]
        } ]
      }
    },
    "/channels/{channelId}/thread-members/{userId}" : {
      "get" : {
        "summary" : "get_thread_member",
        "description" : "",
        "operationId" : "get_thread_member",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "with_member",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "withMember"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_thread_member",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThreadMemberResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "put" : {
        "summary" : "add_thread_member",
        "description" : "",
        "operationId" : "add_thread_member",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for add_thread_member",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "delete" : {
        "summary" : "delete_thread_member",
        "description" : "",
        "operationId" : "delete_thread_member",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for delete_thread_member",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/channels/{channelId}/thread-members" : {
      "get" : {
        "summary" : "list_thread_members",
        "description" : "",
        "operationId" : "list_thread_members",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "with_member",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "withMember"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100.0,
            "minimum" : 1.0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for list_thread_members",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "description" : "",
                  "items" : {
                    "$ref" : "#/components/schemas/ThreadMemberResponse"
                  }
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/channels/{channelId}/permissions/{overwriteId}" : {
      "put" : {
        "summary" : "set_channel_permission_overwrite",
        "description" : "",
        "operationId" : "set_channel_permission_overwrite",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "overwriteId",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ChannelsPermissionsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "204 response for set_channel_permission_overwrite",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "delete" : {
        "summary" : "delete_channel_permission_overwrite",
        "description" : "",
        "operationId" : "delete_channel_permission_overwrite",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "overwriteId",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for delete_channel_permission_overwrite",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/channels/{channelId}/recipients/{userId}" : {
      "put" : {
        "summary" : "add_group_dm_user",
        "description" : "",
        "operationId" : "add_group_dm_user",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ChannelsRecipientsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "201 response for add_group_dm_user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse200"
                }
              }
            }
          },
          "204" : {
            "description" : "204 response for add_group_dm_user",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "delete" : {
        "summary" : "delete_group_dm_user",
        "description" : "",
        "operationId" : "delete_group_dm_user",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for delete_group_dm_user",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/channels/{channelId}/followers" : {
      "post" : {
        "summary" : "follow_channel",
        "description" : "",
        "operationId" : "follow_channel",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ChannelsFollowersRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for follow_channel",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ChannelFollowerResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/channels/{channelId}/messages/{messageId}" : {
      "get" : {
        "summary" : "get_message",
        "description" : "",
        "operationId" : "get_message",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "messageId",
          "in" : "path",
          "description" : "Message ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_message",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "delete" : {
        "summary" : "delete_message",
        "description" : "",
        "operationId" : "delete_message",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "messageId",
          "in" : "path",
          "description" : "Message ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for delete_message",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "patch" : {
        "summary" : "update_message",
        "description" : "",
        "operationId" : "update_message",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "messageId",
          "in" : "path",
          "description" : "Message ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "Content-Type",
          "in" : "header",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/x-www-form-urlencoded" ]
          },
          "x-ballerina-name" : "contentType"
        } ],
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessagesmessageIdBody"
              },
              "encoding" : { }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "200 response for update_message",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/channels/{channelId}/messages" : {
      "get" : {
        "summary" : "list_messages",
        "description" : "",
        "operationId" : "list_messages",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "around",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "before",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100.0,
            "minimum" : 1.0,
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for list_messages",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "description" : "",
                  "nullable" : true,
                  "items" : {
                    "$ref" : "#/components/schemas/MessageResponse"
                  }
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "post" : {
        "summary" : "create_message",
        "description" : "",
        "operationId" : "create_message",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "Content-Type",
          "in" : "header",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/x-www-form-urlencoded" ]
          },
          "x-ballerina-name" : "contentType"
        } ],
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/ChannelIdMessagesBody"
              },
              "encoding" : { }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "200 response for create_message",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/channels/{channelId}/webhooks" : {
      "get" : {
        "summary" : "list_channel_webhooks",
        "description" : "",
        "operationId" : "list_channel_webhooks",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for list_channel_webhooks",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "description" : "",
                  "nullable" : true,
                  "items" : {
                    "$ref" : "#/components/schemas/InlineResponseItems2002"
                  }
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "post" : {
        "summary" : "create_webhook",
        "description" : "",
        "operationId" : "create_webhook",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ChannelsWebhooksRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for create_webhook",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuildIncomingWebhookResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/channels/{channelId}/invites" : {
      "get" : {
        "summary" : "list_channel_invites",
        "description" : "",
        "operationId" : "list_channel_invites",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for list_channel_invites",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "description" : "",
                  "nullable" : true,
                  "items" : {
                    "$ref" : "#/components/schemas/InlineResponseItems2003"
                  }
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "post" : {
        "summary" : "create_channel_invite",
        "description" : "",
        "operationId" : "create_channel_invite",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ChannelIdInvitesBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for create_channel_invite",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse2002"
                }
              }
            }
          },
          "204" : {
            "description" : "204 response for create_channel_invite",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/channels/{channelId}/threads" : {
      "post" : {
        "summary" : "create_thread",
        "description" : "",
        "operationId" : "create_thread",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ChannelIdThreadsBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "201 response for create_thread",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreatedThreadResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/channels/{channelId}/typing" : {
      "post" : {
        "summary" : "trigger_typing_indicator",
        "description" : "",
        "operationId" : "trigger_typing_indicator",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for trigger_typing_indicator",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "204" : {
            "description" : "204 response for trigger_typing_indicator",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/channels/{channelId}/pins/{messageId}" : {
      "put" : {
        "summary" : "pin_message",
        "description" : "",
        "operationId" : "pin_message",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "messageId",
          "in" : "path",
          "description" : "Message ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for pin_message",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "delete" : {
        "summary" : "unpin_message",
        "description" : "",
        "operationId" : "unpin_message",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "messageId",
          "in" : "path",
          "description" : "Message ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for unpin_message",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/channels/{channelId}/pins" : {
      "get" : {
        "summary" : "list_pinned_messages",
        "description" : "",
        "operationId" : "list_pinned_messages",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for list_pinned_messages",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "description" : "",
                  "nullable" : true,
                  "items" : {
                    "$ref" : "#/components/schemas/MessageResponse"
                  }
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/webhooks/{webhookId}/{webhookToken}/messages/{messageId}" : {
      "get" : {
        "summary" : "get_webhook_message",
        "description" : "",
        "operationId" : "get_webhook_message",
        "parameters" : [ {
          "name" : "webhookId",
          "in" : "path",
          "description" : "Webhook ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "webhookToken",
          "in" : "path",
          "description" : "Webhook Token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "maxLength" : 152133,
            "type" : "string"
          }
        }, {
          "name" : "messageId",
          "in" : "path",
          "description" : "Message ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "thread_id",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "x-ballerina-name" : "threadId"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_webhook_message",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ { }, {
          "BotToken" : [ ]
        } ]
      },
      "delete" : {
        "summary" : "delete_webhook_message",
        "description" : "",
        "operationId" : "delete_webhook_message",
        "parameters" : [ {
          "name" : "webhookId",
          "in" : "path",
          "description" : "Webhook ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "webhookToken",
          "in" : "path",
          "description" : "Webhook Token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "maxLength" : 152133,
            "type" : "string"
          }
        }, {
          "name" : "messageId",
          "in" : "path",
          "description" : "Message ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "thread_id",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "x-ballerina-name" : "threadId"
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for delete_webhook_message",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ { }, {
          "BotToken" : [ ]
        } ]
      },
      "patch" : {
        "summary" : "update_webhook_message",
        "description" : "",
        "operationId" : "update_webhook_message",
        "parameters" : [ {
          "name" : "webhookId",
          "in" : "path",
          "description" : "Webhook ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "webhookToken",
          "in" : "path",
          "description" : "Webhook Token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "maxLength" : 152133,
            "type" : "string"
          }
        }, {
          "name" : "messageId",
          "in" : "path",
          "description" : "Message ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "thread_id",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "x-ballerina-name" : "threadId"
        }, {
          "name" : "Content-Type",
          "in" : "header",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/x-www-form-urlencoded" ]
          },
          "x-ballerina-name" : "contentType"
        } ],
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessagesmessageIdBody1"
              },
              "encoding" : { }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "200 response for update_webhook_message",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ { }, {
          "BotToken" : [ ]
        } ]
      }
    },
    "/webhooks/{webhookId}/{webhookToken}/github" : {
      "post" : {
        "summary" : "execute_github_compatible_webhook",
        "description" : "",
        "operationId" : "execute_github_compatible_webhook",
        "parameters" : [ {
          "name" : "webhookId",
          "in" : "path",
          "description" : "Webhook ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "webhookToken",
          "in" : "path",
          "description" : "Webhook Token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "maxLength" : 152133,
            "type" : "string"
          }
        }, {
          "name" : "wait",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "thread_id",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "x-ballerina-name" : "threadId"
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GithubWebhook"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "204 response for execute_github_compatible_webhook",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ { }, {
          "BotToken" : [ ]
        } ]
      }
    },
    "/webhooks/{webhookId}/{webhookToken}/slack" : {
      "post" : {
        "summary" : "execute_slack_compatible_webhook",
        "description" : "",
        "operationId" : "execute_slack_compatible_webhook",
        "parameters" : [ {
          "name" : "webhookId",
          "in" : "path",
          "description" : "Webhook ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "webhookToken",
          "in" : "path",
          "description" : "Webhook Token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "maxLength" : 152133,
            "type" : "string"
          }
        }, {
          "name" : "wait",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "thread_id",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "x-ballerina-name" : "threadId"
        }, {
          "name" : "Content-Type",
          "in" : "header",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/x-www-form-urlencoded" ]
          },
          "x-ballerina-name" : "contentType"
        } ],
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebhookTokenSlackBody"
              },
              "encoding" : { }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "200 response for execute_slack_compatible_webhook",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ { }, {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/templates/{code}" : {
      "get" : {
        "summary" : "get_guild_template",
        "description" : "",
        "operationId" : "get_guild_template",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "maxLength" : 152133,
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_guild_template",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuildTemplateResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ { }, {
          "BotToken" : [ ]
        } ]
      },
      "post" : {
        "summary" : "create_guild_from_template",
        "description" : "",
        "operationId" : "create_guild_from_template",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "maxLength" : 152133,
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GuildsTemplatesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "201 response for create_guild_from_template",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuildResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/new-member-welcome" : {
      "get" : {
        "summary" : "get_guild_new_member_welcome",
        "description" : "",
        "operationId" : "get_guild_new_member_welcome",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_guild_new_member_welcome",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuildHomeSettingsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "204 response for get_guild_new_member_welcome",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/scheduled-events/{guildScheduledEventId}" : {
      "get" : {
        "summary" : "get_guild_scheduled_event",
        "description" : "",
        "operationId" : "get_guild_scheduled_event",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "guildScheduledEventId",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "with_user_count",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "withUserCount"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_guild_scheduled_event",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse2003"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "delete" : {
        "summary" : "delete_guild_scheduled_event",
        "description" : "",
        "operationId" : "delete_guild_scheduled_event",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "guildScheduledEventId",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for delete_guild_scheduled_event",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "patch" : {
        "summary" : "update_guild_scheduled_event",
        "description" : "",
        "operationId" : "update_guild_scheduled_event",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "guildScheduledEventId",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ScheduledEventsguildScheduledEventIdBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for update_guild_scheduled_event",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse2003"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/scheduled-events" : {
      "get" : {
        "summary" : "list_guild_scheduled_events",
        "description" : "",
        "operationId" : "list_guild_scheduled_events",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "with_user_count",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "withUserCount"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for list_guild_scheduled_events",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "description" : "",
                  "nullable" : true,
                  "items" : {
                    "$ref" : "#/components/schemas/InlineResponseItems2004"
                  }
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "post" : {
        "summary" : "create_guild_scheduled_event",
        "description" : "",
        "operationId" : "create_guild_scheduled_event",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GuildIdScheduledEventsBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for create_guild_scheduled_event",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse2003"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/welcome-screen" : {
      "get" : {
        "summary" : "get_guild_welcome_screen",
        "description" : "",
        "operationId" : "get_guild_welcome_screen",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_guild_welcome_screen",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuildWelcomeScreenResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "patch" : {
        "summary" : "update_guild_welcome_screen",
        "description" : "",
        "operationId" : "update_guild_welcome_screen",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WelcomeScreenPatchRequestPartial"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for update_guild_welcome_screen",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuildWelcomeScreenResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/voice-states/{userId}" : {
      "patch" : {
        "summary" : "update_voice_state",
        "description" : "",
        "operationId" : "update_voice_state",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GuildsVoiceStatesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "204 response for update_voice_state",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/integrations/{integrationId}" : {
      "delete" : {
        "summary" : "delete_guild_integration",
        "description" : "",
        "operationId" : "delete_guild_integration",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "integrationId",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for delete_guild_integration",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/integrations" : {
      "get" : {
        "summary" : "list_guild_integrations",
        "description" : "",
        "operationId" : "list_guild_integrations",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for list_guild_integrations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "description" : "",
                  "nullable" : true,
                  "items" : {
                    "$ref" : "#/components/schemas/InlineResponseItems2005"
                  }
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/widget.json" : {
      "get" : {
        "summary" : "get_guild_widget",
        "description" : "",
        "operationId" : "get_guild_widget",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_guild_widget",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WidgetResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ { }, {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/onboarding" : {
      "get" : {
        "summary" : "get_guilds_onboarding",
        "description" : "",
        "operationId" : "get_guilds_onboarding",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_guilds_onboarding",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserGuildOnboardingResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "put" : {
        "summary" : "put_guilds_onboarding",
        "description" : "",
        "operationId" : "put_guilds_onboarding",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateGuildOnboardingRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for put_guilds_onboarding",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuildOnboardingResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/vanity-url" : {
      "get" : {
        "summary" : "get_guild_vanity_url",
        "description" : "",
        "operationId" : "get_guild_vanity_url",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_guild_vanity_url",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VanityURLResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/audit-logs" : {
      "get" : {
        "summary" : "list_guild_audit_log_entries",
        "description" : "",
        "operationId" : "list_guild_audit_log_entries",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "user_id",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "x-ballerina-name" : "userId"
        }, {
          "name" : "target_id",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "x-ballerina-name" : "targetId"
        }, {
          "name" : "action_type",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "actionType"
        }, {
          "name" : "before",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100.0,
            "minimum" : 1.0,
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for list_guild_audit_log_entries",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuildAuditLogResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/widget.png" : {
      "get" : {
        "summary" : "get_guild_widget_png",
        "description" : "",
        "operationId" : "get_guild_widget_png",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "style",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/WidgetImageStyles"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_guild_widget_png",
            "content" : {
              "image/png" : {
                "schema" : { }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ { }, {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/templates/{code}" : {
      "put" : {
        "summary" : "sync_guild_template",
        "description" : "",
        "operationId" : "sync_guild_template",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "maxLength" : 152133,
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for sync_guild_template",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuildTemplateResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "delete" : {
        "summary" : "delete_guild_template",
        "description" : "",
        "operationId" : "delete_guild_template",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "maxLength" : 152133,
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for delete_guild_template",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuildTemplateResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "patch" : {
        "summary" : "update_guild_template",
        "description" : "",
        "operationId" : "update_guild_template",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "maxLength" : 152133,
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GuildsTemplatesRequest1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for update_guild_template",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuildTemplateResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/templates" : {
      "get" : {
        "summary" : "list_guild_templates",
        "description" : "",
        "operationId" : "list_guild_templates",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for list_guild_templates",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "description" : "",
                  "nullable" : true,
                  "items" : {
                    "$ref" : "#/components/schemas/GuildTemplateResponse"
                  }
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "post" : {
        "summary" : "create_guild_template",
        "description" : "",
        "operationId" : "create_guild_template",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GuildsTemplatesRequest2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for create_guild_template",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuildTemplateResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/stickers/{stickerId}" : {
      "get" : {
        "summary" : "get_guild_sticker",
        "description" : "",
        "operationId" : "get_guild_sticker",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "stickerId",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_guild_sticker",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuildStickerResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "delete" : {
        "summary" : "delete_guild_sticker",
        "description" : "",
        "operationId" : "delete_guild_sticker",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "stickerId",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for delete_guild_sticker",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "patch" : {
        "summary" : "update_guild_sticker",
        "description" : "",
        "operationId" : "update_guild_sticker",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "stickerId",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GuildsStickersRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for update_guild_sticker",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuildStickerResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/bulk-ban" : {
      "post" : {
        "summary" : "bulk_ban_users_from_guild",
        "description" : "",
        "operationId" : "bulk_ban_users_from_guild",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GuildsBulkBanRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for bulk_ban_users_from_guild",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkBanUsersResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/stickers" : {
      "get" : {
        "summary" : "list_guild_stickers",
        "description" : "",
        "operationId" : "list_guild_stickers",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for list_guild_stickers",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "description" : "",
                  "items" : {
                    "$ref" : "#/components/schemas/GuildStickerResponse"
                  }
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "post" : {
        "summary" : "create_guild_sticker",
        "description" : "",
        "operationId" : "create_guild_sticker",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/GuildIdStickersBody"
              },
              "encoding" : { }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "201 response for create_guild_sticker",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuildStickerResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/webhooks" : {
      "get" : {
        "summary" : "get_guild_webhooks",
        "description" : "",
        "operationId" : "get_guild_webhooks",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_guild_webhooks",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "description" : "",
                  "nullable" : true,
                  "items" : {
                    "$ref" : "#/components/schemas/InlineResponseItems2006"
                  }
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/channels" : {
      "get" : {
        "summary" : "list_guild_channels",
        "description" : "",
        "operationId" : "list_guild_channels",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for list_guild_channels",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "description" : "",
                  "nullable" : true,
                  "items" : {
                    "$ref" : "#/components/schemas/InlineResponseItems2007"
                  }
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "post" : {
        "summary" : "create_guild_channel",
        "description" : "",
        "operationId" : "create_guild_channel",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateGuildChannelRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "201 response for create_guild_channel",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuildChannelResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "patch" : {
        "summary" : "bulk_update_guild_channels",
        "description" : "",
        "operationId" : "bulk_update_guild_channels",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "description" : "",
                "items" : {
                  "$ref" : "#/components/schemas/GuildsChannelsRequest"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "204 response for bulk_update_guild_channels",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/members/{userId}" : {
      "get" : {
        "summary" : "get_guild_member",
        "description" : "",
        "operationId" : "get_guild_member",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_guild_member",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuildMemberResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "put" : {
        "summary" : "add_guild_member",
        "description" : "",
        "operationId" : "add_guild_member",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GuildsMembersRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "201 response for add_guild_member",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuildMemberResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "204 response for add_guild_member",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "delete" : {
        "summary" : "delete_guild_member",
        "description" : "",
        "operationId" : "delete_guild_member",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for delete_guild_member",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "patch" : {
        "summary" : "update_guild_member",
        "description" : "",
        "operationId" : "update_guild_member",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GuildsMembersRequest1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for update_guild_member",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuildMemberResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "204 response for update_guild_member",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/members" : {
      "get" : {
        "summary" : "list_guild_members",
        "description" : "",
        "operationId" : "list_guild_members",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000.0,
            "minimum" : 1.0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for list_guild_members",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "description" : "",
                  "items" : {
                    "$ref" : "#/components/schemas/GuildMemberResponse"
                  }
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/preview" : {
      "get" : {
        "summary" : "get_guild_preview",
        "description" : "",
        "operationId" : "get_guild_preview",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_guild_preview",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuildPreviewResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/invites" : {
      "get" : {
        "summary" : "list_guild_invites",
        "description" : "",
        "operationId" : "list_guild_invites",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for list_guild_invites",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "description" : "",
                  "nullable" : true,
                  "items" : {
                    "$ref" : "#/components/schemas/InlineResponseItems2008"
                  }
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/regions" : {
      "get" : {
        "summary" : "list_guild_voice_regions",
        "description" : "",
        "operationId" : "list_guild_voice_regions",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for list_guild_voice_regions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "description" : "",
                  "nullable" : true,
                  "items" : {
                    "$ref" : "#/components/schemas/VoiceRegionResponse"
                  }
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/emojis/{emojiId}" : {
      "get" : {
        "summary" : "get_guild_emoji",
        "description" : "",
        "operationId" : "get_guild_emoji",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "emojiId",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_guild_emoji",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmojiResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "delete" : {
        "summary" : "delete_guild_emoji",
        "description" : "",
        "operationId" : "delete_guild_emoji",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "emojiId",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for delete_guild_emoji",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "patch" : {
        "summary" : "update_guild_emoji",
        "description" : "",
        "operationId" : "update_guild_emoji",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "emojiId",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GuildsEmojisRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for update_guild_emoji",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmojiResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/emojis" : {
      "get" : {
        "summary" : "list_guild_emojis",
        "description" : "",
        "operationId" : "list_guild_emojis",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for list_guild_emojis",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "description" : "",
                  "nullable" : true,
                  "items" : {
                    "$ref" : "#/components/schemas/EmojiResponse"
                  }
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "post" : {
        "summary" : "create_guild_emoji",
        "description" : "",
        "operationId" : "create_guild_emoji",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GuildsEmojisRequest1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "201 response for create_guild_emoji",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmojiResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/widget" : {
      "get" : {
        "summary" : "get_guild_widget_settings",
        "description" : "",
        "operationId" : "get_guild_widget_settings",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_guild_widget_settings",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WidgetSettingsResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "patch" : {
        "summary" : "update_guild_widget_settings",
        "description" : "",
        "operationId" : "update_guild_widget_settings",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GuildsWidgetRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for update_guild_widget_settings",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WidgetSettingsResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/roles/{roleId}" : {
      "delete" : {
        "summary" : "delete_guild_role",
        "description" : "",
        "operationId" : "delete_guild_role",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "description" : "Role ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for delete_guild_role",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "patch" : {
        "summary" : "update_guild_role",
        "description" : "",
        "operationId" : "update_guild_role",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "description" : "Role ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GuildsRolesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for update_guild_role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuildRoleResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/roles" : {
      "get" : {
        "summary" : "list_guild_roles",
        "description" : "",
        "operationId" : "list_guild_roles",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for list_guild_roles",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "description" : "",
                  "items" : {
                    "$ref" : "#/components/schemas/GuildRoleResponse"
                  }
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "post" : {
        "summary" : "create_guild_role",
        "description" : "",
        "operationId" : "create_guild_role",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GuildsRolesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for create_guild_role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuildRoleResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "patch" : {
        "summary" : "bulk_update_guild_roles",
        "description" : "",
        "operationId" : "bulk_update_guild_roles",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "description" : "",
                "items" : {
                  "$ref" : "#/components/schemas/GuildsRolesRequest2"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for bulk_update_guild_roles",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "description" : "",
                  "items" : {
                    "$ref" : "#/components/schemas/GuildRoleResponse"
                  }
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/prune" : {
      "get" : {
        "summary" : "preview_prune_guild",
        "description" : "",
        "operationId" : "preview_prune_guild",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "days",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 30.0,
            "minimum" : 1.0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "include_roles",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/IncludeRoles"
          },
          "x-ballerina-name" : "includeRoles"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for preview_prune_guild",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuildPruneResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "post" : {
        "summary" : "prune_guild",
        "description" : "",
        "operationId" : "prune_guild",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GuildsPruneRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for prune_guild",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuildPruneResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/bans/{userId}" : {
      "get" : {
        "summary" : "get_guild_ban",
        "description" : "",
        "operationId" : "get_guild_ban",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_guild_ban",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuildBanResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "put" : {
        "summary" : "ban_user_from_guild",
        "description" : "",
        "operationId" : "ban_user_from_guild",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GuildsBansRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "204 response for ban_user_from_guild",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "delete" : {
        "summary" : "unban_user_from_guild",
        "description" : "",
        "operationId" : "unban_user_from_guild",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for unban_user_from_guild",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/bans" : {
      "get" : {
        "summary" : "list_guild_bans",
        "description" : "",
        "operationId" : "list_guild_bans",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000.0,
            "minimum" : 1.0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "before",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for list_guild_bans",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "description" : "",
                  "nullable" : true,
                  "items" : {
                    "$ref" : "#/components/schemas/GuildBanResponse"
                  }
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}/mfa" : {
      "post" : {
        "summary" : "set_guild_mfa_level",
        "description" : "",
        "operationId" : "set_guild_mfa_level",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GuildMFALevelResponse"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for set_guild_mfa_level",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuildMFALevelResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/stage-instances/{channelId}" : {
      "get" : {
        "summary" : "get_stage_instance",
        "description" : "",
        "operationId" : "get_stage_instance",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_stage_instance",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StageInstanceResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "delete" : {
        "summary" : "delete_stage_instance",
        "description" : "",
        "operationId" : "delete_stage_instance",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for delete_stage_instance",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "patch" : {
        "summary" : "update_stage_instance",
        "description" : "",
        "operationId" : "update_stage_instance",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StageInstancesRequest1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for update_stage_instance",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StageInstanceResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/applications/{applicationId}" : {
      "get" : {
        "summary" : "get_application",
        "description" : "",
        "operationId" : "get_application",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_application",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrivateApplicationResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "patch" : {
        "summary" : "update_application",
        "description" : "",
        "operationId" : "update_application",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationFormPartial"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for update_application",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrivateApplicationResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/webhooks/{webhookId}/{webhookToken}" : {
      "get" : {
        "summary" : "get_webhook_by_token",
        "description" : "",
        "operationId" : "get_webhook_by_token",
        "parameters" : [ {
          "name" : "webhookId",
          "in" : "path",
          "description" : "Webhook ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "webhookToken",
          "in" : "path",
          "description" : "Webhook Token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "maxLength" : 152133,
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_webhook_by_token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse2004"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ { }, {
          "BotToken" : [ ]
        } ]
      },
      "post" : {
        "summary" : "execute_webhook",
        "description" : "",
        "operationId" : "execute_webhook",
        "parameters" : [ {
          "name" : "webhookId",
          "in" : "path",
          "description" : "Webhook ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "webhookToken",
          "in" : "path",
          "description" : "Webhook Token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "maxLength" : 152133,
            "type" : "string"
          }
        }, {
          "name" : "wait",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "thread_id",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "x-ballerina-name" : "threadId"
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebhookIdwebhookTokenBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for execute_webhook",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "204 response for execute_webhook",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ { }, {
          "BotToken" : [ ]
        } ]
      },
      "delete" : {
        "summary" : "delete_webhook_by_token",
        "description" : "",
        "operationId" : "delete_webhook_by_token",
        "parameters" : [ {
          "name" : "webhookId",
          "in" : "path",
          "description" : "Webhook ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "webhookToken",
          "in" : "path",
          "description" : "Webhook Token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "maxLength" : 152133,
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for delete_webhook_by_token",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ { }, {
          "BotToken" : [ ]
        } ]
      },
      "patch" : {
        "summary" : "update_webhook_by_token",
        "description" : "",
        "operationId" : "update_webhook_by_token",
        "parameters" : [ {
          "name" : "webhookId",
          "in" : "path",
          "description" : "Webhook ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "webhookToken",
          "in" : "path",
          "description" : "Webhook Token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "maxLength" : 152133,
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebhooksRequest1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for update_webhook_by_token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse2004"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ { }, {
          "BotToken" : [ ]
        } ]
      }
    },
    "/stickers/{stickerId}" : {
      "get" : {
        "summary" : "get_sticker",
        "description" : "",
        "operationId" : "get_sticker",
        "parameters" : [ {
          "name" : "stickerId",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_sticker",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse2005"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/webhooks/{webhookId}" : {
      "get" : {
        "summary" : "get_webhook",
        "description" : "",
        "operationId" : "get_webhook",
        "parameters" : [ {
          "name" : "webhookId",
          "in" : "path",
          "description" : "Webhook ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_webhook",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse2004"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "delete" : {
        "summary" : "delete_webhook",
        "description" : "",
        "operationId" : "delete_webhook",
        "parameters" : [ {
          "name" : "webhookId",
          "in" : "path",
          "description" : "Webhook ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for delete_webhook",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "patch" : {
        "summary" : "update_webhook",
        "description" : "",
        "operationId" : "update_webhook",
        "parameters" : [ {
          "name" : "webhookId",
          "in" : "path",
          "description" : "Webhook ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebhooksRequest2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for update_webhook",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse2004"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/channels/{channelId}" : {
      "get" : {
        "summary" : "get_channel",
        "description" : "",
        "operationId" : "get_channel",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_channel",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse2006"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "delete" : {
        "summary" : "delete_channel",
        "description" : "",
        "operationId" : "delete_channel",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for delete_channel",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse2006"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "patch" : {
        "summary" : "update_channel",
        "description" : "",
        "operationId" : "update_channel",
        "parameters" : [ {
          "name" : "channelId",
          "in" : "path",
          "description" : "Channel ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ChannelschannelIdBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for update_channel",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse2006"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/invites/{code}" : {
      "get" : {
        "summary" : "invite_resolve",
        "description" : "",
        "operationId" : "invite_resolve",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "maxLength" : 152133,
            "type" : "string"
          }
        }, {
          "name" : "with_counts",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "withCounts"
        }, {
          "name" : "guild_scheduled_event_id",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "x-ballerina-name" : "guildScheduledEventId"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for invite_resolve",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse2002"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ { }, {
          "BotToken" : [ ]
        } ]
      },
      "delete" : {
        "summary" : "invite_revoke",
        "description" : "",
        "operationId" : "invite_revoke",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "maxLength" : 152133,
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for invite_revoke",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse2002"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/guilds/{guildId}" : {
      "get" : {
        "summary" : "get_guild",
        "description" : "",
        "operationId" : "get_guild",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }, {
          "name" : "with_counts",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "withCounts"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_guild",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuildWithCountsResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "delete" : {
        "summary" : "delete_guild",
        "description" : "",
        "operationId" : "delete_guild",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response for delete_guild",
            "content" : { }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      },
      "patch" : {
        "summary" : "update_guild",
        "description" : "",
        "operationId" : "update_guild",
        "parameters" : [ {
          "name" : "guildId",
          "in" : "path",
          "description" : "Guild ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GuildPatchRequestPartial"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response for update_guild",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuildResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    },
    "/users/{userId}" : {
      "get" : {
        "summary" : "get_user",
        "description" : "",
        "operationId" : "get_user",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for get_user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "4XX" : {
            "description" : "Client error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse4XX"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "BotToken" : [ ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "VOICECHANNELSTATUSCREATE" : {
        "title" : "VOICE_CHANNEL_STATUS_CREATE",
        "type" : "integer",
        "enum" : [ 192 ]
      },
      "DATETIMEGREATERTHANEQUAL" : {
        "title" : "DATETIME_GREATER_THAN_EQUAL",
        "type" : "integer",
        "description" : "the metadata value (ISO8601 string) is greater than or equal to the guild's configured value (integer; days before current date)",
        "enum" : [ 6 ]
      },
      "CommandPermissionResponse" : {
        "title" : "CommandPermissionResponse",
        "required" : [ "id", "permission", "type" ],
        "type" : "object",
        "properties" : {
          "permission" : {
            "type" : "boolean"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/ApplicationCommandPermissionType"
          }
        }
      },
      "ZhCN" : {
        "title" : "zh-CN",
        "type" : "string",
        "description" : "The zh-CN locale",
        "enum" : [ "zh-CN" ]
      },
      "PrivateChannelRequestPartial" : {
        "title" : "PrivateChannelRequestPartial",
        "type" : "object",
        "properties" : {
          "name" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "nullable" : true
          },
          "icon" : {
            "type" : "string",
            "format" : "binary",
            "nullable" : true
          }
        }
      },
      "ModalInteractionCallbackData1" : {
        "title" : "ModalInteractionCallbackData1",
        "required" : [ "components", "custom_id", "title" ],
        "type" : "object",
        "properties" : {
          "components" : {
            "maxItems" : 5,
            "minItems" : 1,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ActionRow2"
            }
          },
          "tts" : {
            "type" : "boolean",
            "nullable" : true
          },
          "attachments" : {
            "maxItems" : 10,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/MessageAttachmentRequest"
            }
          },
          "custom_id" : {
            "maxLength" : 100,
            "type" : "string",
            "x-ballerina-name" : "customId"
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "allowed_mentions" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MessageAllowedMentionsRequest"
            } ],
            "x-ballerina-name" : "allowedMentions"
          },
          "title" : {
            "maxLength" : 45,
            "type" : "string"
          },
          "choices" : {
            "maxItems" : 25,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ModalInteractionCallbackData1Choices"
            }
          },
          "embeds" : {
            "maxItems" : 10,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/RichEmbed1"
            }
          },
          "content" : {
            "maxLength" : 2000,
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "GuildCreateRequest" : {
        "title" : "GuildCreateRequest",
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "preferred_locale" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/AvailableLocalesEnum"
              } ]
            }, { } ],
            "x-ballerina-name" : "preferredLocale"
          },
          "default_message_notifications" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/UserNotificationSettings"
              } ]
            }, { } ],
            "x-ballerina-name" : "defaultMessageNotifications"
          },
          "roles" : {
            "maxItems" : 1521,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/CreateGuildRequestRoleItem"
            }
          },
          "system_channel_flags" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "systemChannelFlags"
          },
          "icon" : {
            "type" : "string",
            "format" : "binary",
            "nullable" : true
          },
          "description" : {
            "maxLength" : 120,
            "minLength" : 0,
            "type" : "string",
            "nullable" : true
          },
          "system_channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "systemChannelId"
          },
          "afk_timeout" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/AfkTimeouts"
              } ]
            }, { } ],
            "x-ballerina-name" : "afkTimeout"
          },
          "verification_level" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/VerificationLevels"
              } ]
            }, { } ],
            "x-ballerina-name" : "verificationLevel"
          },
          "explicit_content_filter" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/GuildExplicitContentFilterTypes"
              } ]
            }, { } ],
            "x-ballerina-name" : "explicitContentFilter"
          },
          "channels" : {
            "maxItems" : 1521,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/CreateGuildRequestChannelItem"
            }
          },
          "afk_channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "afkChannelId"
          },
          "name" : {
            "maxLength" : 100,
            "minLength" : 2,
            "type" : "string"
          },
          "region" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "INVITEUPDATE" : {
        "title" : "INVITE_UPDATE",
        "type" : "integer",
        "enum" : [ 41 ]
      },
      "GithubCheckSuite" : {
        "title" : "GithubCheckSuite",
        "required" : [ "app", "head_sha" ],
        "type" : "object",
        "properties" : {
          "conclusion" : {
            "maxLength" : 152133,
            "type" : "string",
            "nullable" : true
          },
          "app" : {
            "$ref" : "#/components/schemas/GithubCheckApp"
          },
          "pull_requests" : {
            "maxItems" : 1521,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/GithubCheckPullRequest"
            },
            "x-ballerina-name" : "pullRequests"
          },
          "head_branch" : {
            "maxLength" : 152133,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "headBranch"
          },
          "head_sha" : {
            "maxLength" : 152133,
            "type" : "string",
            "x-ballerina-name" : "headSha"
          }
        }
      },
      "ChannelsInvitesRequest" : {
        "title" : "ChannelsInvitesRequest",
        "type" : "object",
        "properties" : {
          "max_age" : {
            "maximum" : 604800.0,
            "minimum" : 1.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxAge"
          },
          "temporary" : {
            "type" : "boolean",
            "nullable" : true
          },
          "max_uses" : {
            "maximum" : 100.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxUses"
          },
          "unique" : {
            "type" : "boolean",
            "nullable" : true
          },
          "target_type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/InviteTargetTypes"
              } ]
            }, { } ],
            "x-ballerina-name" : "targetType"
          },
          "target_user_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "targetUserId"
          },
          "target_application_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "targetApplicationId"
          }
        }
      },
      "GuildAuditLogResponseIntegrations" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/PartialDiscordIntegrationResponse"
        }, {
          "$ref" : "#/components/schemas/PartialExternalConnectionIntegrationResponse"
        }, {
          "$ref" : "#/components/schemas/PartialGuildSubscriptionIntegrationResponse"
        } ]
      },
      "UNFULFILLMENTNEEDED" : {
        "title" : "UNFULFILLMENT_NEEDED",
        "type" : "integer",
        "enum" : [ 5 ]
      },
      "PurchaseType" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/GUILDPRODUCT"
        } ]
      },
      "ROLEDELETE" : {
        "title" : "ROLE_DELETE",
        "type" : "integer",
        "enum" : [ 32 ]
      },
      "UserSelect" : {
        "title" : "UserSelect",
        "required" : [ "custom_id", "type" ],
        "type" : "object",
        "properties" : {
          "default_values" : {
            "maxItems" : 25,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/UserSelectDefaultValue"
            },
            "x-ballerina-name" : "defaultValues"
          },
          "min_values" : {
            "maximum" : 25.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "minValues"
          },
          "custom_id" : {
            "maxLength" : 100,
            "type" : "string",
            "x-ballerina-name" : "customId"
          },
          "max_values" : {
            "maximum" : 25.0,
            "minimum" : 1.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxValues"
          },
          "disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "placeholder" : {
            "maxLength" : 150,
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 5 ]
          }
        }
      },
      "OptionsOneOf101" : {
        "nullable" : true
      },
      "THREADUPDATE" : {
        "title" : "THREAD_UPDATE",
        "type" : "integer",
        "enum" : [ 111 ]
      },
      "BLOCKMESSAGE" : {
        "title" : "BLOCK_MESSAGE",
        "type" : "integer",
        "description" : "Block a user's message and prevent it from being posted. A custom explanation can be specified and shown to members whenever their message is blocked",
        "enum" : [ 1 ]
      },
      "MENTIONSPAM" : {
        "title" : "MENTION_SPAM",
        "type" : "integer",
        "description" : "Check if content contains more unique mentions than allowed",
        "enum" : [ 5 ]
      },
      "EMOJICREATE" : {
        "title" : "EMOJI_CREATE",
        "type" : "integer",
        "enum" : [ 60 ]
      },
      "HOMESETTINGSUPDATE" : {
        "title" : "HOME_SETTINGS_UPDATE",
        "type" : "integer",
        "enum" : [ 191 ]
      },
      "ApplicationCommandStringOptionResponse" : {
        "title" : "ApplicationCommandStringOptionResponse",
        "required" : [ "description", "name", "type" ],
        "type" : "object",
        "properties" : {
          "name_localized" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "nameLocalized"
          },
          "name_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "nameLocalizations"
          },
          "autocomplete" : {
            "type" : "boolean",
            "nullable" : true
          },
          "min_length" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "minLength"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "description_localized" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalized"
          },
          "description_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalizations"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 3 ]
          },
          "choices" : {
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ApplicationCommandOptionStringChoiceResponse"
            }
          },
          "required" : {
            "type" : "boolean",
            "nullable" : true
          },
          "max_length" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxLength"
          }
        }
      },
      "ConnectedAccountGuildResponse" : {
        "title" : "ConnectedAccountGuildResponse",
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "icon" : {
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }
      },
      "SvSE" : {
        "title" : "sv-SE",
        "type" : "string",
        "description" : "The sv-SE locale",
        "enum" : [ "sv-SE" ]
      },
      "APPLICATIONCOMMANDAUTOCOMPLETERESULT" : {
        "title" : "APPLICATION_COMMAND_AUTOCOMPLETE_RESULT",
        "type" : "integer",
        "enum" : [ 8 ]
      },
      "ExternalScheduledEventResponse" : {
        "title" : "ExternalScheduledEventResponse",
        "required" : [ "entity_metadata", "entity_type", "guild_id", "id", "name", "privacy_level", "scheduled_start_time", "status" ],
        "type" : "object",
        "properties" : {
          "image" : {
            "type" : "string",
            "nullable" : true
          },
          "creator" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/UserResponse"
            }, {
              "nullable" : true
            } ]
          },
          "privacy_level" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/GuildScheduledEventPrivacyLevels"
            } ],
            "x-ballerina-name" : "privacyLevel"
          },
          "entity_metadata" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EntityMetadataExternalResponse"
            } ],
            "x-ballerina-name" : "entityMetadata"
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "entity_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "entityId"
          },
          "scheduled_end_time" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "scheduledEndTime"
          },
          "entity_type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 3 ],
            "x-ballerina-name" : "entityType"
          },
          "user_rsvp" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ScheduledEventUserResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "userRsvp"
          },
          "user_count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "userCount"
          },
          "guild_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "guildId"
          },
          "name" : {
            "type" : "string"
          },
          "creator_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "creatorId"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "channelId"
          },
          "scheduled_start_time" : {
            "type" : "string",
            "format" : "date-time",
            "x-ballerina-name" : "scheduledStartTime"
          },
          "status" : {
            "$ref" : "#/components/schemas/GuildScheduledEventStatuses"
          }
        }
      },
      "ActionRow2" : {
        "title" : "ActionRow2",
        "required" : [ "components", "type" ],
        "type" : "object",
        "properties" : {
          "components" : {
            "maxItems" : 5,
            "minItems" : 1,
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/ActionRowComponents"
            }
          },
          "type" : { }
        }
      },
      "ActionRow3" : {
        "title" : "ActionRow3",
        "required" : [ "components", "type" ],
        "type" : "object",
        "properties" : {
          "components" : {
            "maxItems" : 5,
            "minItems" : 1,
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/ActionRowComponents"
            }
          },
          "type" : { }
        }
      },
      "GuildsMembersRequestRoles" : {
        "pattern" : "^(0|[1-9][0-9]*)$",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/RolesOneOf13"
        }, {
          "$ref" : "#/components/schemas/RolesRolesOneOf132"
        } ]
      },
      "GUILDHOMEREMOVEITEM" : {
        "title" : "GUILD_HOME_REMOVE_ITEM",
        "type" : "integer",
        "enum" : [ 172 ]
      },
      "DOMAIN" : {
        "title" : "DOMAIN",
        "type" : "string",
        "enum" : [ "domain" ]
      },
      "INSTAGRAM" : {
        "title" : "INSTAGRAM",
        "type" : "string",
        "enum" : [ "instagram" ]
      },
      "InviteGuildResponse" : {
        "title" : "InviteGuildResponse",
        "required" : [ "features", "id", "name" ],
        "type" : "object",
        "properties" : {
          "features" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/GuildFeatures"
            }
          },
          "verification_level" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/VerificationLevels"
              } ]
            }, { } ],
            "x-ballerina-name" : "verificationLevel"
          },
          "nsfw" : {
            "type" : "boolean",
            "nullable" : true
          },
          "vanity_url_code" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "vanityUrlCode"
          },
          "name" : {
            "type" : "string"
          },
          "icon" : {
            "type" : "string",
            "nullable" : true
          },
          "banner" : {
            "type" : "string",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "premium_subscription_count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "premiumSubscriptionCount"
          },
          "nsfw_level" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/GuildNSFWContentLevel"
              } ]
            }, { } ],
            "x-ballerina-name" : "nsfwLevel"
          },
          "splash" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "MLSpamUpsertRequest" : {
        "title" : "MLSpamUpsertRequest",
        "required" : [ "event_type", "name", "trigger_type" ],
        "type" : "object",
        "properties" : {
          "event_type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AutomodEventType"
            } ],
            "x-ballerina-name" : "eventType"
          },
          "trigger_type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 3 ],
            "x-ballerina-name" : "triggerType"
          },
          "name" : {
            "maxLength" : 100,
            "type" : "string"
          },
          "exempt_roles" : {
            "maxItems" : 20,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "exemptRoles"
          },
          "exempt_channels" : {
            "maxItems" : 50,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "exemptChannels"
          },
          "actions" : {
            "maxItems" : 5,
            "minItems" : 1,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/MLSpamUpsertRequestActions"
            }
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "trigger_metadata" : {
            "oneOf" : [ {
              "type" : "object"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "triggerMetadata"
          }
        }
      },
      "INVITESDISABLED" : {
        "title" : "INVITES_DISABLED",
        "type" : "string",
        "description" : "guild has paused invites, preventing new users from joining",
        "enum" : [ "INVITES_DISABLED" ]
      },
      "InlineArrayItemsSkuIdsSkuIdsOneOf12" : {
        "pattern" : "^(0|[1-9][0-9]*)$",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/SkuIdsSkuIdsOneOf12OneOf1"
        } ]
      },
      "GuildScheduledEventEntityTypes" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/NONE"
        }, {
          "$ref" : "#/components/schemas/STAGEINSTANCE"
        }, {
          "$ref" : "#/components/schemas/VOICE1"
        }, {
          "$ref" : "#/components/schemas/EXTERNAL"
        } ]
      },
      "ONBOARDINGDEFAULT" : {
        "title" : "ONBOARDING_DEFAULT",
        "type" : "integer",
        "description" : "Only Default Channels considered in constraints",
        "enum" : [ 0 ]
      },
      "ROLE" : {
        "title" : "ROLE",
        "type" : "integer",
        "description" : "A snowflake option that represents a Role",
        "enum" : [ 8 ]
      },
      "MESSAGE" : {
        "title" : "MESSAGE",
        "type" : "integer",
        "description" : "A UI-based command that shows up when you right click or tap on a message",
        "enum" : [ 3 ]
      },
      "StickerFormatTypes" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/PNG"
        }, {
          "$ref" : "#/components/schemas/APNG"
        }, {
          "$ref" : "#/components/schemas/LOTTIE"
        }, {
          "$ref" : "#/components/schemas/GIF"
        } ]
      },
      "Ar" : {
        "title" : "ar",
        "type" : "string",
        "description" : "The ar locale",
        "enum" : [ "ar" ]
      },
      "GithubDiscussion" : {
        "title" : "GithubDiscussion",
        "required" : [ "html_url", "number", "title", "user" ],
        "type" : "object",
        "properties" : {
          "number" : {
            "type" : "integer",
            "format" : "int32"
          },
          "answer_html_url" : {
            "maxLength" : 2048,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "answerHtmlUrl"
          },
          "html_url" : {
            "maxLength" : 2048,
            "type" : "string",
            "x-ballerina-name" : "htmlUrl"
          },
          "title" : {
            "maxLength" : 152133,
            "type" : "string"
          },
          "body" : {
            "maxLength" : 152133,
            "type" : "string",
            "nullable" : true
          },
          "user" : {
            "$ref" : "#/components/schemas/GithubUser"
          }
        }
      },
      "MentionableSelectDefaultValues" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/RoleSelectDefaultValue"
        }, {
          "$ref" : "#/components/schemas/UserSelectDefaultValue"
        }, {
          "$ref" : "#/components/schemas/DefaultValuesOneOf3"
        } ]
      },
      "BOTADD" : {
        "title" : "BOT_ADD",
        "type" : "integer",
        "enum" : [ 28 ]
      },
      "THREADSTARTERMESSAGE" : {
        "title" : "THREAD_STARTER_MESSAGE",
        "type" : "integer",
        "enum" : [ 21 ]
      },
      "RECIPIENTREMOVE" : {
        "title" : "RECIPIENT_REMOVE",
        "type" : "integer",
        "enum" : [ 2 ]
      },
      "GUILDBOOSTTIER1" : {
        "title" : "GUILD_BOOST_TIER_1",
        "type" : "integer",
        "enum" : [ 9 ]
      },
      "SUCCESS" : {
        "title" : "SUCCESS",
        "type" : "integer",
        "enum" : [ 3 ]
      },
      "Bg" : {
        "title" : "bg",
        "type" : "string",
        "description" : "The bg locale",
        "enum" : [ "bg" ]
      },
      "OptionsOneOf123" : {
        "nullable" : true
      },
      "OptionsOneOf122" : {
        "nullable" : true
      },
      "GUILDSMEMBERSREAD" : {
        "title" : "GUILDS_MEMBERS_READ",
        "type" : "string",
        "description" : "allows /users/@me/guilds/{guild.id}/member to return a user's member information in a guild",
        "enum" : [ "guilds.members.read" ]
      },
      "OptionsOneOf121" : {
        "nullable" : true
      },
      "GuildMFALevel" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/NONE3"
        }, {
          "$ref" : "#/components/schemas/ELEVATED"
        } ]
      },
      "WebhookIdwebhookTokenBody" : {
        "anyOf" : [ {
          "$ref" : "#/components/schemas/IncomingWebhookRequestPartial"
        }, {
          "$ref" : "#/components/schemas/IncomingWebhookUpdateRequestPartial"
        } ]
      },
      "VANITYURL" : {
        "title" : "VANITY_URL",
        "type" : "string",
        "description" : "guild has access to set a vanity URL",
        "enum" : [ "VANITY_URL" ]
      },
      "MEMBERMOVE" : {
        "title" : "MEMBER_MOVE",
        "type" : "integer",
        "enum" : [ 26 ]
      },
      "MessagesoriginalBody" : {
        "type" : "object",
        "properties" : {
          "components" : {
            "maxItems" : 5,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ActionRow"
            }
          },
          "attachments" : {
            "maxItems" : 10,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/MessageAttachmentRequest"
            }
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "allowed_mentions" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MessageAllowedMentionsRequest"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "allowedMentions"
          },
          "embeds" : {
            "maxItems" : 10,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/RichEmbed"
            }
          },
          "content" : {
            "maxLength" : 2000,
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ApplicationCommandChannelOptionResponse" : {
        "title" : "ApplicationCommandChannelOptionResponse",
        "required" : [ "description", "name", "type" ],
        "type" : "object",
        "properties" : {
          "name_localized" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "nameLocalized"
          },
          "name_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "nameLocalizations"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "channel_types" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ChannelTypes"
            },
            "x-ballerina-name" : "channelTypes"
          },
          "description_localized" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalized"
          },
          "description_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalizations"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 7 ]
          },
          "required" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "MentionChannelsOneOf21" : {
        "nullable" : true
      },
      "IncomingWebhookUpdateForInteractionCallbackRequestPartial" : {
        "title" : "IncomingWebhookUpdateForInteractionCallbackRequestPartial",
        "type" : "object",
        "properties" : {
          "components" : {
            "maxItems" : 5,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ActionRow"
            }
          },
          "attachments" : {
            "maxItems" : 10,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/MessageAttachmentRequest"
            }
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "allowed_mentions" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MessageAllowedMentionsRequest"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "allowedMentions"
          },
          "embeds" : {
            "maxItems" : 10,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/RichEmbed"
            }
          },
          "content" : {
            "maxLength" : 2000,
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "MessageEmbedProviderResponse" : {
        "title" : "MessageEmbedProviderResponse",
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "UsersUsersOneOf12" : {
        "nullable" : true
      },
      "SOUNDBOARDSOUNDDELETE" : {
        "title" : "SOUNDBOARD_SOUND_DELETE",
        "type" : "integer",
        "enum" : [ 132 ]
      },
      "GUILDTEXT" : {
        "title" : "GUILD_TEXT",
        "type" : "integer",
        "description" : "A text channel within a server",
        "enum" : [ 0 ]
      },
      "GuildsTemplatesRequest" : {
        "title" : "GuildsTemplatesRequest",
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "maxLength" : 100,
            "minLength" : 2,
            "type" : "string"
          },
          "icon" : {
            "type" : "string",
            "format" : "binary",
            "nullable" : true
          }
        }
      },
      "CHANNELSELECT1" : {
        "title" : "CHANNEL_SELECT1",
        "type" : "integer",
        "description" : "Select menu for channels",
        "enum" : [ 8 ]
      },
      "AUTOMODERATION" : {
        "title" : "AUTO_MODERATION",
        "type" : "string",
        "description" : "guild has set up auto moderation rules",
        "enum" : [ "AUTO_MODERATION" ]
      },
      "GuildsChannelsRequest" : {
        "title" : "GuildsChannelsRequest",
        "type" : "object",
        "properties" : {
          "lock_permissions" : {
            "type" : "boolean",
            "nullable" : true,
            "x-ballerina-name" : "lockPermissions"
          },
          "parent_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "parentId"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "position" : {
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "BOOLEANEQUAL" : {
        "title" : "BOOLEAN_EQUAL",
        "type" : "integer",
        "description" : "the metadata value (integer) is equal to the guild's configured value (integer; 1)",
        "enum" : [ 7 ]
      },
      "OnboardingPromptOptionResponse" : {
        "title" : "OnboardingPromptOptionResponse",
        "required" : [ "channel_ids", "description", "emoji", "id", "role_ids", "title" ],
        "type" : "object",
        "properties" : {
          "channel_ids" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "channelIds"
          },
          "emoji" : {
            "$ref" : "#/components/schemas/SettingsEmojiResponse"
          },
          "description" : {
            "type" : "string"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "role_ids" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "roleIds"
          }
        }
      },
      "GuildsMembersRequest1" : {
        "title" : "GuildsMembersRequest1",
        "type" : "object",
        "properties" : {
          "nick" : {
            "maxLength" : 32,
            "type" : "string",
            "nullable" : true
          },
          "communication_disabled_until" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "communicationDisabledUntil"
          },
          "roles" : {
            "maxItems" : 1521,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/GuildsMembersRequest1Roles"
            }
          },
          "deaf" : {
            "type" : "boolean",
            "nullable" : true
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "mute" : {
            "type" : "boolean",
            "nullable" : true
          },
          "channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "channelId"
          }
        }
      },
      "DM" : {
        "title" : "DM",
        "type" : "integer",
        "description" : "A direct message between users",
        "enum" : [ 1 ]
      },
      "EMAIL" : {
        "title" : "EMAIL",
        "type" : "string",
        "description" : "enables /users/@me to return an email",
        "enum" : [ "email" ]
      },
      "MENTIONABLESELECT1" : {
        "title" : "MENTIONABLE_SELECT1",
        "type" : "integer",
        "description" : "Select menu for mentionables (users and roles)",
        "enum" : [ 7 ]
      },
      "FULFILLED" : {
        "title" : "FULFILLED",
        "type" : "integer",
        "enum" : [ 3 ]
      },
      "Cs" : {
        "title" : "cs",
        "type" : "string",
        "description" : "The cs locale",
        "enum" : [ "cs" ]
      },
      "StageInstancesRequest" : {
        "title" : "StageInstancesRequest",
        "required" : [ "channel_id", "topic" ],
        "type" : "object",
        "properties" : {
          "privacy_level" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/StageInstancesPrivacyLevels"
              } ]
            }, { } ],
            "x-ballerina-name" : "privacyLevel"
          },
          "send_start_notification" : {
            "type" : "boolean",
            "nullable" : true,
            "x-ballerina-name" : "sendStartNotification"
          },
          "topic" : {
            "maxLength" : 120,
            "minLength" : 1,
            "type" : "string"
          },
          "guild_scheduled_event_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "guildScheduledEventId"
          },
          "channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "channelId"
          }
        }
      },
      "GuildWelcomeChannel" : {
        "title" : "GuildWelcomeChannel",
        "required" : [ "channel_id", "description" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "maxLength" : 50,
            "minLength" : 1,
            "type" : "string"
          },
          "emoji_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "emojiId"
          },
          "emoji_name" : {
            "maxLength" : 152133,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "emojiName"
          },
          "channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "channelId"
          }
        }
      },
      "DISCOVERABLE" : {
        "title" : "DISCOVERABLE",
        "type" : "string",
        "description" : "guild is able to be discovered in the directory",
        "enum" : [ "DISCOVERABLE" ]
      },
      "KeywordTriggerMetadataResponse" : {
        "title" : "KeywordTriggerMetadataResponse",
        "required" : [ "allow_list", "keyword_filter", "regex_patterns" ],
        "type" : "object",
        "properties" : {
          "keyword_filter" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "keywordFilter"
          },
          "allow_list" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "allowList"
          },
          "regex_patterns" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "regexPatterns"
          }
        }
      },
      "Da" : {
        "title" : "da",
        "type" : "string",
        "description" : "The da locale",
        "enum" : [ "da" ]
      },
      "MessageType" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/DEFAULT"
        }, {
          "$ref" : "#/components/schemas/RECIPIENTADD"
        }, {
          "$ref" : "#/components/schemas/RECIPIENTREMOVE"
        }, {
          "$ref" : "#/components/schemas/CALL"
        }, {
          "$ref" : "#/components/schemas/CHANNELNAMECHANGE"
        }, {
          "$ref" : "#/components/schemas/CHANNELICONCHANGE"
        }, {
          "$ref" : "#/components/schemas/CHANNELPINNEDMESSAGE"
        }, {
          "$ref" : "#/components/schemas/USERJOIN"
        }, {
          "$ref" : "#/components/schemas/GUILDBOOST"
        }, {
          "$ref" : "#/components/schemas/GUILDBOOSTTIER1"
        }, {
          "$ref" : "#/components/schemas/GUILDBOOSTTIER2"
        }, {
          "$ref" : "#/components/schemas/GUILDBOOSTTIER3"
        }, {
          "$ref" : "#/components/schemas/CHANNELFOLLOWADD"
        }, {
          "$ref" : "#/components/schemas/GUILDDISCOVERYDISQUALIFIED"
        }, {
          "$ref" : "#/components/schemas/GUILDDISCOVERYREQUALIFIED"
        }, {
          "$ref" : "#/components/schemas/GUILDDISCOVERYGRACEPERIODINITIALWARNING"
        }, {
          "$ref" : "#/components/schemas/GUILDDISCOVERYGRACEPERIODFINALWARNING"
        }, {
          "$ref" : "#/components/schemas/THREADCREATED"
        }, {
          "$ref" : "#/components/schemas/REPLY"
        }, {
          "$ref" : "#/components/schemas/CHATINPUTCOMMAND"
        }, {
          "$ref" : "#/components/schemas/THREADSTARTERMESSAGE"
        }, {
          "$ref" : "#/components/schemas/GUILDINVITEREMINDER"
        }, {
          "$ref" : "#/components/schemas/CONTEXTMENUCOMMAND"
        }, {
          "$ref" : "#/components/schemas/AUTOMODERATIONACTION"
        }, {
          "$ref" : "#/components/schemas/ROLESUBSCRIPTIONPURCHASE"
        }, {
          "$ref" : "#/components/schemas/INTERACTIONPREMIUMUPSELL"
        }, {
          "$ref" : "#/components/schemas/STAGESTART"
        }, {
          "$ref" : "#/components/schemas/STAGEEND"
        }, {
          "$ref" : "#/components/schemas/STAGESPEAKER"
        }, {
          "$ref" : "#/components/schemas/STAGETOPIC"
        }, {
          "$ref" : "#/components/schemas/GUILDAPPLICATIONPREMIUMSUBSCRIPTION"
        }, {
          "$ref" : "#/components/schemas/GUILDINCIDENTALERTMODEENABLED"
        }, {
          "$ref" : "#/components/schemas/GUILDINCIDENTALERTMODEDISABLED"
        }, {
          "$ref" : "#/components/schemas/GUILDINCIDENTREPORTRAID"
        }, {
          "$ref" : "#/components/schemas/GUILDINCIDENTREPORTFALSEALARM"
        } ]
      },
      "ConnectedAccountResponse" : {
        "title" : "ConnectedAccountResponse",
        "required" : [ "friend_sync", "id", "show_activity", "two_way_link", "type", "verified", "visibility" ],
        "type" : "object",
        "properties" : {
          "friend_sync" : {
            "type" : "boolean",
            "x-ballerina-name" : "friendSync"
          },
          "show_activity" : {
            "type" : "boolean",
            "x-ballerina-name" : "showActivity"
          },
          "visibility" : {
            "$ref" : "#/components/schemas/ConnectedAccountVisibility"
          },
          "two_way_link" : {
            "type" : "boolean",
            "x-ballerina-name" : "twoWayLink"
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "verified" : {
            "type" : "boolean"
          },
          "id" : {
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/ConnectedAccountProviders"
          },
          "revoked" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integrations" : {
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ConnectedAccountIntegrationResponse"
            }
          }
        }
      },
      "De" : {
        "title" : "de",
        "type" : "string",
        "description" : "The de locale",
        "enum" : [ "de" ]
      },
      "RichEmbedAuthor" : {
        "title" : "RichEmbedAuthor",
        "type" : "object",
        "properties" : {
          "icon_url" : {
            "maxLength" : 2048,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "iconUrl"
          },
          "name" : {
            "maxLength" : 256,
            "type" : "string",
            "nullable" : true
          },
          "url" : {
            "maxLength" : 2048,
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "SEVENDAYS" : {
        "title" : "SEVEN_DAYS",
        "type" : "integer",
        "description" : "7 days",
        "enum" : [ 7 ]
      },
      "CREATORSTOREPAGE" : {
        "title" : "CREATOR_STORE_PAGE",
        "type" : "string",
        "description" : "guild has enabled the role subscription promo page",
        "enum" : [ "CREATOR_STORE_PAGE" ]
      },
      "MessageReferenceType" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/DEFAULT2"
        } ]
      },
      "YOUTUBE" : {
        "title" : "YOUTUBE",
        "type" : "string",
        "enum" : [ "youtube" ]
      },
      "GithubRepository" : {
        "title" : "GithubRepository",
        "required" : [ "full_name", "html_url", "id", "name" ],
        "type" : "object",
        "properties" : {
          "full_name" : {
            "maxLength" : 152133,
            "type" : "string",
            "x-ballerina-name" : "fullName"
          },
          "html_url" : {
            "maxLength" : 2048,
            "type" : "string",
            "x-ballerina-name" : "htmlUrl"
          },
          "name" : {
            "maxLength" : 152133,
            "type" : "string"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ApplicationRoleConnectionsMetadataItemRequest" : {
        "title" : "ApplicationRoleConnectionsMetadataItemRequest",
        "required" : [ "description", "key", "name", "type" ],
        "type" : "object",
        "properties" : {
          "name_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "x-ballerina-name" : "nameLocalizations"
          },
          "name" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "description" : {
            "maxLength" : 200,
            "minLength" : 1,
            "type" : "string"
          },
          "description_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalizations"
          },
          "type" : {
            "$ref" : "#/components/schemas/MetadataItemTypes"
          },
          "key" : {
            "maxLength" : 50,
            "minLength" : 1,
            "type" : "string"
          }
        }
      },
      "MessageComponentButtonResponse" : {
        "title" : "MessageComponentButtonResponse",
        "required" : [ "id", "style", "type" ],
        "type" : "object",
        "properties" : {
          "emoji" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MessageComponentEmojiResponse"
            }, {
              "nullable" : true
            } ]
          },
          "custom_id" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "customId"
          },
          "style" : {
            "$ref" : "#/components/schemas/ButtonStyleTypes"
          },
          "disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "sku_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "skuId"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "label" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 2 ]
          },
          "url" : {
            "maxLength" : 2048,
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "GithubCheckPullRequest" : {
        "title" : "GithubCheckPullRequest",
        "required" : [ "number" ],
        "type" : "object",
        "properties" : {
          "number" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ChannelsThreadsRequest" : {
        "title" : "ChannelsThreadsRequest",
        "type" : "object",
        "properties" : {
          "rate_limit_per_user" : {
            "maximum" : 21600.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "rateLimitPerUser"
          },
          "name" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "invitable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "message" : {
            "$ref" : "#/components/schemas/BaseCreateMessageCreateRequest"
          },
          "type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ChannelTypes"
              } ]
            }, { } ]
          },
          "auto_archive_duration" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ThreadAutoArchiveDuration"
              } ]
            }, { } ],
            "x-ballerina-name" : "autoArchiveDuration"
          },
          "applied_tags" : {
            "maxItems" : 5,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "appliedTags"
          }
        }
      },
      "PREVIEWENABLED" : {
        "title" : "PREVIEW_ENABLED",
        "type" : "string",
        "description" : "guild can be previewed before joining via Membership Screening or the directory",
        "enum" : [ "PREVIEW_ENABLED" ]
      },
      "ApplicationOAuth2InstallParams" : {
        "title" : "ApplicationOAuth2InstallParams",
        "type" : "object",
        "properties" : {
          "permissions" : {
            "maximum" : 2251799813685247,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "scopes" : {
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/OAuth2Scopes"
            }
          }
        }
      },
      "LIST" : {
        "title" : "LIST",
        "type" : "integer",
        "description" : "Display posts as a list",
        "enum" : [ 1 ]
      },
      "GuildTemplateSnapshotResponse" : {
        "title" : "GuildTemplateSnapshotResponse",
        "required" : [ "afk_timeout", "channels", "default_message_notifications", "explicit_content_filter", "name", "preferred_locale", "roles", "system_channel_flags", "verification_level" ],
        "type" : "object",
        "properties" : {
          "preferred_locale" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AvailableLocalesEnum"
            } ],
            "x-ballerina-name" : "preferredLocale"
          },
          "default_message_notifications" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserNotificationSettings"
            } ],
            "x-ballerina-name" : "defaultMessageNotifications"
          },
          "system_channel_flags" : {
            "type" : "integer",
            "format" : "int32",
            "x-ballerina-name" : "systemChannelFlags"
          },
          "roles" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/GuildTemplateRoleResponse"
            }
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "system_channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "systemChannelId"
          },
          "afk_timeout" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AfkTimeouts"
            } ],
            "x-ballerina-name" : "afkTimeout"
          },
          "verification_level" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/VerificationLevels"
            } ],
            "x-ballerina-name" : "verificationLevel"
          },
          "explicit_content_filter" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/GuildExplicitContentFilterTypes"
            } ],
            "x-ballerina-name" : "explicitContentFilter"
          },
          "channels" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/GuildTemplateChannelResponse"
            }
          },
          "afk_channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "afkChannelId"
          },
          "name" : {
            "type" : "string"
          },
          "region" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "InvitesResponse" : {
        "title" : "InvitesResponse",
        "type" : "object",
        "properties" : {
          "friends_count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "friendsCount"
          },
          "temporary" : {
            "type" : "boolean",
            "nullable" : true
          },
          "code" : {
            "type" : "string"
          },
          "guild_scheduled_event" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ScheduledEventResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "guildScheduledEvent"
          },
          "approximate_presence_count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "approximatePresenceCount"
          },
          "target_application" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/InviteApplicationResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "targetApplication"
          },
          "channel" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/InviteChannelResponse"
            } ]
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "target_type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/InviteTargetTypes"
              } ]
            }, { } ],
            "x-ballerina-name" : "targetType"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "createdAt"
          },
          "type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/InviteTypes"
              } ]
            }, { } ]
          },
          "is_contact" : {
            "type" : "boolean",
            "nullable" : true,
            "x-ballerina-name" : "isContact"
          },
          "max_age" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxAge"
          },
          "guild" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/InviteGuildResponse"
            }, {
              "nullable" : true
            } ]
          },
          "expires_at" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "expiresAt"
          },
          "max_uses" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxUses"
          },
          "approximate_member_count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "approximateMemberCount"
          },
          "guild_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "guildId"
          },
          "target_user" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/UserResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "targetUser"
          },
          "inviter" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/UserResponse"
            } ]
          },
          "uses" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "stage_instance" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/InviteStageInstanceResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "stageInstance"
          }
        }
      },
      "MentionSpamRuleResponse" : {
        "title" : "MentionSpamRuleResponse",
        "required" : [ "actions", "creator_id", "event_type", "guild_id", "id", "name", "trigger_metadata", "trigger_type" ],
        "type" : "object",
        "properties" : {
          "event_type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AutomodEventType"
            } ],
            "x-ballerina-name" : "eventType"
          },
          "trigger_type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 5 ],
            "x-ballerina-name" : "triggerType"
          },
          "guild_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "guildId"
          },
          "creator_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "creatorId"
          },
          "name" : {
            "type" : "string"
          },
          "exempt_roles" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "exemptRoles"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "exempt_channels" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "exemptChannels"
          },
          "actions" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/DefaultKeywordRuleResponseActions"
            }
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "trigger_metadata" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MentionSpamTriggerMetadataResponse"
            } ],
            "x-ballerina-name" : "triggerMetadata"
          }
        }
      },
      "GUILDINCIDENTALERTMODEDISABLED" : {
        "title" : "GUILD_INCIDENT_ALERT_MODE_DISABLED",
        "type" : "integer",
        "enum" : [ 37 ]
      },
      "El" : {
        "title" : "el",
        "type" : "string",
        "description" : "The el locale",
        "enum" : [ "el" ]
      },
      "ZEROES" : {
        "title" : "ZEROES",
        "type" : "string",
        "enum" : [ "0000" ]
      },
      "MetadataItemTypes" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/INTEGERLESSTHANEQUAL"
        }, {
          "$ref" : "#/components/schemas/INTEGERGREATERTHANEQUAL"
        }, {
          "$ref" : "#/components/schemas/INTEGEREQUAL"
        }, {
          "$ref" : "#/components/schemas/INTEGERNOTEQUAL"
        }, {
          "$ref" : "#/components/schemas/DATETIMELESSTHANEQUAL"
        }, {
          "$ref" : "#/components/schemas/DATETIMEGREATERTHANEQUAL"
        }, {
          "$ref" : "#/components/schemas/BOOLEANEQUAL"
        }, {
          "$ref" : "#/components/schemas/BOOLEANNOTEQUAL"
        } ]
      },
      "CreateGuildRequestRoleItem" : {
        "title" : "CreateGuildRequestRoleItem",
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "color" : {
            "maximum" : 16777215,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "unicode_emoji" : {
            "maxLength" : 100,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "unicodeEmoji"
          },
          "permissions" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "name" : {
            "maxLength" : 100,
            "type" : "string",
            "nullable" : true
          },
          "mentionable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "hoist" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "ONBOARDINGADVANCED" : {
        "title" : "ONBOARDING_ADVANCED",
        "type" : "integer",
        "description" : "Default Channels and Onboarding Prompts considered in constraints",
        "enum" : [ 1 ]
      },
      "UsersMeApplicationsRoleConnectionRequest" : {
        "title" : "UsersMeApplicationsRoleConnectionRequest",
        "type" : "object",
        "properties" : {
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true
          },
          "platform_username" : {
            "maxLength" : 100,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "platformUsername"
          },
          "platform_name" : {
            "maxLength" : 50,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "platformName"
          }
        }
      },
      "WebhookSlackEmbedField" : {
        "title" : "WebhookSlackEmbedField",
        "type" : "object",
        "properties" : {
          "inline" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "maxLength" : 152133,
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "maxLength" : 152133,
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "QUARANTINEUSER" : {
        "title" : "QUARANTINE_USER",
        "type" : "integer",
        "description" : "Prevent a user from interacting in the server",
        "enum" : [ 4 ]
      },
      "GUILDSCHEDULEDEVENTUPDATE" : {
        "title" : "GUILD_SCHEDULED_EVENT_UPDATE",
        "type" : "integer",
        "enum" : [ 101 ]
      },
      "BlockMessageActionResponse" : {
        "title" : "BlockMessageActionResponse",
        "required" : [ "metadata", "type" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/BlockMessageActionMetadataResponse"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 1 ]
          }
        }
      },
      "Component" : {
        "title" : "Component",
        "required" : [ "custom_id", "label", "options", "style", "type" ],
        "type" : "object",
        "properties" : {
          "min_values" : {
            "maximum" : 25.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "minValues"
          },
          "emoji" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Emoji"
            } ]
          },
          "min_length" : {
            "maximum" : 4000.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "minLength"
          },
          "custom_id" : {
            "maxLength" : 100,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "customId"
          },
          "max_values" : {
            "maximum" : 25.0,
            "minimum" : 1.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxValues"
          },
          "sku_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "skuId"
          },
          "label" : {
            "maxLength" : 45,
            "type" : "string",
            "nullable" : true
          },
          "type" : { },
          "url" : {
            "maxLength" : 512,
            "type" : "string",
            "nullable" : true
          },
          "required" : {
            "type" : "boolean",
            "nullable" : true
          },
          "default_values" : {
            "maxItems" : 25,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ChannelSelectDefaultValue1"
            },
            "x-ballerina-name" : "defaultValues"
          },
          "options" : {
            "maxItems" : 25,
            "minItems" : 1,
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/SelectOption1"
            }
          },
          "channel_types" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ComponentChannelTypes"
            },
            "x-ballerina-name" : "channelTypes"
          },
          "style" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/PRIMARY"
            }, {
              "$ref" : "#/components/schemas/SECONDARY"
            }, {
              "$ref" : "#/components/schemas/SUCCESS"
            }, {
              "$ref" : "#/components/schemas/DANGER"
            }, {
              "$ref" : "#/components/schemas/LINK"
            }, {
              "$ref" : "#/components/schemas/PREMIUM"
            } ]
          },
          "disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "placeholder" : {
            "maxLength" : 100,
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "maxLength" : 4000,
            "type" : "string",
            "nullable" : true
          },
          "max_length" : {
            "maximum" : 4000.0,
            "minimum" : 1.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxLength"
          }
        }
      },
      "DiscordIntegrationResponse" : {
        "title" : "DiscordIntegrationResponse",
        "required" : [ "application", "id", "scopes", "type" ],
        "type" : "object",
        "properties" : {
          "application" : {
            "$ref" : "#/components/schemas/IntegrationApplicationResponse"
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "scopes" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/OAuth2Scopes"
            }
          },
          "type" : {
            "type" : "string",
            "enum" : [ "discord" ]
          },
          "user" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/UserResponse"
            }, {
              "nullable" : true
            } ]
          },
          "account" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/AccountResponse"
            }, {
              "nullable" : true
            } ]
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "TeamMembershipStates" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/INVITED"
        }, {
          "$ref" : "#/components/schemas/ACCEPTED"
        } ]
      },
      "LEAGUEOFLEGENDS" : {
        "title" : "LEAGUE_OF_LEGENDS",
        "type" : "string",
        "enum" : [ "leagueoflegends" ]
      },
      "Fi" : {
        "title" : "fi",
        "type" : "string",
        "description" : "The fi locale",
        "enum" : [ "fi" ]
      },
      "SLURS" : {
        "title" : "SLURS",
        "type" : "integer",
        "description" : "Words and phrases that may be considered slurs and hate speech",
        "enum" : [ 3 ]
      },
      "ApplicationCommandPermissionType" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ROLE1"
        }, {
          "$ref" : "#/components/schemas/USER2"
        }, {
          "$ref" : "#/components/schemas/CHANNEL1"
        } ]
      },
      "Fr" : {
        "title" : "fr",
        "type" : "string",
        "description" : "The fr locale",
        "enum" : [ "fr" ]
      },
      "PrivateGroupChannelResponse" : {
        "title" : "PrivateGroupChannelResponse",
        "required" : [ "flags", "id", "recipients", "type" ],
        "type" : "object",
        "properties" : {
          "last_message_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "lastMessageId"
          },
          "last_pin_timestamp" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "lastPinTimestamp"
          },
          "recipients" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/UserResponse"
            }
          },
          "owner_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "ownerId"
          },
          "managed" : {
            "type" : "boolean",
            "nullable" : true
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "icon" : {
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 3 ]
          },
          "application_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "applicationId"
          }
        }
      },
      "SHORT" : {
        "title" : "SHORT",
        "type" : "integer",
        "description" : "Single-line input",
        "enum" : [ 1 ]
      },
      "RPCNOTIFICATIONSREAD" : {
        "title" : "RPC_NOTIFICATIONS_READ",
        "type" : "string",
        "description" : "for local rpc server access, this allows you to receive notifications pushed out to the user - requires Discord approval",
        "enum" : [ "rpc.notifications.read" ]
      },
      "DefaultKeywordListTriggerMetadata" : {
        "title" : "DefaultKeywordListTriggerMetadata",
        "type" : "object",
        "properties" : {
          "presets" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/AutomodKeywordPresetType"
            }
          },
          "allow_list" : {
            "maxItems" : 1000,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "maxLength" : 60,
              "minLength" : 1,
              "type" : "string"
            },
            "x-ballerina-name" : "allowList"
          }
        }
      },
      "WEBHOOKINCOMING" : {
        "title" : "WEBHOOK_INCOMING",
        "type" : "string",
        "description" : "this generates a webhook that is returned in the oauth token response for authorization code grants",
        "enum" : [ "webhook.incoming" ]
      },
      "DROPDOWN" : {
        "title" : "DROPDOWN",
        "type" : "integer",
        "description" : "Many options shown as a dropdown",
        "enum" : [ 1 ]
      },
      "TeamMemberResponse" : {
        "title" : "TeamMemberResponse",
        "required" : [ "membership_state", "team_id", "user" ],
        "type" : "object",
        "properties" : {
          "membership_state" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TeamMembershipStates"
            } ],
            "x-ballerina-name" : "membershipState"
          },
          "team_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "teamId"
          },
          "user" : {
            "$ref" : "#/components/schemas/UserResponse"
          }
        }
      },
      "PongInteractionCallbackRequest" : {
        "title" : "PongInteractionCallbackRequest",
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 1 ]
          }
        }
      },
      "UserCommunicationDisabledActionResponse" : {
        "title" : "UserCommunicationDisabledActionResponse",
        "required" : [ "metadata", "type" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/UserCommunicationDisabledActionMetadataResponse"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 3 ]
          }
        }
      },
      "CreateTextThreadWithoutMessageRequest" : {
        "title" : "CreateTextThreadWithoutMessageRequest",
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "rate_limit_per_user" : {
            "maximum" : 21600.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "rateLimitPerUser"
          },
          "name" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "invitable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ChannelTypes"
              } ]
            }, { } ]
          },
          "auto_archive_duration" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ThreadAutoArchiveDuration"
              } ]
            }, { } ],
            "x-ballerina-name" : "autoArchiveDuration"
          }
        }
      },
      "GuildsEmojisRequest" : {
        "title" : "GuildsEmojisRequest",
        "type" : "object",
        "properties" : {
          "roles" : {
            "maxItems" : 1521,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/GuildsEmojisRequestRoles"
            }
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 2,
            "type" : "string"
          }
        }
      },
      "ELEVATED" : {
        "title" : "ELEVATED",
        "type" : "integer",
        "description" : "Guild has a 2FA requirement for moderation actions",
        "enum" : [ 1 ]
      },
      "IncludeRoles" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/IncludeRolesOneOf1"
        }, {
          "$ref" : "#/components/schemas/IncludeRolesIncludeRolesOneOf12"
        } ]
      },
      "WebhookTypes" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/GUILDINCOMING"
        }, {
          "$ref" : "#/components/schemas/CHANNELFOLLOWER"
        }, {
          "$ref" : "#/components/schemas/APPLICATIONINCOMING"
        } ]
      },
      "VERIFIED" : {
        "title" : "VERIFIED",
        "type" : "string",
        "description" : "guild is verified",
        "enum" : [ "VERIFIED" ]
      },
      "AutomodEventType" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/MESSAGESEND"
        }, {
          "$ref" : "#/components/schemas/GUILDMEMBERJOINORUPDATE"
        } ]
      },
      "MessagesmessageIdBody" : {
        "type" : "object",
        "properties" : {
          "components" : {
            "maxItems" : 5,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ActionRow"
            }
          },
          "attachments" : {
            "maxItems" : 10,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/MessageAttachmentRequest"
            }
          },
          "sticker_ids" : {
            "maxItems" : 1521,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "stickerIds"
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "allowed_mentions" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MessageAllowedMentionsRequest"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "allowedMentions"
          },
          "embeds" : {
            "maxItems" : 10,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/RichEmbed"
            }
          },
          "content" : {
            "maxLength" : 4000,
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ApplicationCommandAttachmentOption" : {
        "title" : "ApplicationCommandAttachmentOption",
        "required" : [ "description", "name", "type" ],
        "type" : "object",
        "properties" : {
          "name_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "nameLocalizations"
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 1,
            "type" : "string"
          },
          "description" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "description_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalizations"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 11 ]
          },
          "required" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "GuildTemplateChannelTags" : {
        "title" : "GuildTemplateChannelTags",
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "moderated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string"
          },
          "emoji_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "emojiId"
          },
          "emoji_name" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "emojiName"
          }
        }
      },
      "USER1" : {
        "title" : "USER1",
        "type" : "integer",
        "description" : "A snowflake option that represents a User",
        "enum" : [ 6 ]
      },
      "ACCEPTED" : {
        "title" : "ACCEPTED",
        "type" : "integer",
        "description" : "User has accepted the team invitation",
        "enum" : [ 2 ]
      },
      "USER2" : {
        "title" : "USER2",
        "type" : "integer",
        "description" : "This permission is for a user",
        "enum" : [ 2 ]
      },
      "MessageComponentMentionableSelectResponse" : {
        "title" : "MessageComponentMentionableSelectResponse",
        "required" : [ "custom_id", "id", "type" ],
        "type" : "object",
        "properties" : {
          "min_values" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "minValues"
          },
          "custom_id" : {
            "type" : "string",
            "x-ballerina-name" : "customId"
          },
          "max_values" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxValues"
          },
          "disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "placeholder" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 7 ]
          }
        }
      },
      "ModalInteractionCallbackData" : {
        "title" : "ModalInteractionCallbackData",
        "required" : [ "components", "custom_id", "title" ],
        "type" : "object",
        "properties" : {
          "components" : {
            "maxItems" : 5,
            "minItems" : 1,
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/ActionRow"
            }
          },
          "custom_id" : {
            "maxLength" : 100,
            "type" : "string",
            "x-ballerina-name" : "customId"
          },
          "title" : {
            "maxLength" : 45,
            "type" : "string"
          }
        }
      },
      "IncludeRolesIncludeRolesOneOf12OneOf1" : {
        "pattern" : "^(0|[1-9][0-9]*)$",
        "type" : "string"
      },
      "MULTIPLECHOICE" : {
        "title" : "MULTIPLE_CHOICE",
        "type" : "integer",
        "description" : "Multiple choice options",
        "enum" : [ 0 ]
      },
      "USER3" : {
        "title" : "USER3",
        "type" : "string",
        "enum" : [ "user" ]
      },
      "He" : {
        "title" : "he",
        "type" : "string",
        "description" : "The he locale",
        "enum" : [ "he" ]
      },
      "Hi" : {
        "title" : "hi",
        "type" : "string",
        "description" : "The hi locale",
        "enum" : [ "hi" ]
      },
      "MessageEmbedFooterResponse" : {
        "title" : "MessageEmbedFooterResponse",
        "required" : [ "text" ],
        "type" : "object",
        "properties" : {
          "icon_url" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "iconUrl"
          },
          "proxy_icon_url" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "proxyIconUrl"
          },
          "text" : {
            "type" : "string"
          }
        }
      },
      "ApplicationCommandChannelOption" : {
        "title" : "ApplicationCommandChannelOption",
        "required" : [ "description", "name", "type" ],
        "type" : "object",
        "properties" : {
          "name_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "nameLocalizations"
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 1,
            "type" : "string"
          },
          "description" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "channel_types" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ChannelTypes"
            },
            "x-ballerina-name" : "channelTypes"
          },
          "description_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalizations"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 7 ]
          },
          "required" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "MessageComponentStringSelectResponse" : {
        "title" : "MessageComponentStringSelectResponse",
        "required" : [ "custom_id", "id", "type" ],
        "type" : "object",
        "properties" : {
          "min_values" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "minValues"
          },
          "custom_id" : {
            "type" : "string",
            "x-ballerina-name" : "customId"
          },
          "max_values" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxValues"
          },
          "options" : {
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/MessageComponentStringSelectResponseOptions"
            }
          },
          "disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "placeholder" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 3 ]
          }
        }
      },
      "GuildsEmojisRequest1Roles" : {
        "pattern" : "^(0|[1-9][0-9]*)$",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/RolesOneOf12"
        }, {
          "$ref" : "#/components/schemas/RolesRolesOneOf122"
        } ]
      },
      "Hr" : {
        "title" : "hr",
        "type" : "string",
        "description" : "The hr locale",
        "enum" : [ "hr" ]
      },
      "Hu" : {
        "title" : "hu",
        "type" : "string",
        "description" : "The hu locale",
        "enum" : [ "hu" ]
      },
      "StageInstancesRequest1" : {
        "title" : "StageInstancesRequest1",
        "type" : "object",
        "properties" : {
          "privacy_level" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/StageInstancesPrivacyLevels"
            } ],
            "x-ballerina-name" : "privacyLevel"
          },
          "topic" : {
            "maxLength" : 120,
            "minLength" : 1,
            "type" : "string"
          }
        }
      },
      "SPOTIFY" : {
        "title" : "SPOTIFY",
        "type" : "string",
        "enum" : [ "spotify" ]
      },
      "ComponentChannelTypes" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/DM"
        }, {
          "$ref" : "#/components/schemas/GROUPDM"
        }, {
          "$ref" : "#/components/schemas/GUILDTEXT"
        }, {
          "$ref" : "#/components/schemas/GUILDVOICE"
        }, {
          "$ref" : "#/components/schemas/GUILDCATEGORY"
        }, {
          "$ref" : "#/components/schemas/GUILDANNOUNCEMENT"
        }, {
          "$ref" : "#/components/schemas/ANNOUNCEMENTTHREAD"
        }, {
          "$ref" : "#/components/schemas/PUBLICTHREAD"
        }, {
          "$ref" : "#/components/schemas/PRIVATETHREAD"
        }, {
          "$ref" : "#/components/schemas/GUILDSTAGEVOICE"
        }, {
          "$ref" : "#/components/schemas/GUILDDIRECTORY"
        }, {
          "$ref" : "#/components/schemas/GUILDFORUM"
        }, {
          "$ref" : "#/components/schemas/ChannelTypesOneOf13"
        } ]
      },
      "WidgetActivity" : {
        "title" : "WidgetActivity",
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          }
        }
      },
      "FlagToChannelActionMetadata" : {
        "title" : "FlagToChannelActionMetadata",
        "required" : [ "channel_id" ],
        "type" : "object",
        "properties" : {
          "channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "channelId"
          }
        }
      },
      "ApplicationCommandNumberOptionResponse" : {
        "title" : "ApplicationCommandNumberOptionResponse",
        "required" : [ "description", "name", "type" ],
        "type" : "object",
        "properties" : {
          "min_value" : {
            "type" : "number",
            "nullable" : true,
            "x-ballerina-name" : "minValue"
          },
          "name_localized" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "nameLocalized"
          },
          "name_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "nameLocalizations"
          },
          "autocomplete" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "description_localized" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalized"
          },
          "description_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalizations"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 10 ]
          },
          "choices" : {
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ApplicationCommandOptionNumberChoiceResponse"
            }
          },
          "required" : {
            "type" : "boolean",
            "nullable" : true
          },
          "max_value" : {
            "type" : "number",
            "nullable" : true,
            "x-ballerina-name" : "maxValue"
          }
        }
      },
      "ChannelIdInvitesBody" : {
        "anyOf" : [ {
          "$ref" : "#/components/schemas/CreateGroupDMInviteRequest"
        }, {
          "$ref" : "#/components/schemas/CreateGuildInviteRequest"
        } ]
      },
      "Id" : {
        "title" : "id",
        "type" : "string",
        "description" : "The id locale",
        "enum" : [ "id" ]
      },
      "USERS" : {
        "title" : "USERS",
        "type" : "string",
        "description" : "Controls role mentions",
        "enum" : [ "users" ]
      },
      "GUILDONLY1" : {
        "title" : "GUILD_ONLY1",
        "type" : "integer",
        "description" : "The Stage instance is visible publicly. (deprecated)",
        "enum" : [ 2 ]
      },
      "GuildTemplateRoleResponse" : {
        "title" : "GuildTemplateRoleResponse",
        "required" : [ "color", "hoist", "id", "mentionable", "name", "permissions" ],
        "type" : "object",
        "properties" : {
          "color" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unicode_emoji" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "unicodeEmoji"
          },
          "permissions" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "icon" : {
            "type" : "string",
            "nullable" : true
          },
          "mentionable" : {
            "type" : "boolean"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "hoist" : {
            "type" : "boolean"
          }
        }
      },
      "ONEHOUR" : {
        "title" : "ONE_HOUR",
        "type" : "integer",
        "enum" : [ 3600 ]
      },
      "ApplicationCommandSubcommandGroupOption" : {
        "title" : "ApplicationCommandSubcommandGroupOption",
        "required" : [ "description", "name", "type" ],
        "type" : "object",
        "properties" : {
          "name_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "nameLocalizations"
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 1,
            "type" : "string"
          },
          "options" : {
            "maxItems" : 25,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ApplicationCommandSubcommandOption"
            }
          },
          "description" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "description_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalizations"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 2 ]
          },
          "required" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "DefaultKeywordListTriggerMetadata1" : {
        "title" : "DefaultKeywordListTriggerMetadata1",
        "required" : [ "mention_total_limit" ],
        "type" : "object",
        "properties" : {
          "presets" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/AutomodKeywordPresetType"
            }
          },
          "keyword_filter" : {
            "maxItems" : 1000,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "maxLength" : 60,
              "minLength" : 1,
              "type" : "string"
            },
            "x-ballerina-name" : "keywordFilter"
          },
          "mention_total_limit" : {
            "maximum" : 50.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "x-ballerina-name" : "mentionTotalLimit"
          },
          "allow_list" : {
            "maxItems" : 100,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "maxLength" : 60,
              "minLength" : 1,
              "type" : "string"
            },
            "x-ballerina-name" : "allowList"
          },
          "mention_raid_protection_enabled" : {
            "type" : "boolean",
            "nullable" : true,
            "x-ballerina-name" : "mentionRaidProtectionEnabled"
          },
          "regex_patterns" : {
            "maxItems" : 10,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "maxLength" : 260,
              "minLength" : 1,
              "type" : "string"
            },
            "x-ballerina-name" : "regexPatterns"
          }
        }
      },
      "STAGESPEAKER" : {
        "title" : "STAGE_SPEAKER",
        "type" : "integer",
        "enum" : [ 29 ]
      },
      "StringSelect" : {
        "title" : "StringSelect",
        "required" : [ "custom_id", "options", "type" ],
        "type" : "object",
        "properties" : {
          "min_values" : {
            "maximum" : 25.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "minValues"
          },
          "custom_id" : {
            "maxLength" : 100,
            "type" : "string",
            "x-ballerina-name" : "customId"
          },
          "max_values" : {
            "maximum" : 25.0,
            "minimum" : 1.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxValues"
          },
          "options" : {
            "maxItems" : 25,
            "minItems" : 1,
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/SelectOption"
            }
          },
          "disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "placeholder" : {
            "maxLength" : 150,
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 3 ]
          }
        }
      },
      "InlineResponse4XX" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ErrorResponse"
        }, {
          "$ref" : "#/components/schemas/InlineResponse4XXAllOf2"
        } ]
      },
      "It" : {
        "title" : "it",
        "type" : "string",
        "description" : "The it locale",
        "enum" : [ "it" ]
      },
      "StandardStickerResponse" : {
        "title" : "StandardStickerResponse",
        "required" : [ "id", "name", "pack_id", "sort_value", "tags", "type" ],
        "type" : "object",
        "properties" : {
          "format_type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/StickerFormatTypes"
              } ]
            }, { } ],
            "x-ballerina-name" : "formatType"
          },
          "pack_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "packId"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "sort_value" : {
            "type" : "integer",
            "format" : "int32",
            "x-ballerina-name" : "sortValue"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 1 ]
          },
          "tags" : {
            "type" : "string"
          }
        }
      },
      "DefaultKeywordListUpsertRequestActions" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/BlockMessageAction"
        }, {
          "$ref" : "#/components/schemas/FlagToChannelAction"
        }, {
          "$ref" : "#/components/schemas/QuarantineUserAction"
        }, {
          "$ref" : "#/components/schemas/UserCommunicationDisabledAction"
        }, {
          "$ref" : "#/components/schemas/ActionsOneOf5"
        } ]
      },
      "ApplicationCommandAttachmentOptionResponse" : {
        "title" : "ApplicationCommandAttachmentOptionResponse",
        "required" : [ "description", "name", "type" ],
        "type" : "object",
        "properties" : {
          "name_localized" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "nameLocalized"
          },
          "name_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "nameLocalizations"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "description_localized" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalized"
          },
          "description_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalizations"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 11 ]
          },
          "required" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "PtBR" : {
        "title" : "pt-BR",
        "type" : "string",
        "description" : "The pt-BR locale",
        "enum" : [ "pt-BR" ]
      },
      "ROLECONNECTIONSWRITE" : {
        "title" : "ROLE_CONNECTIONS_WRITE",
        "type" : "string",
        "description" : "allows your app to update a user's connection and metadata for the app",
        "enum" : [ "role_connections.write" ]
      },
      "PING" : {
        "title" : "PING",
        "type" : "integer",
        "description" : "Sent by Discord to validate your application's interaction handler",
        "enum" : [ 1 ]
      },
      "IncludeRolesIncludeRolesOneOf12" : {
        "maxItems" : 100,
        "uniqueItems" : true,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/InlineArrayItemsIncludeRolesIncludeRolesOneOf12"
        }
      },
      "Ja" : {
        "title" : "ja",
        "type" : "string",
        "description" : "The ja locale",
        "enum" : [ "ja" ]
      },
      "ApplicationRoleConnectionsMetadataItemResponse" : {
        "title" : "ApplicationRoleConnectionsMetadataItemResponse",
        "required" : [ "description", "key", "name", "type" ],
        "type" : "object",
        "properties" : {
          "name_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "nameLocalizations"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "description_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalizations"
          },
          "type" : {
            "$ref" : "#/components/schemas/MetadataItemTypes"
          },
          "key" : {
            "type" : "string"
          }
        }
      },
      "WebhookSourceChannelResponse" : {
        "title" : "WebhookSourceChannelResponse",
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }
      },
      "MLSpamRuleResponse" : {
        "title" : "MLSpamRuleResponse",
        "required" : [ "actions", "creator_id", "event_type", "guild_id", "id", "name", "trigger_metadata", "trigger_type" ],
        "type" : "object",
        "properties" : {
          "event_type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AutomodEventType"
            } ],
            "x-ballerina-name" : "eventType"
          },
          "trigger_type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 3 ],
            "x-ballerina-name" : "triggerType"
          },
          "guild_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "guildId"
          },
          "creator_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "creatorId"
          },
          "name" : {
            "type" : "string"
          },
          "exempt_roles" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "exemptRoles"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "exempt_channels" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "exemptChannels"
          },
          "actions" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/DefaultKeywordRuleResponseActions"
            }
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "trigger_metadata" : {
            "type" : "object",
            "x-ballerina-name" : "triggerMetadata"
          }
        }
      },
      "AutomodTriggerType" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/KEYWORD"
        }, {
          "$ref" : "#/components/schemas/SPAMLINK"
        }, {
          "$ref" : "#/components/schemas/MLSPAM"
        }, {
          "$ref" : "#/components/schemas/DEFAULTKEYWORDLIST"
        }, {
          "$ref" : "#/components/schemas/MENTIONSPAM"
        } ]
      },
      "GatewayBotSessionStartLimitResponse" : {
        "title" : "GatewayBotSessionStartLimitResponse",
        "required" : [ "max_concurrency", "remaining", "reset_after", "total" ],
        "type" : "object",
        "properties" : {
          "reset_after" : {
            "type" : "integer",
            "format" : "int32",
            "x-ballerina-name" : "resetAfter"
          },
          "max_concurrency" : {
            "type" : "integer",
            "format" : "int32",
            "x-ballerina-name" : "maxConcurrency"
          },
          "total" : {
            "type" : "integer",
            "format" : "int32"
          },
          "remaining" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "GithubCheckRun" : {
        "title" : "GithubCheckRun",
        "required" : [ "check_suite", "html_url", "name" ],
        "type" : "object",
        "properties" : {
          "conclusion" : {
            "maxLength" : 152133,
            "type" : "string",
            "nullable" : true
          },
          "output" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/GithubCheckRunOutput"
            }, {
              "nullable" : true
            } ]
          },
          "pull_requests" : {
            "maxItems" : 1521,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/GithubCheckPullRequest"
            },
            "x-ballerina-name" : "pullRequests"
          },
          "html_url" : {
            "maxLength" : 2048,
            "type" : "string",
            "x-ballerina-name" : "htmlUrl"
          },
          "name" : {
            "maxLength" : 152133,
            "type" : "string"
          },
          "check_suite" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/GithubCheckSuite"
            } ],
            "x-ballerina-name" : "checkSuite"
          },
          "details_url" : {
            "maxLength" : 2048,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "detailsUrl"
          }
        }
      },
      "ApplicationCommandOptionIntegerChoiceResponse" : {
        "title" : "ApplicationCommandOptionIntegerChoiceResponse",
        "required" : [ "name", "value" ],
        "type" : "object",
        "properties" : {
          "name_localized" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "nameLocalized"
          },
          "name_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "nameLocalizations"
          },
          "name" : {
            "type" : "string"
          },
          "value" : {
            "maximum" : 9007199254740991,
            "minimum" : -9007199254740991,
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "ALLMEMBERS" : {
        "title" : "ALL_MEMBERS",
        "type" : "integer",
        "description" : "media content sent by all members will be scanned",
        "enum" : [ 2 ]
      },
      "StickerTypes" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/STANDARD"
        }, {
          "$ref" : "#/components/schemas/GUILD1"
        } ]
      },
      "IDENTIFY" : {
        "title" : "IDENTIFY",
        "type" : "string",
        "description" : "allows /users/@me without email",
        "enum" : [ "identify" ]
      },
      "GuildsRolesRequest" : {
        "title" : "GuildsRolesRequest",
        "type" : "object",
        "properties" : {
          "color" : {
            "maximum" : 16777215,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "unicode_emoji" : {
            "maxLength" : 100,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "unicodeEmoji"
          },
          "permissions" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "name" : {
            "maxLength" : 100,
            "type" : "string",
            "nullable" : true
          },
          "icon" : {
            "type" : "string",
            "format" : "binary",
            "nullable" : true
          },
          "mentionable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "hoist" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Ko" : {
        "title" : "ko",
        "type" : "string",
        "description" : "The ko locale",
        "enum" : [ "ko" ]
      },
      "InnerErrors" : {
        "title" : "InnerErrors",
        "required" : [ "_errors" ],
        "type" : "object",
        "properties" : {
          "_errors" : {
            "type" : "array",
            "description" : "The list of errors for this field",
            "items" : {
              "$ref" : "#/components/schemas/Error"
            },
            "x-ballerina-name" : "errors"
          }
        }
      },
      "ActionRowComponents" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/Button"
        }, {
          "$ref" : "#/components/schemas/ChannelSelect"
        }, {
          "$ref" : "#/components/schemas/InputText"
        }, {
          "$ref" : "#/components/schemas/MentionableSelect"
        }, {
          "$ref" : "#/components/schemas/RoleSelect"
        }, {
          "$ref" : "#/components/schemas/StringSelect"
        }, {
          "$ref" : "#/components/schemas/UserSelect"
        } ]
      },
      "ACTIVITIESWRITE" : {
        "title" : "ACTIVITIES_WRITE",
        "type" : "string",
        "description" : "allows your app to update a user's activity - requires Discord approval (NOT REQUIRED FOR GAMESDK ACTIVITY MANAGER)",
        "enum" : [ "activities.write" ]
      },
      "VoiceScheduledEventCreateRequest" : {
        "title" : "VoiceScheduledEventCreateRequest",
        "required" : [ "entity_type", "name", "privacy_level", "scheduled_start_time" ],
        "type" : "object",
        "properties" : {
          "image" : {
            "type" : "string",
            "format" : "binary",
            "nullable" : true
          },
          "entity_type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 2 ],
            "x-ballerina-name" : "entityType"
          },
          "privacy_level" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/GuildScheduledEventPrivacyLevels"
            } ],
            "x-ballerina-name" : "privacyLevel"
          },
          "name" : {
            "maxLength" : 100,
            "type" : "string"
          },
          "entity_metadata" : {
            "oneOf" : [ {
              "type" : "object"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "entityMetadata"
          },
          "description" : {
            "maxLength" : 1000,
            "type" : "string",
            "nullable" : true
          },
          "channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "channelId"
          },
          "scheduled_start_time" : {
            "type" : "string",
            "format" : "date-time",
            "x-ballerina-name" : "scheduledStartTime"
          },
          "scheduled_end_time" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "scheduledEndTime"
          }
        }
      },
      "USERSELECT1" : {
        "title" : "USER_SELECT1",
        "type" : "integer",
        "description" : "Select menu for users",
        "enum" : [ 5 ]
      },
      "GuildAuditLogResponse" : {
        "title" : "GuildAuditLogResponse",
        "required" : [ "application_commands", "audit_log_entries", "auto_moderation_rules", "guild_scheduled_events", "integrations", "threads", "users", "webhooks" ],
        "type" : "object",
        "properties" : {
          "webhooks" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/InlineResponse2004"
            }
          },
          "application_commands" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/ApplicationCommandResponse"
            },
            "x-ballerina-name" : "applicationCommands"
          },
          "threads" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/ThreadResponse"
            }
          },
          "guild_scheduled_events" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/InlineResponse2003"
            },
            "x-ballerina-name" : "guildScheduledEvents"
          },
          "integrations" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/GuildAuditLogResponseIntegrations"
            }
          },
          "auto_moderation_rules" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/InlineResponse2001"
            },
            "x-ballerina-name" : "autoModerationRules"
          },
          "users" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/UserResponse"
            }
          },
          "audit_log_entries" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/AuditLogEntryResponse"
            },
            "x-ballerina-name" : "auditLogEntries"
          }
        }
      },
      "InteractionsCallbackRequest" : {
        "title" : "InteractionsCallbackRequest",
        "type" : "object",
        "properties" : {
          "data" : {
            "anyOf" : [ {
              "$ref" : "#/components/schemas/InteractionApplicationCommandAutocompleteCallbackIntegerData"
            }, {
              "$ref" : "#/components/schemas/InteractionApplicationCommandAutocompleteCallbackNumberData"
            }, {
              "$ref" : "#/components/schemas/InteractionApplicationCommandAutocompleteCallbackStringData"
            } ]
          },
          "type" : { }
        }
      },
      "GuildPreviewResponse" : {
        "title" : "GuildPreviewResponse",
        "required" : [ "approximate_member_count", "approximate_presence_count", "emojis", "features", "id", "name", "stickers" ],
        "type" : "object",
        "properties" : {
          "emojis" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/EmojiResponse"
            }
          },
          "features" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/GuildFeatures"
            }
          },
          "home_header" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "homeHeader"
          },
          "approximate_presence_count" : {
            "type" : "integer",
            "format" : "int32",
            "x-ballerina-name" : "approximatePresenceCount"
          },
          "discovery_splash" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "discoverySplash"
          },
          "approximate_member_count" : {
            "type" : "integer",
            "format" : "int32",
            "x-ballerina-name" : "approximateMemberCount"
          },
          "name" : {
            "type" : "string"
          },
          "icon" : {
            "type" : "string",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "stickers" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/GuildStickerResponse"
            }
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "splash" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "STAGEEND" : {
        "title" : "STAGE_END",
        "type" : "integer",
        "enum" : [ 28 ]
      },
      "GroupDMInviteResponse" : {
        "title" : "GroupDMInviteResponse",
        "required" : [ "code" ],
        "type" : "object",
        "properties" : {
          "max_age" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxAge"
          },
          "code" : {
            "type" : "string"
          },
          "expires_at" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "expiresAt"
          },
          "approximate_member_count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "approximateMemberCount"
          },
          "channel" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/InviteChannelResponse"
            }, {
              "nullable" : true
            } ]
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "createdAt"
          },
          "inviter" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/UserResponse"
            }, {
              "nullable" : true
            } ]
          },
          "type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/InviteTypes"
              } ]
            }, { } ]
          }
        }
      },
      "INTEGRATIONCREATE" : {
        "title" : "INTEGRATION_CREATE",
        "type" : "integer",
        "enum" : [ 80 ]
      },
      "GUILDBOOSTTIER2" : {
        "title" : "GUILD_BOOST_TIER_2",
        "type" : "integer",
        "enum" : [ 10 ]
      },
      "GUILDBOOSTTIER3" : {
        "title" : "GUILD_BOOST_TIER_3",
        "type" : "integer",
        "enum" : [ 11 ]
      },
      "GuildsVoiceStatesMeRequest" : {
        "title" : "GuildsVoiceStatesMeRequest",
        "type" : "object",
        "properties" : {
          "request_to_speak_timestamp" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "requestToSpeakTimestamp"
          },
          "suppress" : {
            "type" : "boolean",
            "nullable" : true
          },
          "channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "channelId"
          }
        }
      },
      "GuildFeatures" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ANIMATEDBANNER"
        }, {
          "$ref" : "#/components/schemas/ANIMATEDICON"
        }, {
          "$ref" : "#/components/schemas/APPLICATIONCOMMANDPERMISSIONSV2"
        }, {
          "$ref" : "#/components/schemas/AUTOMODERATION"
        }, {
          "$ref" : "#/components/schemas/BANNER"
        }, {
          "$ref" : "#/components/schemas/COMMUNITY"
        }, {
          "$ref" : "#/components/schemas/CREATORMONETIZABLEPROVISIONAL"
        }, {
          "$ref" : "#/components/schemas/CREATORSTOREPAGE"
        }, {
          "$ref" : "#/components/schemas/DEVELOPERSUPPORTSERVER"
        }, {
          "$ref" : "#/components/schemas/DISCOVERABLE"
        }, {
          "$ref" : "#/components/schemas/FEATURABLE"
        }, {
          "$ref" : "#/components/schemas/INVITESDISABLED"
        }, {
          "$ref" : "#/components/schemas/INVITESPLASH"
        }, {
          "$ref" : "#/components/schemas/MEMBERVERIFICATIONGATEENABLED"
        }, {
          "$ref" : "#/components/schemas/MORESTICKERS"
        }, {
          "$ref" : "#/components/schemas/NEWS"
        }, {
          "$ref" : "#/components/schemas/PARTNERED"
        }, {
          "$ref" : "#/components/schemas/PREVIEWENABLED"
        }, {
          "$ref" : "#/components/schemas/RAIDALERTSDISABLED"
        }, {
          "$ref" : "#/components/schemas/ROLEICONS"
        }, {
          "$ref" : "#/components/schemas/ROLESUBSCRIPTIONSAVAILABLEFORPURCHASE"
        }, {
          "$ref" : "#/components/schemas/ROLESUBSCRIPTIONSENABLED"
        }, {
          "$ref" : "#/components/schemas/TICKETEDEVENTSENABLED"
        }, {
          "$ref" : "#/components/schemas/VANITYURL"
        }, {
          "$ref" : "#/components/schemas/VERIFIED"
        }, {
          "$ref" : "#/components/schemas/VIPREGIONS"
        }, {
          "$ref" : "#/components/schemas/WELCOMESCREENENABLED"
        } ]
      },
      "ButtonStyleTypes" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/PRIMARY"
        }, {
          "$ref" : "#/components/schemas/SECONDARY"
        }, {
          "$ref" : "#/components/schemas/SUCCESS"
        }, {
          "$ref" : "#/components/schemas/DANGER"
        }, {
          "$ref" : "#/components/schemas/LINK"
        }, {
          "$ref" : "#/components/schemas/PREMIUM"
        } ]
      },
      "BOT" : {
        "title" : "BOT",
        "type" : "string",
        "description" : "for oauth2 bots, this puts the bot in the user's selected guild by default",
        "enum" : [ "bot" ]
      },
      "Lt" : {
        "title" : "lt",
        "type" : "string",
        "description" : "The lt locale",
        "enum" : [ "lt" ]
      },
      "ChannelPermissionOverwrites" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ROLE2"
        }, {
          "$ref" : "#/components/schemas/MEMBER"
        } ]
      },
      "GuildsMembersMeRequest" : {
        "title" : "GuildsMembersMeRequest",
        "type" : "object",
        "properties" : {
          "nick" : {
            "maxLength" : 32,
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "RichEmbedField" : {
        "title" : "RichEmbedField",
        "required" : [ "name", "value" ],
        "type" : "object",
        "properties" : {
          "inline" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "maxLength" : 256,
            "type" : "string"
          },
          "value" : {
            "maxLength" : 1024,
            "type" : "string"
          }
        }
      },
      "MessageComponentChannelSelectResponse" : {
        "title" : "MessageComponentChannelSelectResponse",
        "required" : [ "custom_id", "id", "type" ],
        "type" : "object",
        "properties" : {
          "min_values" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "minValues"
          },
          "custom_id" : {
            "type" : "string",
            "x-ballerina-name" : "customId"
          },
          "max_values" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxValues"
          },
          "channel_types" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ChannelTypes"
            },
            "x-ballerina-name" : "channelTypes"
          },
          "disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "placeholder" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 8 ]
          }
        }
      },
      "RoleSelectDefaultValue" : {
        "title" : "RoleSelectDefaultValue",
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "role" ]
          }
        }
      },
      "MessageReferenceRequest" : {
        "title" : "MessageReferenceRequest",
        "required" : [ "message_id" ],
        "type" : "object",
        "properties" : {
          "fail_if_not_exists" : {
            "type" : "boolean",
            "nullable" : true,
            "x-ballerina-name" : "failIfNotExists"
          },
          "guild_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "guildId"
          },
          "message_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "messageId"
          },
          "type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/MessageReferenceType"
              } ]
            }, { } ]
          },
          "channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "channelId"
          }
        }
      },
      "MessageAttachmentResponse" : {
        "title" : "MessageAttachmentResponse",
        "required" : [ "filename", "id", "proxy_url", "size", "url" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "ephemeral" : {
            "type" : "boolean",
            "nullable" : true
          },
          "duration_secs" : {
            "type" : "number",
            "nullable" : true,
            "x-ballerina-name" : "durationSecs"
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          },
          "url" : {
            "type" : "string"
          },
          "clip_participants" : {
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/UserResponse"
            },
            "x-ballerina-name" : "clipParticipants"
          },
          "filename" : {
            "type" : "string"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content_type" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "contentType"
          },
          "application" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ApplicationResponse"
            }, {
              "nullable" : true
            } ]
          },
          "width" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "clip_created_at" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "clipCreatedAt"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "proxy_url" : {
            "type" : "string",
            "x-ballerina-name" : "proxyUrl"
          },
          "waveform" : {
            "type" : "string",
            "nullable" : true
          },
          "height" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "ACTIVE" : {
        "title" : "ACTIVE",
        "type" : "integer",
        "enum" : [ 2 ]
      },
      "INVITED" : {
        "title" : "INVITED",
        "type" : "integer",
        "description" : "User has been invited to the team",
        "enum" : [ 1 ]
      },
      "FlagToChannelAction" : {
        "title" : "FlagToChannelAction",
        "required" : [ "metadata", "type" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/FlagToChannelActionMetadata"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 2 ]
          }
        }
      },
      "GuildWelcomeScreenResponse" : {
        "title" : "GuildWelcomeScreenResponse",
        "required" : [ "welcome_channels" ],
        "type" : "object",
        "properties" : {
          "welcome_channels" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/GuildWelcomeScreenChannelResponse"
            },
            "x-ballerina-name" : "welcomeChannels"
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "GuildTemplateChannelResponse" : {
        "title" : "GuildTemplateChannelResponse",
        "required" : [ "bitrate", "nsfw", "permission_overwrites", "rate_limit_per_user", "template", "type", "user_limit" ],
        "type" : "object",
        "properties" : {
          "template" : {
            "type" : "string"
          },
          "theme_color" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "themeColor"
          },
          "nsfw" : {
            "type" : "boolean"
          },
          "icon_emoji" : {
            "oneOf" : [ {
              "type" : "object"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "iconEmoji"
          },
          "rate_limit_per_user" : {
            "type" : "integer",
            "format" : "int32",
            "x-ballerina-name" : "rateLimitPerUser"
          },
          "bitrate" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "$ref" : "#/components/schemas/ChannelTypes"
          },
          "user_limit" : {
            "type" : "integer",
            "format" : "int32",
            "x-ballerina-name" : "userLimit"
          },
          "permission_overwrites" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/GuildTemplateChannelResponsePermissionOverwrites"
            },
            "x-ballerina-name" : "permissionOverwrites"
          },
          "default_thread_rate_limit_per_user" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "defaultThreadRateLimitPerUser"
          },
          "default_auto_archive_duration" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ThreadAutoArchiveDuration"
              } ]
            }, { } ],
            "x-ballerina-name" : "defaultAutoArchiveDuration"
          },
          "parent_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "parentId"
          },
          "default_reaction_emoji" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/DefaultReactionEmojiResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "defaultReactionEmoji"
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "topic" : {
            "type" : "string",
            "nullable" : true
          },
          "default_forum_layout" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ForumLayout"
              } ]
            }, { } ],
            "x-ballerina-name" : "defaultForumLayout"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "position" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "available_tags" : {
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/GuildTemplateChannelTags"
            },
            "x-ballerina-name" : "availableTags"
          },
          "default_sort_order" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ThreadSortOrder"
              } ]
            }, { } ],
            "x-ballerina-name" : "defaultSortOrder"
          }
        }
      },
      "Es419" : {
        "title" : "es-419",
        "type" : "string",
        "description" : "The es-419 locale",
        "enum" : [ "es-419" ]
      },
      "MEMBER" : {
        "title" : "MEMBER",
        "type" : "integer",
        "enum" : [ 1 ]
      },
      "FlagToChannelActionResponse" : {
        "title" : "FlagToChannelActionResponse",
        "required" : [ "metadata", "type" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/FlagToChannelActionMetadataResponse"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 2 ]
          }
        }
      },
      "MessageAttachmentRequest" : {
        "title" : "MessageAttachmentRequest",
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "filename" : {
            "maxLength" : 1024,
            "type" : "string",
            "nullable" : true
          },
          "description" : {
            "maxLength" : 1024,
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "is_remix" : {
            "type" : "boolean",
            "nullable" : true,
            "x-ballerina-name" : "isRemix"
          }
        }
      },
      "MessageCreateRequest" : {
        "title" : "MessageCreateRequest",
        "type" : "object",
        "properties" : {
          "components" : {
            "maxItems" : 5,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ActionRow"
            }
          },
          "tts" : {
            "type" : "boolean",
            "nullable" : true
          },
          "attachments" : {
            "maxItems" : 10,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/MessageAttachmentRequest"
            }
          },
          "sticker_ids" : {
            "maxItems" : 3,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "stickerIds"
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "allowed_mentions" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MessageAllowedMentionsRequest"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "allowedMentions"
          },
          "message_reference" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MessageReferenceRequest"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "messageReference"
          },
          "embeds" : {
            "maxItems" : 10,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/RichEmbed"
            }
          },
          "nonce" : {
            "oneOf" : [ {
              "maximum" : 9223372036854776000,
              "minimum" : -9223372036854776000,
              "type" : "integer",
              "format" : "int64"
            }, {
              "maxLength" : 25,
              "type" : "string"
            }, {
              "nullable" : true
            } ]
          },
          "content" : {
            "maxLength" : 4000,
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "EXTERNAL" : {
        "title" : "EXTERNAL",
        "type" : "integer",
        "enum" : [ 3 ]
      },
      "MentionSpamUpsertRequestPartial" : {
        "title" : "MentionSpamUpsertRequestPartial",
        "type" : "object",
        "properties" : {
          "event_type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AutomodEventType"
            } ],
            "x-ballerina-name" : "eventType"
          },
          "trigger_type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AutomodTriggerType"
            } ],
            "x-ballerina-name" : "triggerType"
          },
          "name" : {
            "maxLength" : 100,
            "type" : "string"
          },
          "exempt_roles" : {
            "maxItems" : 20,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "exemptRoles"
          },
          "exempt_channels" : {
            "maxItems" : 50,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "exemptChannels"
          },
          "actions" : {
            "maxItems" : 5,
            "minItems" : 1,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/MentionSpamUpsertRequestPartialActions"
            }
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "trigger_metadata" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MentionSpamTriggerMetadata"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "triggerMetadata"
          }
        }
      },
      "ANNOUNCEMENTTHREAD" : {
        "title" : "ANNOUNCEMENT_THREAD",
        "type" : "integer",
        "description" : "A temporary sub-channel within a GUILD_ANNOUNCEMENT channel",
        "enum" : [ 10 ]
      },
      "GithubRelease" : {
        "title" : "GithubRelease",
        "required" : [ "author", "html_url", "id", "tag_name" ],
        "type" : "object",
        "properties" : {
          "tag_name" : {
            "maxLength" : 152133,
            "type" : "string",
            "x-ballerina-name" : "tagName"
          },
          "author" : {
            "$ref" : "#/components/schemas/GithubUser"
          },
          "html_url" : {
            "maxLength" : 2048,
            "type" : "string",
            "x-ballerina-name" : "htmlUrl"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "GithubReview" : {
        "title" : "GithubReview",
        "required" : [ "html_url", "state", "user" ],
        "type" : "object",
        "properties" : {
          "html_url" : {
            "maxLength" : 2048,
            "type" : "string",
            "x-ballerina-name" : "htmlUrl"
          },
          "state" : {
            "maxLength" : 152133,
            "type" : "string"
          },
          "body" : {
            "maxLength" : 152133,
            "type" : "string",
            "nullable" : true
          },
          "user" : {
            "$ref" : "#/components/schemas/GithubUser"
          }
        }
      },
      "Nl" : {
        "title" : "nl",
        "type" : "string",
        "description" : "The nl locale",
        "enum" : [ "nl" ]
      },
      "ApplicationCommandType" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/CHAT"
        }, {
          "$ref" : "#/components/schemas/USER"
        }, {
          "$ref" : "#/components/schemas/MESSAGE"
        } ]
      },
      "No" : {
        "title" : "no",
        "type" : "string",
        "description" : "The no locale",
        "enum" : [ "no" ]
      },
      "ApplicationCommandSubcommandOptionOptions" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ApplicationCommandAttachmentOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandBooleanOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandChannelOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandIntegerOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandMentionableOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandNumberOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandRoleOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandStringOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandUserOption"
        }, {
          "$ref" : "#/components/schemas/OptionsOneOf10"
        } ]
      },
      "MessageEmbedFieldResponse" : {
        "title" : "MessageEmbedFieldResponse",
        "required" : [ "inline", "name", "value" ],
        "type" : "object",
        "properties" : {
          "inline" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "GuildOnboardingMode" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ONBOARDINGDEFAULT"
        }, {
          "$ref" : "#/components/schemas/ONBOARDINGADVANCED"
        } ]
      },
      "GUILDHOMEFEATUREITEM" : {
        "title" : "GUILD_HOME_FEATURE_ITEM",
        "type" : "integer",
        "enum" : [ 171 ]
      },
      "MessageReactionResponse" : {
        "title" : "MessageReactionResponse",
        "required" : [ "burst_colors", "count", "count_details", "emoji", "me", "me_burst" ],
        "type" : "object",
        "properties" : {
          "count_details" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MessageReactionCountDetailsResponse"
            } ],
            "x-ballerina-name" : "countDetails"
          },
          "emoji" : {
            "$ref" : "#/components/schemas/MessageReactionEmojiResponse"
          },
          "me_burst" : {
            "type" : "boolean",
            "x-ballerina-name" : "meBurst"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "me" : {
            "type" : "boolean"
          },
          "burst_colors" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "burstColors"
          }
        }
      },
      "STREAM" : {
        "title" : "STREAM",
        "type" : "integer",
        "enum" : [ 1 ]
      },
      "PRIMARY" : {
        "title" : "PRIMARY",
        "type" : "integer",
        "enum" : [ 1 ]
      },
      "ApplicationCommandUpdateRequestOptions" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ApplicationCommandAttachmentOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandBooleanOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandChannelOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandIntegerOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandMentionableOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandNumberOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandRoleOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandStringOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandSubcommandGroupOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandSubcommandOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandUserOption"
        }, {
          "$ref" : "#/components/schemas/OptionsOneOf123"
        } ]
      },
      "GuildsEmojisRequest1" : {
        "title" : "GuildsEmojisRequest1",
        "required" : [ "image", "name" ],
        "type" : "object",
        "properties" : {
          "image" : {
            "type" : "string",
            "format" : "binary"
          },
          "roles" : {
            "maxItems" : 1521,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/GuildsEmojisRequest1Roles"
            }
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 2,
            "type" : "string"
          }
        }
      },
      "CHANNELOVERWRITEUPDATE" : {
        "title" : "CHANNEL_OVERWRITE_UPDATE",
        "type" : "integer",
        "enum" : [ 14 ]
      },
      "EMBEDDEDAPPLICATION" : {
        "title" : "EMBEDDED_APPLICATION",
        "type" : "integer",
        "enum" : [ 2 ]
      },
      "BasicMessageResponseMentionChannels" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/MessageMentionChannelResponse"
        }, {
          "$ref" : "#/components/schemas/MentionChannelsOneOf2"
        } ]
      },
      "GuildMFALevelResponse" : {
        "title" : "GuildMFALevelResponse",
        "required" : [ "level" ],
        "type" : "object",
        "properties" : {
          "level" : {
            "$ref" : "#/components/schemas/GuildMFALevel"
          }
        }
      },
      "UNKNOWN" : {
        "title" : "UNKNOWN",
        "type" : "integer",
        "enum" : [ 0 ]
      },
      "ROLESUBSCRIPTIONSENABLED" : {
        "title" : "ROLE_SUBSCRIPTIONS_ENABLED",
        "type" : "string",
        "description" : "guild has enabled role subscriptions",
        "enum" : [ "ROLE_SUBSCRIPTIONS_ENABLED" ]
      },
      "GithubCheckApp" : {
        "title" : "GithubCheckApp",
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "maxLength" : 152133,
            "type" : "string"
          }
        }
      },
      "SKYPE" : {
        "title" : "SKYPE",
        "type" : "string",
        "enum" : [ "skype" ]
      },
      "GuildIdStickersBody" : {
        "required" : [ "file", "name", "tags" ],
        "type" : "object",
        "properties" : {
          "file" : {
            "type" : "string",
            "format" : "binary"
          },
          "name" : {
            "maxLength" : 30,
            "minLength" : 2,
            "type" : "string"
          },
          "description" : {
            "maxLength" : 100,
            "type" : "string",
            "nullable" : true
          },
          "tags" : {
            "maxLength" : 200,
            "minLength" : 1,
            "type" : "string"
          }
        }
      },
      "OnboardingPromptOptionRequest" : {
        "title" : "OnboardingPromptOptionRequest",
        "required" : [ "title" ],
        "type" : "object",
        "properties" : {
          "channel_ids" : {
            "maxItems" : 50,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "channelIds"
          },
          "description" : {
            "maxLength" : 100,
            "type" : "string",
            "nullable" : true
          },
          "emoji_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "emojiId"
          },
          "emoji_name" : {
            "maxLength" : 100,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "emojiName"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ]
          },
          "title" : {
            "maxLength" : 50,
            "minLength" : 1,
            "type" : "string"
          },
          "emoji_animated" : {
            "type" : "boolean",
            "nullable" : true,
            "x-ballerina-name" : "emojiAnimated"
          },
          "role_ids" : {
            "maxItems" : 50,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "roleIds"
          }
        }
      },
      "IncomingWebhookInteractionRequest" : {
        "title" : "IncomingWebhookInteractionRequest",
        "type" : "object",
        "properties" : {
          "components" : {
            "maxItems" : 5,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ActionRow"
            }
          },
          "tts" : {
            "type" : "boolean",
            "nullable" : true
          },
          "attachments" : {
            "maxItems" : 10,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/MessageAttachmentRequest"
            }
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "allowed_mentions" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MessageAllowedMentionsRequest"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "allowedMentions"
          },
          "embeds" : {
            "maxItems" : 10,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/RichEmbed"
            }
          },
          "content" : {
            "maxLength" : 2000,
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "RolesRolesOneOf132" : {
        "nullable" : true
      },
      "KeywordUpsertRequest" : {
        "title" : "KeywordUpsertRequest",
        "required" : [ "event_type", "name", "trigger_type" ],
        "type" : "object",
        "properties" : {
          "event_type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AutomodEventType"
            } ],
            "x-ballerina-name" : "eventType"
          },
          "trigger_type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 1 ],
            "x-ballerina-name" : "triggerType"
          },
          "name" : {
            "maxLength" : 100,
            "type" : "string"
          },
          "exempt_roles" : {
            "maxItems" : 20,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "exemptRoles"
          },
          "exempt_channels" : {
            "maxItems" : 50,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "exemptChannels"
          },
          "actions" : {
            "maxItems" : 5,
            "minItems" : 1,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/KeywordUpsertRequestActions"
            }
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "trigger_metadata" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/KeywordTriggerMetadata"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "triggerMetadata"
          }
        }
      },
      "GuildScheduledEventStatuses" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/SCHEDULED"
        }, {
          "$ref" : "#/components/schemas/ACTIVE"
        }, {
          "$ref" : "#/components/schemas/COMPLETED"
        }, {
          "$ref" : "#/components/schemas/CANCELED"
        } ]
      },
      "CHATINPUTCOMMAND" : {
        "title" : "CHAT_INPUT_COMMAND",
        "type" : "integer",
        "enum" : [ 20 ]
      },
      "BUTTON1" : {
        "title" : "BUTTON1",
        "type" : "integer",
        "description" : "Button object",
        "enum" : [ 2 ]
      },
      "UserCommunicationDisabledActionMetadata" : {
        "title" : "UserCommunicationDisabledActionMetadata",
        "type" : "object",
        "properties" : {
          "duration_seconds" : {
            "maximum" : 2419200.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "durationSeconds"
          }
        }
      },
      "COMMUNITY" : {
        "title" : "COMMUNITY",
        "type" : "string",
        "description" : "guild can enable welcome screen, Membership Screening, stage channels and discovery, and             receives community updates",
        "enum" : [ "COMMUNITY" ]
      },
      "ConnectedAccountVisibility" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/NONE"
        }, {
          "$ref" : "#/components/schemas/EVERYONE1"
        } ]
      },
      "KeywordUpsertRequestPartial" : {
        "title" : "KeywordUpsertRequestPartial",
        "type" : "object",
        "properties" : {
          "event_type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AutomodEventType"
            } ],
            "x-ballerina-name" : "eventType"
          },
          "trigger_type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AutomodTriggerType"
            } ],
            "x-ballerina-name" : "triggerType"
          },
          "name" : {
            "maxLength" : 100,
            "type" : "string"
          },
          "exempt_roles" : {
            "maxItems" : 20,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "exemptRoles"
          },
          "exempt_channels" : {
            "maxItems" : 50,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "exemptChannels"
          },
          "actions" : {
            "maxItems" : 5,
            "minItems" : 1,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/KeywordUpsertRequestPartialActions"
            }
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "trigger_metadata" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/KeywordTriggerMetadata"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "triggerMetadata"
          }
        }
      },
      "BUNGIE" : {
        "title" : "BUNGIE",
        "type" : "string",
        "enum" : [ "bungie" ]
      },
      "AfkTimeouts" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ONEMINUTE"
        }, {
          "$ref" : "#/components/schemas/FIVEMINUTES"
        }, {
          "$ref" : "#/components/schemas/FIFTEENMINUTES"
        }, {
          "$ref" : "#/components/schemas/THIRTYMINUTES"
        }, {
          "$ref" : "#/components/schemas/ONEHOUR"
        } ]
      },
      "Pl" : {
        "title" : "pl",
        "type" : "string",
        "description" : "The pl locale",
        "enum" : [ "pl" ]
      },
      "MentionSpamTriggerMetadata" : {
        "title" : "MentionSpamTriggerMetadata",
        "required" : [ "mention_total_limit" ],
        "type" : "object",
        "properties" : {
          "mention_total_limit" : {
            "maximum" : 50.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "x-ballerina-name" : "mentionTotalLimit"
          },
          "mention_raid_protection_enabled" : {
            "type" : "boolean",
            "nullable" : true,
            "x-ballerina-name" : "mentionRaidProtectionEnabled"
          }
        }
      },
      "MESSAGEUNPIN" : {
        "title" : "MESSAGE_UNPIN",
        "type" : "integer",
        "enum" : [ 75 ]
      },
      "MEMBERBANREMOVE" : {
        "title" : "MEMBER_BAN_REMOVE",
        "type" : "integer",
        "enum" : [ 23 ]
      },
      "RolesRolesOneOf142" : {
        "nullable" : true
      },
      "ChannelFollowerWebhookResponse" : {
        "title" : "ChannelFollowerWebhookResponse",
        "required" : [ "id", "name", "type" ],
        "type" : "object",
        "properties" : {
          "source_channel" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/WebhookSourceChannelResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "sourceChannel"
          },
          "source_guild" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/WebhookSourceGuildResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "sourceGuild"
          },
          "guild_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "guildId"
          },
          "name" : {
            "type" : "string"
          },
          "avatar" : {
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 2 ]
          },
          "application_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "applicationId"
          },
          "channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "channelId"
          },
          "user" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/UserResponse"
            }, {
              "nullable" : true
            } ]
          }
        }
      },
      "GuildPruneResponse" : {
        "title" : "GuildPruneResponse",
        "type" : "object",
        "properties" : {
          "pruned" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "APPLICATIONSUBSCRIPTION" : {
        "title" : "APPLICATION_SUBSCRIPTION",
        "type" : "integer",
        "enum" : [ 8 ]
      },
      "GithubIssue" : {
        "title" : "GithubIssue",
        "required" : [ "html_url", "id", "number", "title", "user" ],
        "type" : "object",
        "properties" : {
          "number" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pull_request" : {
            "x-ballerina-name" : "pullRequest"
          },
          "html_url" : {
            "maxLength" : 2048,
            "type" : "string",
            "x-ballerina-name" : "htmlUrl"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "title" : {
            "maxLength" : 152133,
            "type" : "string"
          },
          "body" : {
            "maxLength" : 152133,
            "type" : "string",
            "nullable" : true
          },
          "user" : {
            "$ref" : "#/components/schemas/GithubUser"
          }
        }
      },
      "ChannelschannelIdBody" : {
        "anyOf" : [ {
          "$ref" : "#/components/schemas/PrivateChannelRequestPartial"
        }, {
          "$ref" : "#/components/schemas/UpdateGuildChannelRequestPartial"
        }, {
          "$ref" : "#/components/schemas/UpdateThreadRequestPartial"
        } ]
      },
      "ApplicationCommandRoleOption" : {
        "title" : "ApplicationCommandRoleOption",
        "required" : [ "description", "name", "type" ],
        "type" : "object",
        "properties" : {
          "name_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "nameLocalizations"
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 1,
            "type" : "string"
          },
          "description" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "description_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalizations"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 8 ]
          },
          "required" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "ROLES" : {
        "title" : "ROLES",
        "type" : "string",
        "description" : "Controls user mentions",
        "enum" : [ "roles" ]
      },
      "THREADCREATED" : {
        "title" : "THREAD_CREATED",
        "type" : "integer",
        "enum" : [ 18 ]
      },
      "APNG" : {
        "title" : "APNG",
        "type" : "integer",
        "enum" : [ 2 ]
      },
      "GUILDMEMBERJOINORUPDATE" : {
        "title" : "GUILD_MEMBER_JOIN_OR_UPDATE",
        "type" : "integer",
        "description" : "A user is attempting to join the server or a member's properties were updated",
        "enum" : [ 2 ]
      },
      "ChannelIdMessagesBody" : {
        "type" : "object",
        "properties" : {
          "components" : {
            "maxItems" : 5,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ActionRow"
            }
          },
          "tts" : {
            "type" : "boolean",
            "nullable" : true
          },
          "attachments" : {
            "maxItems" : 10,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/MessageAttachmentRequest"
            }
          },
          "sticker_ids" : {
            "maxItems" : 3,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "stickerIds"
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "allowed_mentions" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MessageAllowedMentionsRequest"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "allowedMentions"
          },
          "message_reference" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MessageReferenceRequest"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "messageReference"
          },
          "embeds" : {
            "maxItems" : 10,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/RichEmbed"
            }
          },
          "nonce" : {
            "oneOf" : [ {
              "maximum" : 9223372036854776000,
              "minimum" : -9223372036854776000,
              "type" : "integer",
              "format" : "int64"
            }, {
              "maxLength" : 25,
              "type" : "string"
            }, {
              "nullable" : true
            } ]
          },
          "content" : {
            "maxLength" : 4000,
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ChannelIdThreadsBody" : {
        "anyOf" : [ {
          "$ref" : "#/components/schemas/CreateForumThreadRequest"
        }, {
          "$ref" : "#/components/schemas/CreateTextThreadWithoutMessageRequest"
        } ]
      },
      "RolesRolesOneOf12" : {
        "nullable" : true
      },
      "CALL" : {
        "title" : "CALL",
        "type" : "integer",
        "enum" : [ 3 ]
      },
      "INTEGERNOTEQUAL" : {
        "title" : "INTEGER_NOT_EQUAL",
        "type" : "integer",
        "description" : "the metadata value (integer) is not equal to the guild's configured value (integer)",
        "enum" : [ 4 ]
      },
      "PurchaseNotificationResponse" : {
        "title" : "PurchaseNotificationResponse",
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "guild_product_purchase" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/GuildProductPurchaseResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "guildProductPurchase"
          },
          "type" : {
            "$ref" : "#/components/schemas/PurchaseType"
          }
        }
      },
      "STAGEINSTANCEUPDATE" : {
        "title" : "STAGE_INSTANCE_UPDATE",
        "type" : "integer",
        "enum" : [ 84 ]
      },
      "RIOTGAMES" : {
        "title" : "RIOT_GAMES",
        "type" : "string",
        "enum" : [ "riotgames" ]
      },
      "CHANNELOVERWRITECREATE" : {
        "title" : "CHANNEL_OVERWRITE_CREATE",
        "type" : "integer",
        "enum" : [ 13 ]
      },
      "CHANNELMESSAGEWITHSOURCE" : {
        "title" : "CHANNEL_MESSAGE_WITH_SOURCE",
        "type" : "integer",
        "enum" : [ 4 ]
      },
      "UpdateMessageInteractionCallbackRequest" : {
        "title" : "UpdateMessageInteractionCallbackRequest",
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/IncomingWebhookUpdateForInteractionCallbackRequestPartial"
            }, {
              "nullable" : true
            } ]
          },
          "type" : {
            "$ref" : "#/components/schemas/InteractionCallbackTypes"
          }
        }
      },
      "GUILDSCHEDULEDEVENTDELETE" : {
        "title" : "GUILD_SCHEDULED_EVENT_DELETE",
        "type" : "integer",
        "enum" : [ 102 ]
      },
      "MessageMentionChannelResponse" : {
        "title" : "MessageMentionChannelResponse",
        "required" : [ "guild_id", "id", "name", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "guild_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "guildId"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/ChannelTypes"
          }
        }
      },
      "INTEGERLESSTHANEQUAL" : {
        "title" : "INTEGER_LESS_THAN_EQUAL",
        "type" : "integer",
        "description" : "the metadata value (integer) is less than or equal to the guild's configured value (integer)",
        "enum" : [ 1 ]
      },
      "Ro" : {
        "title" : "ro",
        "type" : "string",
        "description" : "The ro locale",
        "enum" : [ "ro" ]
      },
      "GuildWelcomeScreenChannelResponse" : {
        "title" : "GuildWelcomeScreenChannelResponse",
        "required" : [ "channel_id", "description" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "emoji_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "emojiId"
          },
          "emoji_name" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "emojiName"
          },
          "channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "channelId"
          }
        }
      },
      "STANDARD" : {
        "title" : "STANDARD",
        "type" : "integer",
        "description" : "an official sticker in a pack, part of Nitro or in a removed purchasable pack",
        "enum" : [ 1 ]
      },
      "InteractionTypes" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/PING"
        }, {
          "$ref" : "#/components/schemas/APPLICATIONCOMMAND"
        }, {
          "$ref" : "#/components/schemas/MESSAGECOMPONENT"
        }, {
          "$ref" : "#/components/schemas/APPLICATIONCOMMANDAUTOCOMPLETE"
        }, {
          "$ref" : "#/components/schemas/MODALSUBMIT"
        } ]
      },
      "FIFTEENMINUTES" : {
        "title" : "FIFTEEN_MINUTES",
        "type" : "integer",
        "enum" : [ 900 ]
      },
      "RPCSCREENSHAREREAD" : {
        "title" : "RPC_SCREENSHARE_READ",
        "type" : "string",
        "description" : "for local rpc server access, this allows you to read a user's screenshare status- requires Discord approval",
        "enum" : [ "rpc.screenshare.read" ]
      },
      "Ru" : {
        "title" : "ru",
        "type" : "string",
        "description" : "The ru locale",
        "enum" : [ "ru" ]
      },
      "APPLICATIONSSTOREUPDATE" : {
        "title" : "APPLICATIONS_STORE_UPDATE",
        "type" : "string",
        "description" : "allows your app to read and update store data (SKUs, store listings, achievements, etc.) for a user's applications",
        "enum" : [ "applications.store.update" ]
      },
      "GithubCheckRunOutput" : {
        "title" : "GithubCheckRunOutput",
        "type" : "object",
        "properties" : {
          "summary" : {
            "maxLength" : 152133,
            "type" : "string",
            "nullable" : true
          },
          "title" : {
            "maxLength" : 152133,
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "KICK" : {
        "title" : "KICK",
        "type" : "integer",
        "description" : "Kick",
        "enum" : [ 1 ]
      },
      "InlineResponse4XXAllOf2" : {
        "description" : "Errors object returned by the Discord API"
      },
      "CreatePrivateChannelRequest" : {
        "title" : "CreatePrivateChannelRequest",
        "type" : "object",
        "properties" : {
          "access_tokens" : {
            "maxItems" : 1521,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "maxLength" : 152133,
              "type" : "string"
            },
            "x-ballerina-name" : "accessTokens"
          },
          "recipient_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "recipientId"
          },
          "nicks" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "PremiumTypes" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/NONE5"
        }, {
          "$ref" : "#/components/schemas/TIER11"
        }, {
          "$ref" : "#/components/schemas/TIER21"
        }, {
          "$ref" : "#/components/schemas/TIER0"
        } ]
      },
      "MESSAGESREAD" : {
        "title" : "MESSAGES_READ",
        "type" : "string",
        "description" : "for local rpc server api access, this allows you to read messages from all client channels (otherwise restricted to channels/guilds your app creates)",
        "enum" : [ "messages.read" ]
      },
      "EPICGAMES" : {
        "title" : "EPIC_GAMES",
        "type" : "string",
        "enum" : [ "epicgames" ]
      },
      "ChannelsWebhooksRequest" : {
        "title" : "ChannelsWebhooksRequest",
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          },
          "avatar" : {
            "type" : "string",
            "format" : "binary",
            "nullable" : true
          }
        }
      },
      "CHANNELNAMECHANGE" : {
        "title" : "CHANNEL_NAME_CHANGE",
        "type" : "integer",
        "enum" : [ 4 ]
      },
      "IntegrationExpireGracePeriodTypes" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ONEDAY1"
        }, {
          "$ref" : "#/components/schemas/THREEDAYS"
        }, {
          "$ref" : "#/components/schemas/SEVENDAYS"
        }, {
          "$ref" : "#/components/schemas/FOURTEENDAYS"
        }, {
          "$ref" : "#/components/schemas/THIRTYDAYS"
        } ]
      },
      "ApplicationCommandMentionableOptionResponse" : {
        "title" : "ApplicationCommandMentionableOptionResponse",
        "required" : [ "description", "name", "type" ],
        "type" : "object",
        "properties" : {
          "name_localized" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "nameLocalized"
          },
          "name_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "nameLocalizations"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "description_localized" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalized"
          },
          "description_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalizations"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 9 ]
          },
          "required" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "ApplicationCommandIntegerOption" : {
        "title" : "ApplicationCommandIntegerOption",
        "required" : [ "description", "name", "type" ],
        "type" : "object",
        "properties" : {
          "min_value" : {
            "maximum" : 9007199254740991,
            "minimum" : -9007199254740991,
            "oneOf" : [ {
              "maximum" : 9007199254740991,
              "minimum" : -9007199254740991,
              "type" : "integer",
              "format" : "int64"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "minValue"
          },
          "name_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "nameLocalizations"
          },
          "autocomplete" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 1,
            "type" : "string"
          },
          "description" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "description_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalizations"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 4 ]
          },
          "choices" : {
            "maxItems" : 25,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ApplicationCommandOptionIntegerChoice"
            }
          },
          "required" : {
            "type" : "boolean",
            "nullable" : true
          },
          "max_value" : {
            "maximum" : 9007199254740991,
            "minimum" : -9007199254740991,
            "oneOf" : [ {
              "maximum" : 9007199254740991,
              "minimum" : -9007199254740991,
              "type" : "integer",
              "format" : "int64"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "maxValue"
          }
        }
      },
      "XBOX" : {
        "title" : "XBOX",
        "type" : "string",
        "enum" : [ "xbox" ]
      },
      "MessageAllowedMentionsRequestRoles" : {
        "pattern" : "^(0|[1-9][0-9]*)$",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/RolesOneOf1"
        }, {
          "$ref" : "#/components/schemas/RolesRolesOneOf12"
        } ]
      },
      "SkuIdsSkuIdsOneOf12" : {
        "maxItems" : 100,
        "uniqueItems" : true,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/InlineArrayItemsSkuIdsSkuIdsOneOf12"
        }
      },
      "ZhTW" : {
        "title" : "zh-TW",
        "type" : "string",
        "description" : "The zh-TW locale",
        "enum" : [ "zh-TW" ]
      },
      "WebhookTokenSlackBody" : {
        "type" : "object",
        "properties" : {
          "icon_url" : {
            "maxLength" : 2048,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "iconUrl"
          },
          "attachments" : {
            "maxItems" : 1521,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/WebhookSlackEmbed"
            }
          },
          "text" : {
            "maxLength" : 2000,
            "type" : "string",
            "nullable" : true
          },
          "username" : {
            "maxLength" : 152133,
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "InlineArrayItemsIncludeRolesIncludeRolesOneOf12" : {
        "pattern" : "^(0|[1-9][0-9]*)$",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/IncludeRolesIncludeRolesOneOf12OneOf1"
        } ]
      },
      "TWITTER" : {
        "title" : "TWITTER",
        "type" : "string",
        "enum" : [ "twitter" ]
      },
      "ThreadAutoArchiveDuration" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ONEHOUR1"
        }, {
          "$ref" : "#/components/schemas/ONEDAY"
        }, {
          "$ref" : "#/components/schemas/THREEDAY"
        }, {
          "$ref" : "#/components/schemas/SEVENDAY"
        } ]
      },
      "200OneOf4" : {
        "nullable" : true
      },
      "ActionsOneOf55" : {
        "nullable" : true
      },
      "ActionsOneOf56" : {
        "nullable" : true
      },
      "FRIEND" : {
        "title" : "FRIEND",
        "type" : "integer",
        "enum" : [ 2 ]
      },
      "200OneOf6" : {
        "nullable" : true
      },
      "ActionsOneOf57" : {
        "nullable" : true
      },
      "200OneOf5" : {
        "nullable" : true
      },
      "ActionsOneOf58" : {
        "nullable" : true
      },
      "WebhookSourceGuildResponse" : {
        "title" : "WebhookSourceGuildResponse",
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "icon" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }
      },
      "GUILDSCHEDULEDEVENTCREATE" : {
        "title" : "GUILD_SCHEDULED_EVENT_CREATE",
        "type" : "integer",
        "enum" : [ 100 ]
      },
      "VIEW" : {
        "title" : "VIEW",
        "type" : "integer",
        "enum" : [ 0 ]
      },
      "ChannelSelectDefaultValue1" : {
        "title" : "ChannelSelectDefaultValue1",
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "type" : { }
        }
      },
      "AUTOMODERATIONRULEDELETE" : {
        "title" : "AUTO_MODERATION_RULE_DELETE",
        "type" : "integer",
        "enum" : [ 142 ]
      },
      "Th" : {
        "title" : "th",
        "type" : "string",
        "description" : "The th locale",
        "enum" : [ "th" ]
      },
      "DefaultValuesOneOf3" : {
        "nullable" : true
      },
      "ResourceChannelResponse" : {
        "title" : "ResourceChannelResponse",
        "required" : [ "channel_id", "description", "title" ],
        "type" : "object",
        "properties" : {
          "emoji" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/SettingsEmojiResponse"
            }, {
              "nullable" : true
            } ]
          },
          "icon" : {
            "type" : "string",
            "nullable" : true
          },
          "description" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "channelId"
          }
        }
      },
      "ONBOARDINGCREATE" : {
        "title" : "ONBOARDING_CREATE",
        "type" : "integer",
        "enum" : [ 166 ]
      },
      "Tr" : {
        "title" : "tr",
        "type" : "string",
        "description" : "The tr locale",
        "enum" : [ "tr" ]
      },
      "INTEGER" : {
        "title" : "INTEGER",
        "type" : "integer",
        "description" : "An integer option. Any integer between -2^53 and 2^53 is a valid value",
        "enum" : [ 4 ]
      },
      "CHANNELFOLLOWER" : {
        "title" : "CHANNEL_FOLLOWER",
        "type" : "integer",
        "description" : "Channel Follower Webhooks are internal webhooks used with Channel Following to post new messages into channels",
        "enum" : [ 2 ]
      },
      "INTEGERGREATERTHANEQUAL" : {
        "title" : "INTEGER_GREATER_THAN_EQUAL",
        "type" : "integer",
        "description" : "the metadata value (integer) is greater than or equal to the guild's configured value (integer)",
        "enum" : [ 2 ]
      },
      "MEMBERSWITHOUTROLES" : {
        "title" : "MEMBERS_WITHOUT_ROLES",
        "type" : "integer",
        "description" : "media content sent by members without roles will be scanned",
        "enum" : [ 1 ]
      },
      "FlagToChannelActionMetadataResponse" : {
        "title" : "FlagToChannelActionMetadataResponse",
        "required" : [ "channel_id" ],
        "type" : "object",
        "properties" : {
          "channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "channelId"
          }
        }
      },
      "CreateGuildChannelRequest" : {
        "title" : "CreateGuildChannelRequest",
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "nsfw" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rate_limit_per_user" : {
            "maximum" : 21600.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "rateLimitPerUser"
          },
          "bitrate" : {
            "minimum" : 8000.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ChannelTypes"
              } ]
            }, { } ]
          },
          "user_limit" : {
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "userLimit"
          },
          "permission_overwrites" : {
            "maxItems" : 100,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ChannelPermissionOverwriteRequest"
            },
            "x-ballerina-name" : "permissionOverwrites"
          },
          "rtc_region" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "rtcRegion"
          },
          "default_thread_rate_limit_per_user" : {
            "maximum" : 21600.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "defaultThreadRateLimitPerUser"
          },
          "default_auto_archive_duration" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ThreadAutoArchiveDuration"
              } ]
            }, { } ],
            "x-ballerina-name" : "defaultAutoArchiveDuration"
          },
          "parent_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "parentId"
          },
          "default_reaction_emoji" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/UpdateDefaultReactionEmojiRequest"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "defaultReactionEmoji"
          },
          "name" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "topic" : {
            "maxLength" : 4096,
            "minLength" : 0,
            "type" : "string",
            "nullable" : true
          },
          "default_forum_layout" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ForumLayout"
              } ]
            }, { } ],
            "x-ballerina-name" : "defaultForumLayout"
          },
          "position" : {
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "available_tags" : {
            "maxItems" : 20,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/CreateGuildChannelRequestAvailableTags"
            },
            "x-ballerina-name" : "availableTags"
          },
          "video_quality_mode" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/VideoQualityModes"
              } ]
            }, { } ],
            "x-ballerina-name" : "videoQualityMode"
          },
          "default_sort_order" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ThreadSortOrder"
              } ]
            }, { } ],
            "x-ballerina-name" : "defaultSortOrder"
          }
        }
      },
      "WidgetMember" : {
        "title" : "WidgetMember",
        "required" : [ "avatar_url", "discriminator", "id", "status", "username" ],
        "type" : "object",
        "properties" : {
          "activity" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/WidgetActivity"
            }, {
              "nullable" : true
            } ]
          },
          "deaf" : {
            "type" : "boolean",
            "nullable" : true
          },
          "mute" : {
            "type" : "boolean",
            "nullable" : true
          },
          "avatar" : {
            "type" : "string",
            "nullable" : true
          },
          "suppress" : {
            "type" : "boolean",
            "nullable" : true
          },
          "discriminator" : {
            "$ref" : "#/components/schemas/WidgetUserDiscriminator"
          },
          "avatar_url" : {
            "type" : "string",
            "x-ballerina-name" : "avatarUrl"
          },
          "self_deaf" : {
            "type" : "boolean",
            "nullable" : true,
            "x-ballerina-name" : "selfDeaf"
          },
          "id" : {
            "type" : "string"
          },
          "self_mute" : {
            "type" : "boolean",
            "nullable" : true,
            "x-ballerina-name" : "selfMute"
          },
          "channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "channelId"
          },
          "username" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          }
        }
      },
      "UserNotificationSettings" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ALLMESSAGES"
        }, {
          "$ref" : "#/components/schemas/ONLYMENTIONS"
        } ]
      },
      "ChannelsMessagesBulkDeleteRequest" : {
        "title" : "ChannelsMessagesBulkDeleteRequest",
        "required" : [ "messages" ],
        "type" : "object",
        "properties" : {
          "messages" : {
            "maxItems" : 100,
            "minItems" : 2,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }
          }
        }
      },
      "SEVENDAY" : {
        "title" : "SEVEN_DAY",
        "type" : "integer",
        "description" : "Seven days",
        "enum" : [ 10080 ]
      },
      "FULL" : {
        "title" : "FULL",
        "type" : "integer",
        "description" : "720p",
        "enum" : [ 2 ]
      },
      "ChoicesOneOf23" : {
        "nullable" : true
      },
      "ChoicesOneOf24" : {
        "nullable" : true
      },
      "ChoicesOneOf21" : {
        "nullable" : true
      },
      "ChoicesOneOf22" : {
        "nullable" : true
      },
      "Uk" : {
        "title" : "uk",
        "type" : "string",
        "description" : "The uk locale",
        "enum" : [ "uk" ]
      },
      "GITHUB" : {
        "title" : "GITHUB",
        "type" : "string",
        "enum" : [ "github" ]
      },
      "ActionsOneOf51" : {
        "nullable" : true
      },
      "GuildsBansRequest" : {
        "title" : "GuildsBansRequest",
        "type" : "object",
        "properties" : {
          "delete_message_days" : {
            "maximum" : 7.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "deleteMessageDays"
          },
          "delete_message_seconds" : {
            "maximum" : 604800.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "deleteMessageSeconds"
          }
        }
      },
      "ActionsOneOf52" : {
        "nullable" : true
      },
      "ActionsOneOf53" : {
        "nullable" : true
      },
      "ActionsOneOf54" : {
        "nullable" : true
      },
      "CREATORMONETIZABLEPROVISIONAL" : {
        "title" : "CREATOR_MONETIZABLE_PROVISIONAL",
        "type" : "string",
        "description" : "guild has enabled monetization",
        "enum" : [ "CREATOR_MONETIZABLE_PROVISIONAL" ]
      },
      "GuildBanResponse" : {
        "title" : "GuildBanResponse",
        "required" : [ "user" ],
        "type" : "object",
        "properties" : {
          "reason" : {
            "type" : "string",
            "nullable" : true
          },
          "user" : {
            "$ref" : "#/components/schemas/UserResponse"
          }
        }
      },
      "InteractionApplicationCommandAutocompleteCallbackStringDataChoices" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ApplicationCommandOptionStringChoice"
        }, {
          "$ref" : "#/components/schemas/ChoicesOneOf22"
        } ]
      },
      "WelcomeMessageResponse" : {
        "title" : "WelcomeMessageResponse",
        "required" : [ "author_ids", "message" ],
        "type" : "object",
        "properties" : {
          "author_ids" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "authorIds"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "ATTACHMENT" : {
        "title" : "ATTACHMENT",
        "type" : "integer",
        "description" : "An attachment option",
        "enum" : [ 11 ]
      },
      "MessageInteractionResponse" : {
        "title" : "MessageInteractionResponse",
        "required" : [ "id", "name", "type" ],
        "type" : "object",
        "properties" : {
          "name_localized" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "nameLocalized"
          },
          "name" : {
            "type" : "string"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/InteractionTypes"
          },
          "user" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/UserResponse"
            }, {
              "nullable" : true
            } ]
          }
        }
      },
      "FEATURABLE" : {
        "title" : "FEATURABLE",
        "type" : "string",
        "description" : "guild is able to be featured in the directory",
        "enum" : [ "FEATURABLE" ]
      },
      "RolesOneOf12" : {
        "pattern" : "^(0|[1-9][0-9]*)$",
        "type" : "string"
      },
      "ONLYMENTIONS" : {
        "title" : "ONLY_MENTIONS",
        "type" : "integer",
        "description" : "members will receive notifications only for messages that @mention them by default",
        "enum" : [ 1 ]
      },
      "RolesOneOf11" : {
        "pattern" : "^(0|[1-9][0-9]*)$",
        "type" : "string"
      },
      "RolesOneOf14" : {
        "pattern" : "^(0|[1-9][0-9]*)$",
        "type" : "string"
      },
      "RolesOneOf13" : {
        "pattern" : "^(0|[1-9][0-9]*)$",
        "type" : "string"
      },
      "ApplicationUserRoleConnectionResponse" : {
        "title" : "ApplicationUserRoleConnectionResponse",
        "type" : "object",
        "properties" : {
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true
          },
          "platform_username" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "platformUsername"
          },
          "platform_name" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "platformName"
          }
        }
      },
      "BasicApplicationResponse" : {
        "title" : "BasicApplicationResponse",
        "required" : [ "description", "id", "name" ],
        "type" : "object",
        "properties" : {
          "bot" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/UserResponse"
            }, {
              "nullable" : true
            } ]
          },
          "name" : {
            "type" : "string"
          },
          "icon" : {
            "type" : "string",
            "nullable" : true
          },
          "description" : {
            "type" : "string"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "cover_image" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "coverImage"
          },
          "primary_sku_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "primarySkuId"
          },
          "type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ApplicationTypes"
              } ]
            }, { } ]
          }
        }
      },
      "RolesRolesOneOf112" : {
        "nullable" : true
      },
      "QUESTREWARD" : {
        "title" : "QUEST_REWARD",
        "type" : "integer",
        "enum" : [ 10 ]
      },
      "IntegrationTypes" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/DISCORD"
        }, {
          "$ref" : "#/components/schemas/TWITCH"
        }, {
          "$ref" : "#/components/schemas/YOUTUBE"
        }, {
          "$ref" : "#/components/schemas/GUILDSUBSCRIPTION"
        } ]
      },
      "CHANNELICONCHANGE" : {
        "title" : "CHANNEL_ICON_CHANGE",
        "type" : "integer",
        "enum" : [ 5 ]
      },
      "Component1" : {
        "title" : "Component1",
        "required" : [ "custom_id", "label", "options", "style", "type" ],
        "type" : "object",
        "properties" : {
          "min_values" : {
            "maximum" : 25.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "minValues"
          },
          "emoji" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Emoji"
            }, {
              "nullable" : true
            } ]
          },
          "min_length" : {
            "maximum" : 4000.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "minLength"
          },
          "custom_id" : {
            "maxLength" : 100,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "customId"
          },
          "max_values" : {
            "maximum" : 25.0,
            "minimum" : 1.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxValues"
          },
          "sku_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "skuId"
          },
          "label" : {
            "maxLength" : 45,
            "type" : "string",
            "nullable" : true
          },
          "type" : { },
          "url" : {
            "maxLength" : 512,
            "type" : "string",
            "nullable" : true
          },
          "required" : {
            "type" : "boolean",
            "nullable" : true
          },
          "default_values" : {
            "maxItems" : 25,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ChannelSelectDefaultValue1"
            },
            "x-ballerina-name" : "defaultValues"
          },
          "options" : {
            "maxItems" : 25,
            "minItems" : 1,
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/SelectOption"
            }
          },
          "channel_types" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ChannelTypes"
            },
            "x-ballerina-name" : "channelTypes"
          },
          "style" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/PRIMARY"
            }, {
              "$ref" : "#/components/schemas/SECONDARY"
            }, {
              "$ref" : "#/components/schemas/SUCCESS"
            }, {
              "$ref" : "#/components/schemas/DANGER"
            }, {
              "$ref" : "#/components/schemas/LINK"
            }, {
              "$ref" : "#/components/schemas/PREMIUM"
            } ]
          },
          "disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "placeholder" : {
            "maxLength" : 100,
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "maxLength" : 4000,
            "type" : "string",
            "nullable" : true
          },
          "max_length" : {
            "maximum" : 4000.0,
            "minimum" : 1.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxLength"
          }
        }
      },
      "GuildsMembersRequest" : {
        "title" : "GuildsMembersRequest",
        "required" : [ "access_token" ],
        "type" : "object",
        "properties" : {
          "nick" : {
            "maxLength" : 32,
            "type" : "string",
            "nullable" : true
          },
          "access_token" : {
            "maxLength" : 152133,
            "type" : "string",
            "x-ballerina-name" : "accessToken"
          },
          "roles" : {
            "maxItems" : 1521,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/GuildsMembersRequestRoles"
            }
          },
          "deaf" : {
            "type" : "boolean",
            "nullable" : true
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "mute" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "SHIELD" : {
        "title" : "SHIELD",
        "type" : "string",
        "description" : "shield style widget with Discord icon and guild members online count",
        "enum" : [ "shield" ]
      },
      "ROLE1" : {
        "title" : "ROLE1",
        "type" : "integer",
        "description" : "This permission is for a role",
        "enum" : [ 1 ]
      },
      "200AnyOf41" : {
        "nullable" : true
      },
      "Vi" : {
        "title" : "vi",
        "type" : "string",
        "description" : "The vi locale",
        "enum" : [ "vi" ]
      },
      "ROLE2" : {
        "title" : "ROLE2",
        "type" : "integer",
        "enum" : [ 0 ]
      },
      "FLAGTOCHANNEL" : {
        "title" : "FLAG_TO_CHANNEL",
        "type" : "integer",
        "description" : "Send a system message to a channel in order to log the user message that triggered the rule",
        "enum" : [ 2 ]
      },
      "ROLE3" : {
        "title" : "ROLE3",
        "type" : "string",
        "enum" : [ "role" ]
      },
      "CreateGroupDMInviteRequest" : {
        "title" : "CreateGroupDMInviteRequest",
        "type" : "object",
        "properties" : {
          "max_age" : {
            "maximum" : 604800.0,
            "minimum" : 1.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxAge"
          }
        }
      },
      "GUILDDISCOVERYREQUALIFIED" : {
        "title" : "GUILD_DISCOVERY_REQUALIFIED",
        "type" : "integer",
        "enum" : [ 15 ]
      },
      "DMCHANNELSREAD" : {
        "title" : "DM_CHANNELS_READ",
        "type" : "string",
        "description" : "allows your app to see information about the user's DMs and group DMs - requires Discord approval",
        "enum" : [ "dm_channels.read" ]
      },
      "WidgetImageStyles" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/SHIELD"
        }, {
          "$ref" : "#/components/schemas/BANNER1"
        }, {
          "$ref" : "#/components/schemas/BANNER2"
        }, {
          "$ref" : "#/components/schemas/BANNER3"
        }, {
          "$ref" : "#/components/schemas/BANNER4"
        } ]
      },
      "ChoicesOneOf2" : {
        "nullable" : true
      },
      "MessageReactionEmojiResponse" : {
        "title" : "MessageReactionEmojiResponse",
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "animated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ]
          }
        }
      },
      "DefaultKeywordRuleResponseActions" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/BlockMessageActionResponse"
        }, {
          "$ref" : "#/components/schemas/FlagToChannelActionResponse"
        }, {
          "$ref" : "#/components/schemas/QuarantineUserActionResponse"
        }, {
          "$ref" : "#/components/schemas/UserCommunicationDisabledActionResponse"
        } ]
      },
      "UserCommunicationDisabledActionMetadataResponse" : {
        "title" : "UserCommunicationDisabledActionMetadataResponse",
        "required" : [ "duration_seconds" ],
        "type" : "object",
        "properties" : {
          "duration_seconds" : {
            "type" : "integer",
            "format" : "int32",
            "x-ballerina-name" : "durationSeconds"
          }
        }
      },
      "AUTOMODERATIONUSERCOMMDISABLED" : {
        "title" : "AUTO_MODERATION_USER_COMM_DISABLED",
        "type" : "integer",
        "enum" : [ 145 ]
      },
      "ComponentsOneOf8" : {
        "nullable" : true
      },
      "RolesRolesOneOf122" : {
        "nullable" : true
      },
      "UserResponse" : {
        "title" : "UserResponse",
        "required" : [ "discriminator", "flags", "id", "public_flags", "username" ],
        "type" : "object",
        "properties" : {
          "accent_color" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "accentColor"
          },
          "system" : {
            "type" : "boolean",
            "nullable" : true
          },
          "global_name" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "globalName"
          },
          "bot" : {
            "type" : "boolean",
            "nullable" : true
          },
          "flags" : {
            "maximum" : 9007199254740991,
            "minimum" : -9007199254740991,
            "type" : "integer",
            "format" : "int64"
          },
          "banner" : {
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "avatar" : {
            "type" : "string",
            "nullable" : true
          },
          "public_flags" : {
            "type" : "integer",
            "format" : "int32",
            "x-ballerina-name" : "publicFlags"
          },
          "username" : {
            "type" : "string"
          },
          "discriminator" : {
            "type" : "string"
          }
        }
      },
      "MEMBERPRUNE" : {
        "title" : "MEMBER_PRUNE",
        "type" : "integer",
        "enum" : [ 21 ]
      },
      "ApplicationsGuildsCommandsCommandIdPermissionsRequest" : {
        "title" : "ApplicationsGuildsCommandsCommandIdPermissionsRequest",
        "type" : "object",
        "properties" : {
          "permissions" : {
            "maxItems" : 100,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ApplicationCommandPermission"
            }
          }
        }
      },
      "GuildInviteResponse" : {
        "title" : "GuildInviteResponse",
        "required" : [ "code" ],
        "type" : "object",
        "properties" : {
          "temporary" : {
            "type" : "boolean",
            "nullable" : true
          },
          "code" : {
            "type" : "string"
          },
          "guild_scheduled_event" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ScheduledEventResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "guildScheduledEvent"
          },
          "approximate_presence_count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "approximatePresenceCount"
          },
          "target_application" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/InviteApplicationResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "targetApplication"
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "channel" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/InviteChannelResponse"
            }, {
              "nullable" : true
            } ]
          },
          "target_type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/InviteTargetTypes"
              } ]
            }, { } ],
            "x-ballerina-name" : "targetType"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "createdAt"
          },
          "type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/InviteTypes"
              } ]
            }, { } ]
          },
          "is_contact" : {
            "type" : "boolean",
            "nullable" : true,
            "x-ballerina-name" : "isContact"
          },
          "max_age" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxAge"
          },
          "guild" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/InviteGuildResponse"
            }, {
              "nullable" : true
            } ]
          },
          "expires_at" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "expiresAt"
          },
          "max_uses" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxUses"
          },
          "approximate_member_count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "approximateMemberCount"
          },
          "guild_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "guildId"
          },
          "target_user" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/UserResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "targetUser"
          },
          "inviter" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/UserResponse"
            }, {
              "nullable" : true
            } ]
          },
          "uses" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "stage_instance" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/InviteStageInstanceResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "stageInstance"
          }
        }
      },
      "NEWS" : {
        "title" : "NEWS",
        "type" : "string",
        "description" : "guild has access to create announcement channels",
        "enum" : [ "NEWS" ]
      },
      "NewMemberActionType" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/VIEW"
        }, {
          "$ref" : "#/components/schemas/TALK"
        } ]
      },
      "DefaultKeywordListUpsertRequest" : {
        "title" : "DefaultKeywordListUpsertRequest",
        "required" : [ "event_type", "name", "trigger_metadata", "trigger_type" ],
        "type" : "object",
        "properties" : {
          "event_type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AutomodEventType"
            } ],
            "x-ballerina-name" : "eventType"
          },
          "trigger_type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 4 ],
            "x-ballerina-name" : "triggerType"
          },
          "name" : {
            "maxLength" : 100,
            "type" : "string"
          },
          "exempt_roles" : {
            "maxItems" : 20,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "exemptRoles"
          },
          "exempt_channels" : {
            "maxItems" : 50,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "exemptChannels"
          },
          "actions" : {
            "maxItems" : 5,
            "minItems" : 1,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/DefaultKeywordListUpsertRequestActions"
            }
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "trigger_metadata" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DefaultKeywordListTriggerMetadata"
            } ],
            "x-ballerina-name" : "triggerMetadata"
          }
        }
      },
      "GUILDINVITEREMINDER" : {
        "title" : "GUILD_INVITE_REMINDER",
        "type" : "integer",
        "enum" : [ 22 ]
      },
      "GuildOnboardingResponse" : {
        "title" : "GuildOnboardingResponse",
        "required" : [ "default_channel_ids", "enabled", "guild_id", "prompts" ],
        "type" : "object",
        "properties" : {
          "default_channel_ids" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "defaultChannelIds"
          },
          "guild_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "guildId"
          },
          "prompts" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/OnboardingPromptResponse"
            }
          },
          "enabled" : {
            "type" : "boolean"
          }
        }
      },
      "NewMemberActionsOneOf2" : {
        "nullable" : true
      },
      "MessageAllowedMentionsRequest" : {
        "title" : "MessageAllowedMentionsRequest",
        "type" : "object",
        "properties" : {
          "roles" : {
            "maxItems" : 100,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/MessageAllowedMentionsRequestRoles"
            }
          },
          "parse" : {
            "maxItems" : 1521,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/AllowedMentionTypes"
            }
          },
          "replied_user" : {
            "type" : "boolean",
            "nullable" : true,
            "x-ballerina-name" : "repliedUser"
          },
          "users" : {
            "maxItems" : 100,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/MessageAllowedMentionsRequestUsers"
            }
          }
        }
      },
      "PARAGRAPH" : {
        "title" : "PARAGRAPH",
        "type" : "integer",
        "description" : "Multi-line input",
        "enum" : [ 2 ]
      },
      "BOOLEANNOTEQUAL" : {
        "title" : "BOOLEAN_NOT_EQUAL",
        "type" : "integer",
        "description" : "the metadata value (integer) is not equal to the guild's configured value (integer; 1)",
        "enum" : [ 8 ]
      },
      "ConnectedAccountIntegrationResponse" : {
        "title" : "ConnectedAccountIntegrationResponse",
        "required" : [ "account", "guild", "id", "type" ],
        "type" : "object",
        "properties" : {
          "guild" : {
            "$ref" : "#/components/schemas/ConnectedAccountGuildResponse"
          },
          "id" : {
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/IntegrationTypes"
          },
          "account" : {
            "$ref" : "#/components/schemas/AccountResponse"
          }
        }
      },
      "IncludeRolesOneOf1" : {
        "type" : "string"
      },
      "VoiceScheduledEventPatchRequestPartial" : {
        "title" : "VoiceScheduledEventPatchRequestPartial",
        "type" : "object",
        "properties" : {
          "image" : {
            "type" : "string",
            "format" : "binary",
            "nullable" : true
          },
          "entity_type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/GuildScheduledEventEntityTypes"
              } ]
            }, { } ],
            "x-ballerina-name" : "entityType"
          },
          "privacy_level" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/GuildScheduledEventPrivacyLevels"
            } ],
            "x-ballerina-name" : "privacyLevel"
          },
          "name" : {
            "maxLength" : 100,
            "type" : "string"
          },
          "entity_metadata" : {
            "oneOf" : [ {
              "type" : "object"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "entityMetadata"
          },
          "description" : {
            "maxLength" : 1000,
            "type" : "string",
            "nullable" : true
          },
          "channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "channelId"
          },
          "status" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/GuildScheduledEventStatuses"
              } ]
            }, { } ]
          },
          "scheduled_start_time" : {
            "type" : "string",
            "format" : "date-time",
            "x-ballerina-name" : "scheduledStartTime"
          },
          "scheduled_end_time" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "scheduledEndTime"
          }
        }
      },
      "ROBLOX" : {
        "title" : "ROBLOX",
        "type" : "string",
        "enum" : [ "roblox" ]
      },
      "GUILDS" : {
        "title" : "GUILDS",
        "type" : "string",
        "description" : "allows /users/@me/guilds to return basic information about all of a user's guilds",
        "enum" : [ "guilds" ]
      },
      "MEMBERROLEUPDATE" : {
        "title" : "MEMBER_ROLE_UPDATE",
        "type" : "integer",
        "enum" : [ 25 ]
      },
      "APPLICATIONCOMMANDPERMISSIONSV2" : {
        "title" : "APPLICATION_COMMAND_PERMISSIONS_V2",
        "type" : "string",
        "description" : "guild is using the old permissions configuration behavior",
        "enum" : [ "APPLICATION_COMMAND_PERMISSIONS_V2" ]
      },
      "ApplicationCommandNumberOption" : {
        "title" : "ApplicationCommandNumberOption",
        "required" : [ "description", "name", "type" ],
        "type" : "object",
        "properties" : {
          "min_value" : {
            "type" : "number",
            "nullable" : true,
            "x-ballerina-name" : "minValue"
          },
          "name_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "nameLocalizations"
          },
          "autocomplete" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 1,
            "type" : "string"
          },
          "description" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "description_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalizations"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 10 ]
          },
          "choices" : {
            "maxItems" : 25,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ApplicationCommandOptionNumberChoice"
            }
          },
          "required" : {
            "type" : "boolean",
            "nullable" : true
          },
          "max_value" : {
            "type" : "number",
            "nullable" : true,
            "x-ballerina-name" : "maxValue"
          }
        }
      },
      "MessageResponseMentionChannels" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/MessageMentionChannelResponse"
        }, {
          "$ref" : "#/components/schemas/MentionChannelsOneOf21"
        } ]
      },
      "GuildHomeSettingsResponse" : {
        "title" : "GuildHomeSettingsResponse",
        "required" : [ "enabled", "guild_id" ],
        "type" : "object",
        "properties" : {
          "new_member_actions" : {
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/GuildHomeSettingsResponseNewMemberActions"
            },
            "x-ballerina-name" : "newMemberActions"
          },
          "guild_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "guildId"
          },
          "welcome_message" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/WelcomeMessageResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "welcomeMessage"
          },
          "enabled" : {
            "type" : "boolean"
          },
          "resource_channels" : {
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/GuildHomeSettingsResponseResourceChannels"
            },
            "x-ballerina-name" : "resourceChannels"
          }
        }
      },
      "INVITECREATE" : {
        "title" : "INVITE_CREATE",
        "type" : "integer",
        "enum" : [ 40 ]
      },
      "GUILDDISCOVERYDISQUALIFIED" : {
        "title" : "GUILD_DISCOVERY_DISQUALIFIED",
        "type" : "integer",
        "enum" : [ 14 ]
      },
      "MEMBERUPDATE" : {
        "title" : "MEMBER_UPDATE",
        "type" : "integer",
        "enum" : [ 24 ]
      },
      "AUTOMODERATIONACTION" : {
        "title" : "AUTO_MODERATION_ACTION",
        "type" : "integer",
        "enum" : [ 24 ]
      },
      "UpdateOnboardingPromptRequest" : {
        "title" : "UpdateOnboardingPromptRequest",
        "required" : [ "id", "options", "title" ],
        "type" : "object",
        "properties" : {
          "in_onboarding" : {
            "type" : "boolean",
            "nullable" : true,
            "x-ballerina-name" : "inOnboarding"
          },
          "options" : {
            "maxItems" : 50,
            "minItems" : 1,
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/OnboardingPromptOptionRequest"
            }
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "title" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/OnboardingPromptType"
              } ]
            }, { } ]
          },
          "single_select" : {
            "type" : "boolean",
            "nullable" : true,
            "x-ballerina-name" : "singleSelect"
          },
          "required" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "PUBLIC" : {
        "title" : "PUBLIC",
        "type" : "integer",
        "description" : "The Stage instance is visible publicly. (deprecated)",
        "enum" : [ 1 ]
      },
      "ChannelPermissionOverwriteRequest" : {
        "title" : "ChannelPermissionOverwriteRequest",
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "allow" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "deny" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ChannelPermissionOverwrites"
              } ]
            }, { } ]
          }
        }
      },
      "WidgetSettingsResponse" : {
        "title" : "WidgetSettingsResponse",
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "channelId"
          },
          "enabled" : {
            "type" : "boolean"
          }
        }
      },
      "EVERYONE1" : {
        "title" : "EVERYONE1",
        "type" : "integer",
        "enum" : [ 1 ]
      },
      "ApplicationCommandMentionableOption" : {
        "title" : "ApplicationCommandMentionableOption",
        "required" : [ "description", "name", "type" ],
        "type" : "object",
        "properties" : {
          "name_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "nameLocalizations"
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 1,
            "type" : "string"
          },
          "description" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "description_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalizations"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 9 ]
          },
          "required" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "OnboardingPromptType" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/MULTIPLECHOICE"
        }, {
          "$ref" : "#/components/schemas/DROPDOWN"
        } ]
      },
      "GuildSubscriptionIntegrationResponse" : {
        "title" : "GuildSubscriptionIntegrationResponse",
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "guild_subscription" ]
          },
          "account" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/AccountResponse"
            }, {
              "nullable" : true
            } ]
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "EnGB" : {
        "title" : "en-GB",
        "type" : "string",
        "description" : "The en-GB locale",
        "enum" : [ "en-GB" ]
      },
      "GUILD1" : {
        "title" : "GUILD1",
        "type" : "integer",
        "description" : "a sticker uploaded to a guild for the guild's members",
        "enum" : [ 2 ]
      },
      "GUILDSUBSCRIPTION" : {
        "title" : "GUILD_SUBSCRIPTION",
        "type" : "string",
        "enum" : [ "guild_subscription" ]
      },
      "CHAT" : {
        "title" : "CHAT",
        "type" : "integer",
        "description" : "Slash commands; a text-based command that shows up when a user types /",
        "enum" : [ 1 ]
      },
      "InviteChannelRecipientResponse" : {
        "title" : "InviteChannelRecipientResponse",
        "required" : [ "username" ],
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string"
          }
        }
      },
      "IntegrationExpireBehaviorTypes" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/REMOVEROLE"
        }, {
          "$ref" : "#/components/schemas/KICK"
        } ]
      },
      "GuildHomeSettingsResponseResourceChannels" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ResourceChannelResponse"
        }, {
          "$ref" : "#/components/schemas/ResourceChannelsOneOf2"
        } ]
      },
      "GuildsRolesRequest2" : {
        "title" : "GuildsRolesRequest2",
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ]
          },
          "position" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "VIPREGIONS" : {
        "title" : "VIP_REGIONS",
        "type" : "string",
        "description" : "guild has access to set 384kbps bitrate in voice (previously VIP voice servers)",
        "enum" : [ "VIP_REGIONS" ]
      },
      "RoleSelect" : {
        "title" : "RoleSelect",
        "required" : [ "custom_id", "type" ],
        "type" : "object",
        "properties" : {
          "default_values" : {
            "maxItems" : 25,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/RoleSelectDefaultValue"
            },
            "x-ballerina-name" : "defaultValues"
          },
          "min_values" : {
            "maximum" : 25.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "minValues"
          },
          "custom_id" : {
            "maxLength" : 100,
            "type" : "string",
            "x-ballerina-name" : "customId"
          },
          "max_values" : {
            "maximum" : 25.0,
            "minimum" : 1.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxValues"
          },
          "disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "placeholder" : {
            "maxLength" : 150,
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 6 ]
          }
        }
      },
      "GithubUser" : {
        "title" : "GithubUser",
        "required" : [ "avatar_url", "html_url", "id", "login" ],
        "type" : "object",
        "properties" : {
          "avatar_url" : {
            "maxLength" : 2048,
            "type" : "string",
            "x-ballerina-name" : "avatarUrl"
          },
          "html_url" : {
            "maxLength" : 2048,
            "type" : "string",
            "x-ballerina-name" : "htmlUrl"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "login" : {
            "maxLength" : 152133,
            "type" : "string"
          }
        }
      },
      "APPLICATIONCOMMAND" : {
        "title" : "APPLICATION_COMMAND",
        "type" : "integer",
        "description" : "Sent when a user uses an application command",
        "enum" : [ 2 ]
      },
      "GRID" : {
        "title" : "GRID",
        "type" : "integer",
        "description" : "Display posts as a collection of tiles",
        "enum" : [ 2 ]
      },
      "ONEDAY1" : {
        "title" : "ONE_DAY1",
        "type" : "integer",
        "description" : "1 day",
        "enum" : [ 1 ]
      },
      "InteractionCallbackTypes" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/PONG"
        }, {
          "$ref" : "#/components/schemas/CHANNELMESSAGEWITHSOURCE"
        }, {
          "$ref" : "#/components/schemas/DEFERREDCHANNELMESSAGEWITHSOURCE"
        }, {
          "$ref" : "#/components/schemas/DEFERREDUPDATEMESSAGE"
        }, {
          "$ref" : "#/components/schemas/UPDATEMESSAGE"
        }, {
          "$ref" : "#/components/schemas/APPLICATIONCOMMANDAUTOCOMPLETERESULT"
        }, {
          "$ref" : "#/components/schemas/MODAL"
        } ]
      },
      "StageScheduledEventResponse" : {
        "title" : "StageScheduledEventResponse",
        "required" : [ "entity_type", "guild_id", "id", "name", "privacy_level", "scheduled_start_time", "status" ],
        "type" : "object",
        "properties" : {
          "image" : {
            "type" : "string",
            "nullable" : true
          },
          "creator" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/UserResponse"
            }, {
              "nullable" : true
            } ]
          },
          "privacy_level" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/GuildScheduledEventPrivacyLevels"
            } ],
            "x-ballerina-name" : "privacyLevel"
          },
          "entity_metadata" : {
            "oneOf" : [ {
              "type" : "object"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "entityMetadata"
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "entity_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "entityId"
          },
          "scheduled_end_time" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "scheduledEndTime"
          },
          "entity_type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 1 ],
            "x-ballerina-name" : "entityType"
          },
          "user_rsvp" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ScheduledEventUserResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "userRsvp"
          },
          "user_count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "userCount"
          },
          "guild_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "guildId"
          },
          "name" : {
            "type" : "string"
          },
          "creator_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "creatorId"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "channelId"
          },
          "scheduled_start_time" : {
            "type" : "string",
            "format" : "date-time",
            "x-ballerina-name" : "scheduledStartTime"
          },
          "status" : {
            "$ref" : "#/components/schemas/GuildScheduledEventStatuses"
          }
        }
      },
      "AvailableLocalesEnum" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/Ar"
        }, {
          "$ref" : "#/components/schemas/Bg"
        }, {
          "$ref" : "#/components/schemas/Cs"
        }, {
          "$ref" : "#/components/schemas/Da"
        }, {
          "$ref" : "#/components/schemas/De"
        }, {
          "$ref" : "#/components/schemas/El"
        }, {
          "$ref" : "#/components/schemas/EnGB"
        }, {
          "$ref" : "#/components/schemas/EnUS"
        }, {
          "$ref" : "#/components/schemas/Es419"
        }, {
          "$ref" : "#/components/schemas/EsES"
        }, {
          "$ref" : "#/components/schemas/Fi"
        }, {
          "$ref" : "#/components/schemas/Fr"
        }, {
          "$ref" : "#/components/schemas/He"
        }, {
          "$ref" : "#/components/schemas/Hi"
        }, {
          "$ref" : "#/components/schemas/Hr"
        }, {
          "$ref" : "#/components/schemas/Hu"
        }, {
          "$ref" : "#/components/schemas/Id"
        }, {
          "$ref" : "#/components/schemas/It"
        }, {
          "$ref" : "#/components/schemas/Ja"
        }, {
          "$ref" : "#/components/schemas/Ko"
        }, {
          "$ref" : "#/components/schemas/Lt"
        }, {
          "$ref" : "#/components/schemas/Nl"
        }, {
          "$ref" : "#/components/schemas/No"
        }, {
          "$ref" : "#/components/schemas/Pl"
        }, {
          "$ref" : "#/components/schemas/PtBR"
        }, {
          "$ref" : "#/components/schemas/Ro"
        }, {
          "$ref" : "#/components/schemas/Ru"
        }, {
          "$ref" : "#/components/schemas/SvSE"
        }, {
          "$ref" : "#/components/schemas/Th"
        }, {
          "$ref" : "#/components/schemas/Tr"
        }, {
          "$ref" : "#/components/schemas/Uk"
        }, {
          "$ref" : "#/components/schemas/Vi"
        }, {
          "$ref" : "#/components/schemas/ZhCN"
        }, {
          "$ref" : "#/components/schemas/ZhTW"
        } ]
      },
      "AutoModerationRulesBody" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/DefaultKeywordListUpsertRequest"
        }, {
          "$ref" : "#/components/schemas/KeywordUpsertRequest"
        }, {
          "$ref" : "#/components/schemas/MLSpamUpsertRequest"
        }, {
          "$ref" : "#/components/schemas/MentionSpamUpsertRequest"
        } ]
      },
      "GUILDSJOIN" : {
        "title" : "GUILDS_JOIN",
        "type" : "string",
        "description" : "allows /guilds/{guild.id}/members/{user.id} to be used for joining users to a guild",
        "enum" : [ "guilds.join" ]
      },
      "KeywordTriggerMetadata" : {
        "title" : "KeywordTriggerMetadata",
        "type" : "object",
        "properties" : {
          "keyword_filter" : {
            "maxItems" : 1000,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "maxLength" : 60,
              "minLength" : 1,
              "type" : "string"
            },
            "x-ballerina-name" : "keywordFilter"
          },
          "allow_list" : {
            "maxItems" : 100,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "maxLength" : 60,
              "minLength" : 1,
              "type" : "string"
            },
            "x-ballerina-name" : "allowList"
          },
          "regex_patterns" : {
            "maxItems" : 10,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "maxLength" : 260,
              "minLength" : 1,
              "type" : "string"
            },
            "x-ballerina-name" : "regexPatterns"
          }
        }
      },
      "INTEGRATIONDELETE" : {
        "title" : "INTEGRATION_DELETE",
        "type" : "integer",
        "enum" : [ 82 ]
      },
      "GuildsInvitesResponse" : {
        "title" : "GuildsInvitesResponse",
        "type" : "object",
        "properties" : {
          "friends_count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "friendsCount"
          },
          "temporary" : {
            "type" : "boolean",
            "nullable" : true
          },
          "code" : {
            "type" : "string"
          },
          "guild_scheduled_event" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ScheduledEventResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "guildScheduledEvent"
          },
          "approximate_presence_count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "approximatePresenceCount"
          },
          "target_application" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/InviteApplicationResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "targetApplication"
          },
          "channel" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/InviteChannelResponse"
            } ]
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "target_type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/InviteTargetTypes"
              } ]
            }, { } ],
            "x-ballerina-name" : "targetType"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "createdAt"
          },
          "type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/InviteTypes"
              } ]
            }, { } ]
          },
          "is_contact" : {
            "type" : "boolean",
            "nullable" : true,
            "x-ballerina-name" : "isContact"
          },
          "max_age" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxAge"
          },
          "guild" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/InviteGuildResponse"
            }, {
              "nullable" : true
            } ]
          },
          "expires_at" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "expiresAt"
          },
          "max_uses" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxUses"
          },
          "approximate_member_count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "approximateMemberCount"
          },
          "guild_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "guildId"
          },
          "target_user" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/UserResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "targetUser"
          },
          "inviter" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/UserResponse"
            } ]
          },
          "uses" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "stage_instance" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/InviteStageInstanceResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "stageInstance"
          }
        }
      },
      "ANIMATEDBANNER" : {
        "title" : "ANIMATED_BANNER",
        "type" : "string",
        "description" : "guild has access to set an animated guild banner image",
        "enum" : [ "ANIMATED_BANNER" ]
      },
      "CreateGuildRequestChannelItem" : {
        "title" : "CreateGuildRequestChannelItem",
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "nsfw" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rate_limit_per_user" : {
            "maximum" : 21600.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "rateLimitPerUser"
          },
          "bitrate" : {
            "minimum" : 8000.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ChannelTypes"
              } ]
            }, { } ]
          },
          "user_limit" : {
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "userLimit"
          },
          "permission_overwrites" : {
            "maxItems" : 100,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ChannelPermissionOverwriteRequest"
            },
            "x-ballerina-name" : "permissionOverwrites"
          },
          "rtc_region" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "rtcRegion"
          },
          "default_thread_rate_limit_per_user" : {
            "maximum" : 21600.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "defaultThreadRateLimitPerUser"
          },
          "default_auto_archive_duration" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ThreadAutoArchiveDuration"
              } ]
            }, { } ],
            "x-ballerina-name" : "defaultAutoArchiveDuration"
          },
          "parent_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "parentId"
          },
          "default_reaction_emoji" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/UpdateDefaultReactionEmojiRequest"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "defaultReactionEmoji"
          },
          "name" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "topic" : {
            "maxLength" : 4096,
            "minLength" : 0,
            "type" : "string",
            "nullable" : true
          },
          "default_forum_layout" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ForumLayout"
              } ]
            }, { } ],
            "x-ballerina-name" : "defaultForumLayout"
          },
          "position" : {
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ]
          },
          "available_tags" : {
            "maxItems" : 20,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/CreateOrUpdateThreadTagRequest"
            },
            "x-ballerina-name" : "availableTags"
          },
          "video_quality_mode" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/VideoQualityModes"
              } ]
            }, { } ],
            "x-ballerina-name" : "videoQualityMode"
          },
          "default_sort_order" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ThreadSortOrder"
              } ]
            }, { } ],
            "x-ballerina-name" : "defaultSortOrder"
          }
        }
      },
      "GuildChannelResponse" : {
        "title" : "GuildChannelResponse",
        "required" : [ "flags", "guild_id", "id", "name", "position", "type" ],
        "type" : "object",
        "properties" : {
          "last_pin_timestamp" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "lastPinTimestamp"
          },
          "nsfw" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rate_limit_per_user" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "rateLimitPerUser"
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32"
          },
          "bitrate" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ChannelTypes"
          },
          "user_limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "userLimit"
          },
          "last_message_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "lastMessageId"
          },
          "rtc_region" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "rtcRegion"
          },
          "permission_overwrites" : {
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ChannelPermissionOverwriteResponse"
            },
            "x-ballerina-name" : "permissionOverwrites"
          },
          "default_thread_rate_limit_per_user" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "defaultThreadRateLimitPerUser"
          },
          "default_auto_archive_duration" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ThreadAutoArchiveDuration"
              } ]
            }, { } ],
            "x-ballerina-name" : "defaultAutoArchiveDuration"
          },
          "parent_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "parentId"
          },
          "permissions" : {
            "type" : "string",
            "nullable" : true
          },
          "default_reaction_emoji" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/DefaultReactionEmojiResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "defaultReactionEmoji"
          },
          "guild_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "guildId"
          },
          "name" : {
            "type" : "string"
          },
          "topic" : {
            "type" : "string",
            "nullable" : true
          },
          "default_forum_layout" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ForumLayout"
              } ]
            }, { } ],
            "x-ballerina-name" : "defaultForumLayout"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "position" : {
            "type" : "integer",
            "format" : "int32"
          },
          "available_tags" : {
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ForumTagResponse"
            },
            "x-ballerina-name" : "availableTags"
          },
          "video_quality_mode" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/VideoQualityModes"
              } ]
            }, { } ],
            "x-ballerina-name" : "videoQualityMode"
          },
          "default_sort_order" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ThreadSortOrder"
              } ]
            }, { } ],
            "x-ballerina-name" : "defaultSortOrder"
          }
        }
      },
      "ErrorDetailsOneOf1" : {
        "type" : "object",
        "additionalProperties" : {
          "oneOf" : [ {
            "type" : "object",
            "additionalProperties" : {
              "oneOf" : [ {
                "type" : "object",
                "additionalProperties" : {
                  "oneOf" : [ {
                    "type" : "object",
                    "additionalProperties" : { }
                  }, {
                    "$ref" : "#/components/schemas/InnerErrors"
                  } ]
                }
              }, {
                "$ref" : "#/components/schemas/InnerErrors"
              } ]
            }
          }, {
            "$ref" : "#/components/schemas/InnerErrors"
          } ]
        }
      },
      "RPCVIDEOREAD" : {
        "title" : "RPC_VIDEO_READ",
        "type" : "string",
        "description" : "for local rpc server access, this allows you to read a user's video status - requires Discord approval",
        "enum" : [ "rpc.video.read" ]
      },
      "MessageStickerItemResponse" : {
        "title" : "MessageStickerItemResponse",
        "required" : [ "format_type", "id", "name" ],
        "type" : "object",
        "properties" : {
          "format_type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/StickerFormatTypes"
            } ],
            "x-ballerina-name" : "formatType"
          },
          "name" : {
            "type" : "string"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }
      },
      "ModalInteractionCallbackData1Choices" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ApplicationCommandOptionIntegerChoice"
        }, {
          "$ref" : "#/components/schemas/ChoicesOneOf24"
        } ]
      },
      "INPUTTEXT1" : {
        "title" : "INPUT_TEXT1",
        "type" : "integer",
        "description" : "Text input object",
        "enum" : [ 4 ]
      },
      "KEYWORD" : {
        "title" : "KEYWORD",
        "type" : "integer",
        "description" : "Check if content contains words from a list of keywords or matches regex",
        "enum" : [ 1 ]
      },
      "NONE2" : {
        "title" : "NONE2",
        "type" : "integer",
        "description" : "unrestricted",
        "enum" : [ 0 ]
      },
      "NONE3" : {
        "title" : "NONE3",
        "type" : "integer",
        "description" : "Guild has no MFA/2FA requirement for moderation actions",
        "enum" : [ 0 ]
      },
      "BlockMessageAction" : {
        "title" : "BlockMessageAction",
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/BlockMessageActionMetadata"
            }, {
              "nullable" : true
            } ]
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 1 ]
          }
        }
      },
      "WebhookSlackEmbed" : {
        "title" : "WebhookSlackEmbed",
        "type" : "object",
        "properties" : {
          "author_name" : {
            "maxLength" : 152133,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "authorName"
          },
          "thumb_url" : {
            "maxLength" : 2048,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "thumbUrl"
          },
          "color" : {
            "maxLength" : 7,
            "pattern" : "^#(([0-9a-fA-F]{2}){3}|([0-9a-fA-F]){3})$",
            "type" : "string",
            "nullable" : true
          },
          "footer" : {
            "maxLength" : 152133,
            "type" : "string",
            "nullable" : true
          },
          "image_url" : {
            "maxLength" : 2048,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "imageUrl"
          },
          "footer_icon" : {
            "maxLength" : 2048,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "footerIcon"
          },
          "title_link" : {
            "maxLength" : 2048,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "titleLink"
          },
          "title" : {
            "maxLength" : 152133,
            "type" : "string",
            "nullable" : true
          },
          "author_link" : {
            "maxLength" : 2048,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "authorLink"
          },
          "author_icon" : {
            "maxLength" : 2048,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "authorIcon"
          },
          "pretext" : {
            "maxLength" : 152133,
            "type" : "string",
            "nullable" : true
          },
          "text" : {
            "maxLength" : 152133,
            "type" : "string",
            "nullable" : true
          },
          "fields" : {
            "maxItems" : 1521,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/WebhookSlackEmbedField"
            }
          },
          "ts" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "NONE4" : {
        "title" : "NONE4",
        "type" : "integer",
        "description" : "Guild has not unlocked any Server Boost perks",
        "enum" : [ 0 ]
      },
      "ROLESUBSCRIPTIONSPURCHASE" : {
        "title" : "ROLE_SUBSCRIPTIONS_PURCHASE",
        "type" : "integer",
        "enum" : [ 3 ]
      },
      "InteractionApplicationCommandAutocompleteCallbackIntegerData" : {
        "title" : "InteractionApplicationCommandAutocompleteCallbackIntegerData",
        "type" : "object",
        "properties" : {
          "choices" : {
            "maxItems" : 25,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/InteractionApplicationCommandAutocompleteCallbackIntegerDataChoices"
            }
          }
        }
      },
      "NONE5" : {
        "title" : "NONE5",
        "type" : "integer",
        "description" : "None",
        "enum" : [ 0 ]
      },
      "OptionsOneOf12" : {
        "nullable" : true
      },
      "MessageComponentInputTextResponse" : {
        "title" : "MessageComponentInputTextResponse",
        "required" : [ "custom_id", "id", "style", "type" ],
        "type" : "object",
        "properties" : {
          "min_length" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "minLength"
          },
          "custom_id" : {
            "type" : "string",
            "x-ballerina-name" : "customId"
          },
          "style" : {
            "$ref" : "#/components/schemas/TextStyleTypes"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "label" : {
            "type" : "string",
            "nullable" : true
          },
          "placeholder" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 4 ]
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          },
          "required" : {
            "type" : "boolean",
            "nullable" : true
          },
          "max_length" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxLength"
          }
        }
      },
      "KeywordUpsertRequestActions" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/BlockMessageAction"
        }, {
          "$ref" : "#/components/schemas/FlagToChannelAction"
        }, {
          "$ref" : "#/components/schemas/QuarantineUserAction"
        }, {
          "$ref" : "#/components/schemas/UserCommunicationDisabledAction"
        }, {
          "$ref" : "#/components/schemas/ActionsOneOf52"
        } ]
      },
      "AUTOMODERATIONBLOCKMESSAGE" : {
        "title" : "AUTO_MODERATION_BLOCK_MESSAGE",
        "type" : "integer",
        "enum" : [ 143 ]
      },
      "HOMESETTINGSCREATE" : {
        "title" : "HOME_SETTINGS_CREATE",
        "type" : "integer",
        "enum" : [ 190 ]
      },
      "ChannelTypesOneOf13" : {
        "nullable" : true
      },
      "GUILDFORUM" : {
        "title" : "GUILD_FORUM",
        "type" : "integer",
        "description" : "Channel that can only contain threads",
        "enum" : [ 15 ]
      },
      "IncomingWebhookUpdateRequestPartial" : {
        "title" : "IncomingWebhookUpdateRequestPartial",
        "type" : "object",
        "properties" : {
          "components" : {
            "maxItems" : 5,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ActionRow"
            }
          },
          "attachments" : {
            "maxItems" : 10,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/MessageAttachmentRequest"
            }
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "allowed_mentions" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MessageAllowedMentionsRequest"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "allowedMentions"
          },
          "embeds" : {
            "maxItems" : 10,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/RichEmbed"
            }
          },
          "content" : {
            "maxLength" : 2000,
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ROLEUPDATE" : {
        "title" : "ROLE_UPDATE",
        "type" : "integer",
        "enum" : [ 31 ]
      },
      "GuildStickerResponse" : {
        "title" : "GuildStickerResponse",
        "required" : [ "available", "guild_id", "id", "name", "tags", "type" ],
        "type" : "object",
        "properties" : {
          "format_type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/StickerFormatTypes"
              } ]
            }, { } ],
            "x-ballerina-name" : "formatType"
          },
          "name" : {
            "type" : "string"
          },
          "available" : {
            "type" : "boolean"
          },
          "guild_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "guildId"
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 2 ]
          },
          "user" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/UserResponse"
            }, {
              "nullable" : true
            } ]
          },
          "tags" : {
            "type" : "string"
          }
        }
      },
      "MessageComponentActionRowResponseComponents" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/MessageComponentButtonResponse"
        }, {
          "$ref" : "#/components/schemas/MessageComponentChannelSelectResponse"
        }, {
          "$ref" : "#/components/schemas/MessageComponentInputTextResponse"
        }, {
          "$ref" : "#/components/schemas/MessageComponentMentionableSelectResponse"
        }, {
          "$ref" : "#/components/schemas/MessageComponentRoleSelectResponse"
        }, {
          "$ref" : "#/components/schemas/MessageComponentStringSelectResponse"
        }, {
          "$ref" : "#/components/schemas/MessageComponentUserSelectResponse"
        }, {
          "$ref" : "#/components/schemas/ComponentsOneOf8"
        } ]
      },
      "ModalInteractionCallbackRequest" : {
        "title" : "ModalInteractionCallbackRequest",
        "required" : [ "data", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ModalInteractionCallbackData"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 9 ]
          }
        }
      },
      "GIF" : {
        "title" : "GIF",
        "type" : "integer",
        "enum" : [ 4 ]
      },
      "GUILDINCIDENTREPORTFALSEALARM" : {
        "title" : "GUILD_INCIDENT_REPORT_FALSE_ALARM",
        "type" : "integer",
        "enum" : [ 39 ]
      },
      "GithubWebhook" : {
        "title" : "GithubWebhook",
        "required" : [ "sender" ],
        "type" : "object",
        "properties" : {
          "pull_request" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/GithubIssue"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "pullRequest"
          },
          "head_commit" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/GithubCommit"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "headCommit"
          },
          "compare" : {
            "maxLength" : 2048,
            "type" : "string",
            "nullable" : true
          },
          "issue" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/GithubIssue"
            }, {
              "nullable" : true
            } ]
          },
          "release" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/GithubRelease"
            }, {
              "nullable" : true
            } ]
          },
          "forced" : {
            "type" : "boolean",
            "nullable" : true
          },
          "discussion" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/GithubDiscussion"
            }, {
              "nullable" : true
            } ]
          },
          "repository" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/GithubRepository"
            }, {
              "nullable" : true
            } ]
          },
          "ref" : {
            "maxLength" : 152133,
            "type" : "string",
            "nullable" : true
          },
          "check_run" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/GithubCheckRun"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "checkRun"
          },
          "answer" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/GithubComment"
            }, {
              "nullable" : true
            } ]
          },
          "sender" : {
            "$ref" : "#/components/schemas/GithubUser"
          },
          "review" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/GithubReview"
            }, {
              "nullable" : true
            } ]
          },
          "member" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/GithubUser"
            }, {
              "nullable" : true
            } ]
          },
          "action" : {
            "maxLength" : 152133,
            "type" : "string",
            "nullable" : true
          },
          "commits" : {
            "maxItems" : 1521,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/GithubCommit"
            }
          },
          "comment" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/GithubComment"
            }, {
              "nullable" : true
            } ]
          },
          "ref_type" : {
            "maxLength" : 152133,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "refType"
          },
          "check_suite" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/GithubCheckSuite"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "checkSuite"
          },
          "forkee" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/GithubRepository"
            }, {
              "nullable" : true
            } ]
          }
        }
      },
      "APPLICATIONSBUILDSUPLOAD" : {
        "title" : "APPLICATIONS_BUILDS_UPLOAD",
        "type" : "string",
        "description" : "allows your app to upload/update builds for a user's applications - requires Discord approval",
        "enum" : [ "applications.builds.upload" ]
      },
      "PRIVATETHREAD" : {
        "title" : "PRIVATE_THREAD",
        "type" : "integer",
        "description" : "A temporary sub-channel within a GUILD_TEXT channel that is only viewable by those invited and those with the MANAGE_THREADS permission",
        "enum" : [ 12 ]
      },
      "OptionsOneOf10" : {
        "nullable" : true
      },
      "ACTIONROW1" : {
        "title" : "ACTION_ROW1",
        "type" : "integer",
        "description" : "Container for other components",
        "enum" : [ 1 ]
      },
      "RolesOneOf1" : {
        "pattern" : "^(0|[1-9][0-9]*)$",
        "type" : "string"
      },
      "INTEGRATIONUPDATE" : {
        "title" : "INTEGRATION_UPDATE",
        "type" : "integer",
        "enum" : [ 81 ]
      },
      "FriendInviteResponse" : {
        "title" : "FriendInviteResponse",
        "required" : [ "code" ],
        "type" : "object",
        "properties" : {
          "max_age" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxAge"
          },
          "friends_count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "friendsCount"
          },
          "code" : {
            "type" : "string"
          },
          "expires_at" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "expiresAt"
          },
          "max_uses" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxUses"
          },
          "channel" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/InviteChannelResponse"
            }, {
              "nullable" : true
            } ]
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "createdAt"
          },
          "inviter" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/UserResponse"
            }, {
              "nullable" : true
            } ]
          },
          "uses" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/InviteTypes"
              } ]
            }, { } ]
          },
          "is_contact" : {
            "type" : "boolean",
            "nullable" : true,
            "x-ballerina-name" : "isContact"
          }
        }
      },
      "MESSAGESEND" : {
        "title" : "MESSAGE_SEND",
        "type" : "integer",
        "description" : "A user submitted a message to a channel",
        "enum" : [ 1 ]
      },
      "AccountResponse" : {
        "title" : "AccountResponse",
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "type" : "string"
          }
        }
      },
      "CreateMessageInteractionCallbackRequest" : {
        "title" : "CreateMessageInteractionCallbackRequest",
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/IncomingWebhookInteractionRequest"
            }, {
              "nullable" : true
            } ]
          },
          "type" : {
            "$ref" : "#/components/schemas/InteractionCallbackTypes"
          }
        }
      },
      "GuildIdScheduledEventsBody" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ExternalScheduledEventCreateRequest"
        }, {
          "$ref" : "#/components/schemas/StageScheduledEventCreateRequest"
        }, {
          "$ref" : "#/components/schemas/VoiceScheduledEventCreateRequest"
        } ]
      },
      "GuildsStickersRequest" : {
        "title" : "GuildsStickersRequest",
        "type" : "object",
        "properties" : {
          "name" : {
            "maxLength" : 30,
            "minLength" : 2,
            "type" : "string"
          },
          "description" : {
            "maxLength" : 100,
            "type" : "string",
            "nullable" : true
          },
          "tags" : {
            "maxLength" : 200,
            "minLength" : 1,
            "type" : "string"
          }
        }
      },
      "SEXUALCONTENT" : {
        "title" : "SEXUAL_CONTENT",
        "type" : "integer",
        "description" : "Words and phrases that may be considered as sexual content",
        "enum" : [ 2 ]
      },
      "ChannelSelect" : {
        "title" : "ChannelSelect",
        "required" : [ "custom_id", "type" ],
        "type" : "object",
        "properties" : {
          "default_values" : {
            "maxItems" : 25,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ChannelSelectDefaultValue"
            },
            "x-ballerina-name" : "defaultValues"
          },
          "min_values" : {
            "maximum" : 25.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "minValues"
          },
          "custom_id" : {
            "maxLength" : 100,
            "type" : "string",
            "x-ballerina-name" : "customId"
          },
          "max_values" : {
            "maximum" : 25.0,
            "minimum" : 1.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxValues"
          },
          "channel_types" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ChannelTypes"
            },
            "x-ballerina-name" : "channelTypes"
          },
          "disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "placeholder" : {
            "maxLength" : 150,
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 8 ]
          }
        }
      },
      "WebhooksRequest2" : {
        "title" : "WebhooksRequest2",
        "type" : "object",
        "properties" : {
          "name" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          },
          "avatar" : {
            "type" : "string",
            "format" : "binary",
            "nullable" : true
          },
          "channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "channelId"
          }
        }
      },
      "WebhooksRequest1" : {
        "title" : "WebhooksRequest1",
        "type" : "object",
        "properties" : {
          "name" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string"
          },
          "avatar" : {
            "type" : "string",
            "format" : "binary",
            "nullable" : true
          }
        }
      },
      "MessageRoleSubscriptionDataResponse" : {
        "title" : "MessageRoleSubscriptionDataResponse",
        "required" : [ "is_renewal", "role_subscription_listing_id", "tier_name", "total_months_subscribed" ],
        "type" : "object",
        "properties" : {
          "tier_name" : {
            "type" : "string",
            "x-ballerina-name" : "tierName"
          },
          "is_renewal" : {
            "type" : "boolean",
            "x-ballerina-name" : "isRenewal"
          },
          "role_subscription_listing_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "roleSubscriptionListingId"
          },
          "total_months_subscribed" : {
            "type" : "integer",
            "format" : "int32",
            "x-ballerina-name" : "totalMonthsSubscribed"
          }
        }
      },
      "CANCELED" : {
        "title" : "CANCELED",
        "type" : "integer",
        "enum" : [ 4 ]
      },
      "DefaultKeywordListTriggerMetadataResponse" : {
        "title" : "DefaultKeywordListTriggerMetadataResponse",
        "required" : [ "allow_list", "presets" ],
        "type" : "object",
        "properties" : {
          "presets" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/AutomodKeywordPresetType"
            }
          },
          "allow_list" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "allowList"
          }
        }
      },
      "Emoji" : {
        "title" : "Emoji",
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "maxLength" : 32,
            "type" : "string"
          },
          "animated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ]
          }
        }
      },
      "GuildMemberResponse" : {
        "title" : "GuildMemberResponse",
        "required" : [ "deaf", "flags", "joined_at", "mute", "pending", "roles", "user" ],
        "type" : "object",
        "properties" : {
          "joined_at" : {
            "type" : "string",
            "format" : "date-time",
            "x-ballerina-name" : "joinedAt"
          },
          "nick" : {
            "type" : "string",
            "nullable" : true
          },
          "premium_since" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "premiumSince"
          },
          "communication_disabled_until" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "communicationDisabledUntil"
          },
          "avatar_decoration_data" : {
            "oneOf" : [ {
              "type" : "object"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "avatarDecorationData"
          },
          "pending" : {
            "type" : "boolean"
          },
          "roles" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32"
          },
          "deaf" : {
            "type" : "boolean"
          },
          "mute" : {
            "type" : "boolean"
          },
          "avatar" : {
            "type" : "string",
            "nullable" : true
          },
          "user" : {
            "$ref" : "#/components/schemas/UserResponse"
          }
        }
      },
      "PremiumGuildTiers" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/NONE4"
        }, {
          "$ref" : "#/components/schemas/TIER1"
        }, {
          "$ref" : "#/components/schemas/TIER2"
        }, {
          "$ref" : "#/components/schemas/TIER3"
        } ]
      },
      "GuildsWidgetRequest" : {
        "title" : "GuildsWidgetRequest",
        "type" : "object",
        "properties" : {
          "channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "channelId"
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "GuildsAutoModerationRulesRequestActions" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/BlockMessageAction"
        }, {
          "$ref" : "#/components/schemas/FlagToChannelAction"
        }, {
          "$ref" : "#/components/schemas/QuarantineUserAction"
        }, {
          "$ref" : "#/components/schemas/UserCommunicationDisabledAction"
        }, {
          "$ref" : "#/components/schemas/ActionsOneOf58"
        } ]
      },
      "GithubComment" : {
        "title" : "GithubComment",
        "required" : [ "body", "html_url", "id", "user" ],
        "type" : "object",
        "properties" : {
          "html_url" : {
            "maxLength" : 2048,
            "type" : "string",
            "x-ballerina-name" : "htmlUrl"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "body" : {
            "maxLength" : 152133,
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/GithubUser"
          },
          "commit_id" : {
            "maxLength" : 152133,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "commitId"
          }
        }
      },
      "ApplicationCommandBooleanOption" : {
        "title" : "ApplicationCommandBooleanOption",
        "required" : [ "description", "name", "type" ],
        "type" : "object",
        "properties" : {
          "name_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "nameLocalizations"
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 1,
            "type" : "string"
          },
          "description" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "description_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalizations"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 5 ]
          },
          "required" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "ChannelPermissionOverwriteResponse" : {
        "title" : "ChannelPermissionOverwriteResponse",
        "required" : [ "allow", "deny", "id", "type" ],
        "type" : "object",
        "properties" : {
          "allow" : {
            "type" : "string"
          },
          "deny" : {
            "type" : "string"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/ChannelPermissionOverwrites"
          }
        }
      },
      "ApplicationResponse" : {
        "title" : "ApplicationResponse",
        "required" : [ "description", "flags", "id", "name", "verify_key" ],
        "type" : "object",
        "properties" : {
          "rpc_origins" : {
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "x-ballerina-name" : "rpcOrigins"
          },
          "privacy_policy_url" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "privacyPolicyUrl"
          },
          "bot_require_code_grant" : {
            "type" : "boolean",
            "nullable" : true,
            "x-ballerina-name" : "botRequireCodeGrant"
          },
          "bot" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/UserResponse"
            }, {
              "nullable" : true
            } ]
          },
          "icon" : {
            "type" : "string",
            "nullable" : true
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32"
          },
          "description" : {
            "type" : "string"
          },
          "verify_key" : {
            "type" : "string",
            "x-ballerina-name" : "verifyKey"
          },
          "type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ApplicationTypes"
              } ]
            }, { } ]
          },
          "max_participants" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxParticipants"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "type" : "string"
            }
          },
          "custom_install_url" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "customInstallUrl"
          },
          "install_params" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ApplicationOAuth2InstallParamsResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "installParams"
          },
          "name" : {
            "type" : "string"
          },
          "guild_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "guildId"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "cover_image" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "coverImage"
          },
          "primary_sku_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "primarySkuId"
          },
          "slug" : {
            "type" : "string",
            "nullable" : true
          },
          "bot_public" : {
            "type" : "boolean",
            "nullable" : true,
            "x-ballerina-name" : "botPublic"
          },
          "terms_of_service_url" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "termsOfServiceUrl"
          }
        }
      },
      "Data" : {
        "title" : "Data",
        "type" : "object",
        "properties" : {
          "choices" : {
            "maxItems" : 25,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/DataChoices"
            }
          }
        }
      },
      "USER" : {
        "title" : "USER",
        "type" : "integer",
        "description" : "A UI-based command that shows up when you right click or tap on a user",
        "enum" : [ 2 ]
      },
      "MessageAllowedMentionsRequestUsers" : {
        "pattern" : "^(0|[1-9][0-9]*)$",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/UsersOneOf1"
        }, {
          "$ref" : "#/components/schemas/UsersUsersOneOf12"
        } ]
      },
      "200AnyOf4" : {
        "nullable" : true
      },
      "CreateGuildChannelRequestAvailableTags" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/CreateOrUpdateThreadTagRequest"
        }, {
          "$ref" : "#/components/schemas/AvailableTagsOneOf2"
        } ]
      },
      "INTEGEREQUAL" : {
        "title" : "INTEGER_EQUAL",
        "type" : "integer",
        "description" : "the metadata value (integer) is equal to the guild's configured value (integer)",
        "enum" : [ 3 ]
      },
      "INTERACTIONPREMIUMUPSELL" : {
        "title" : "INTERACTION_PREMIUM_UPSELL",
        "type" : "integer",
        "enum" : [ 26 ]
      },
      "MessageComponentEmojiResponse" : {
        "title" : "MessageComponentEmojiResponse",
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "animated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ]
          }
        }
      },
      "SPAMLINK" : {
        "title" : "SPAM_LINK",
        "type" : "integer",
        "description" : "DEPRECATED",
        "enum" : [ 2 ]
      },
      "ThreadSortOrder" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/LATESTACTIVITY"
        }, {
          "$ref" : "#/components/schemas/CREATIONDATE"
        } ]
      },
      "MessageCallResponse" : {
        "title" : "MessageCallResponse",
        "required" : [ "participants" ],
        "type" : "object",
        "properties" : {
          "ended_timestamp" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "endedTimestamp"
          },
          "participants" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }
          }
        }
      },
      "APPLICATIONINCOMING" : {
        "title" : "APPLICATION_INCOMING",
        "type" : "integer",
        "description" : "Application webhooks are webhooks used with Interactions",
        "enum" : [ 3 ]
      },
      "SECONDARY" : {
        "title" : "SECONDARY",
        "type" : "integer",
        "enum" : [ 2 ]
      },
      "ScheduledEventsguildScheduledEventIdBody" : {
        "anyOf" : [ {
          "$ref" : "#/components/schemas/ExternalScheduledEventPatchRequestPartial"
        }, {
          "$ref" : "#/components/schemas/StageScheduledEventPatchRequestPartial"
        }, {
          "$ref" : "#/components/schemas/VoiceScheduledEventPatchRequestPartial"
        } ]
      },
      "MESSAGEPIN" : {
        "title" : "MESSAGE_PIN",
        "type" : "integer",
        "enum" : [ 74 ]
      },
      "SCHEDULED" : {
        "title" : "SCHEDULED",
        "type" : "integer",
        "enum" : [ 1 ]
      },
      "GUILDDIRECTORY" : {
        "title" : "GUILD_DIRECTORY",
        "type" : "integer",
        "description" : "The channel in a hub containing the listed servers",
        "enum" : [ 14 ]
      },
      "GuildRoleTagsResponse" : {
        "title" : "GuildRoleTagsResponse",
        "type" : "object",
        "properties" : {
          "subscription_listing_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "subscriptionListingId"
          },
          "guild_connections" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "guildConnections"
          },
          "integration_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "integrationId"
          },
          "premium_subscriber" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "premiumSubscriber"
          },
          "available_for_purchase" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "availableForPurchase"
          },
          "bot_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "botId"
          }
        }
      },
      "Button" : {
        "title" : "Button",
        "required" : [ "style", "type" ],
        "type" : "object",
        "properties" : {
          "emoji" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Emoji"
            }, {
              "nullable" : true
            } ]
          },
          "custom_id" : {
            "maxLength" : 100,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "customId"
          },
          "style" : {
            "$ref" : "#/components/schemas/ButtonStyleTypes"
          },
          "disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "sku_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "skuId"
          },
          "label" : {
            "maxLength" : 80,
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 2 ]
          },
          "url" : {
            "maxLength" : 512,
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "GUILDDISCOVERYGRACEPERIODINITIALWARNING" : {
        "title" : "GUILD_DISCOVERY_GRACE_PERIOD_INITIAL_WARNING",
        "type" : "integer",
        "enum" : [ 16 ]
      },
      "ApplicationCommandSubcommandOption" : {
        "title" : "ApplicationCommandSubcommandOption",
        "required" : [ "description", "name", "type" ],
        "type" : "object",
        "properties" : {
          "name_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "nameLocalizations"
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 1,
            "type" : "string"
          },
          "options" : {
            "maxItems" : 25,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ApplicationCommandSubcommandOptionOptions"
            }
          },
          "description" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "description_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalizations"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 1 ]
          },
          "required" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "GUILDAPPLICATIONPREMIUMSUBSCRIPTION" : {
        "title" : "GUILD_APPLICATION_PREMIUM_SUBSCRIPTION",
        "type" : "integer",
        "enum" : [ 32 ]
      },
      "DEFERREDCHANNELMESSAGEWITHSOURCE" : {
        "title" : "DEFERRED_CHANNEL_MESSAGE_WITH_SOURCE",
        "type" : "integer",
        "enum" : [ 5 ]
      },
      "ApplicationTypes" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/GUILDROLESUBSCRIPTIONS"
        } ]
      },
      "MEDIUM" : {
        "title" : "MEDIUM",
        "type" : "integer",
        "description" : "must be registered on Discord for longer than 5 minutes",
        "enum" : [ 2 ]
      },
      "DataChoices" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ApplicationCommandOptionIntegerChoice"
        }, {
          "$ref" : "#/components/schemas/ChoicesOneOf23"
        } ]
      },
      "CHANNELPINNEDMESSAGE" : {
        "title" : "CHANNEL_PINNED_MESSAGE",
        "type" : "integer",
        "enum" : [ 6 ]
      },
      "PUBLICTHREAD" : {
        "title" : "PUBLIC_THREAD",
        "type" : "integer",
        "description" : "A temporary sub-channel within a GUILD_TEXT or GUILD_THREADS_ONLY channel type set",
        "enum" : [ 11 ]
      },
      "NewMemberActionResponse" : {
        "title" : "NewMemberActionResponse",
        "required" : [ "action_type", "channel_id", "description", "title" ],
        "type" : "object",
        "properties" : {
          "emoji" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/SettingsEmojiResponse"
            }, {
              "nullable" : true
            } ]
          },
          "action_type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NewMemberActionType"
            } ],
            "x-ballerina-name" : "actionType"
          },
          "icon" : {
            "type" : "string",
            "nullable" : true
          },
          "description" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "channelId"
          }
        }
      },
      "BANNER1" : {
        "title" : "BANNER1",
        "type" : "string",
        "description" : "large image with guild icon, name and online count. \"POWERED BY DISCORD\" as the footer of the widget",
        "enum" : [ "banner1" ]
      },
      "BANNER3" : {
        "title" : "BANNER3",
        "type" : "string",
        "description" : "large image with guild icon, name and online count. In the footer, Discord logo on the left and \"Chat Now\" on the right",
        "enum" : [ "banner3" ]
      },
      "BANNER2" : {
        "title" : "BANNER2",
        "type" : "string",
        "description" : "smaller widget style with guild icon, name and online count. Split on the right with Discord logo",
        "enum" : [ "banner2" ]
      },
      "PROFANITY" : {
        "title" : "PROFANITY",
        "type" : "integer",
        "description" : "Words and phrases that may be considered profanity",
        "enum" : [ 1 ]
      },
      "RPCVOICEWRITE" : {
        "title" : "RPC_VOICE_WRITE",
        "type" : "string",
        "description" : "for local rpc server access, this allows you to update a user's voice settings - requires Discord approval",
        "enum" : [ "rpc.voice.write" ]
      },
      "ExternalScheduledEventCreateRequest" : {
        "title" : "ExternalScheduledEventCreateRequest",
        "required" : [ "entity_metadata", "entity_type", "name", "privacy_level", "scheduled_start_time" ],
        "type" : "object",
        "properties" : {
          "image" : {
            "type" : "string",
            "format" : "binary",
            "nullable" : true
          },
          "entity_type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 3 ],
            "x-ballerina-name" : "entityType"
          },
          "privacy_level" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/GuildScheduledEventPrivacyLevels"
            } ],
            "x-ballerina-name" : "privacyLevel"
          },
          "name" : {
            "maxLength" : 100,
            "type" : "string"
          },
          "entity_metadata" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EntityMetadataExternal"
            } ],
            "x-ballerina-name" : "entityMetadata"
          },
          "description" : {
            "maxLength" : 1000,
            "type" : "string",
            "nullable" : true
          },
          "channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "channelId"
          },
          "scheduled_start_time" : {
            "type" : "string",
            "format" : "date-time",
            "x-ballerina-name" : "scheduledStartTime"
          },
          "scheduled_end_time" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "scheduledEndTime"
          }
        }
      },
      "EntitlementTenantFulfillmentStatusResponse" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/UNKNOWN"
        }, {
          "$ref" : "#/components/schemas/FULFILLMENTNOTNEEDED"
        }, {
          "$ref" : "#/components/schemas/FULFILLMENTNEEDED"
        }, {
          "$ref" : "#/components/schemas/FULFILLED"
        }, {
          "$ref" : "#/components/schemas/FULFILLMENTFAILED"
        }, {
          "$ref" : "#/components/schemas/UNFULFILLMENTNEEDED"
        }, {
          "$ref" : "#/components/schemas/UNFULFILLED"
        }, {
          "$ref" : "#/components/schemas/UNFULFILLMENTFAILED"
        } ]
      },
      "ApplicationCommandOptionNumberChoice" : {
        "title" : "ApplicationCommandOptionNumberChoice",
        "required" : [ "name", "value" ],
        "type" : "object",
        "properties" : {
          "name_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "nameLocalizations"
          },
          "name" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "value" : {
            "type" : "number"
          }
        }
      },
      "CONTEXTMENUCOMMAND" : {
        "title" : "CONTEXT_MENU_COMMAND",
        "type" : "integer",
        "enum" : [ 23 ]
      },
      "RAIDALERTSDISABLED" : {
        "title" : "RAID_ALERTS_DISABLED",
        "type" : "string",
        "description" : "guild has disabled activity alerts in the configured safety alerts channel",
        "enum" : [ "RAID_ALERTS_DISABLED" ]
      },
      "UNFULFILLED" : {
        "title" : "UNFULFILLED",
        "type" : "integer",
        "enum" : [ 6 ]
      },
      "ApplicationCommandResponseOptions" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ApplicationCommandAttachmentOptionResponse"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandBooleanOptionResponse"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandChannelOptionResponse"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandIntegerOptionResponse"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandMentionableOptionResponse"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandNumberOptionResponse"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandRoleOptionResponse"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandStringOptionResponse"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandSubcommandGroupOptionResponse"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandSubcommandOptionResponse"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandUserOptionResponse"
        }, {
          "$ref" : "#/components/schemas/OptionsOneOf122"
        } ]
      },
      "ANIMATEDICON" : {
        "title" : "ANIMATED_ICON",
        "type" : "string",
        "description" : "guild has access to set an animated guild icon",
        "enum" : [ "ANIMATED_ICON" ]
      },
      "ROLESUBSCRIPTIONPURCHASE" : {
        "title" : "ROLE_SUBSCRIPTION_PURCHASE",
        "type" : "integer",
        "enum" : [ 25 ]
      },
      "BANNER4" : {
        "title" : "BANNER4",
        "type" : "string",
        "description" : "large Discord logo at the top of the widget. Guild icon, name and online count in the middle portion of the widget and a \"JOIN MY SERVER\" button at the bottom",
        "enum" : [ "banner4" ]
      },
      "STAGETOPIC" : {
        "title" : "STAGE_TOPIC",
        "type" : "integer",
        "enum" : [ 31 ]
      },
      "ONBOARDINGUPDATE" : {
        "title" : "ONBOARDING_UPDATE",
        "type" : "integer",
        "enum" : [ 167 ]
      },
      "MessageComponentStringSelectResponseOptions" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/SelectOptionResponse"
        }, {
          "$ref" : "#/components/schemas/OptionsOneOf2"
        } ]
      },
      "GuildsAutoModerationRulesRequest" : {
        "title" : "GuildsAutoModerationRulesRequest",
        "type" : "object",
        "properties" : {
          "event_type" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MESSAGESEND"
            }, {
              "$ref" : "#/components/schemas/GUILDMEMBERJOINORUPDATE"
            } ],
            "x-ballerina-name" : "eventType"
          },
          "trigger_type" : {
            "x-ballerina-name" : "triggerType"
          },
          "name" : {
            "maxLength" : 100,
            "type" : "string"
          },
          "exempt_roles" : {
            "maxItems" : 20,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "exemptRoles"
          },
          "exempt_channels" : {
            "maxItems" : 50,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "exemptChannels"
          },
          "actions" : {
            "maxItems" : 5,
            "minItems" : 1,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/GuildsAutoModerationRulesRequestActions"
            }
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "trigger_metadata" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DefaultKeywordListTriggerMetadata1"
            } ],
            "x-ballerina-name" : "triggerMetadata"
          }
        }
      },
      "VanityURLResponse" : {
        "title" : "VanityURLResponse",
        "required" : [ "uses" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "nullable" : true
          },
          "uses" : {
            "type" : "integer",
            "format" : "int32"
          },
          "error" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/VanityURLErrorResponse"
            }, {
              "nullable" : true
            } ]
          }
        }
      },
      "ACTIVITIESREAD" : {
        "title" : "ACTIVITIES_READ",
        "type" : "string",
        "description" : "allows your app to fetch data from a user's \"Now Playing/Recently Played\" list - requires Discord approval",
        "enum" : [ "activities.read" ]
      },
      "WEBHOOKUPDATE" : {
        "title" : "WEBHOOK_UPDATE",
        "type" : "integer",
        "enum" : [ 51 ]
      },
      "ONEDAY" : {
        "title" : "ONE_DAY",
        "type" : "integer",
        "description" : "One day",
        "enum" : [ 1440 ]
      },
      "PrivateChannelResponse" : {
        "title" : "PrivateChannelResponse",
        "required" : [ "flags", "id", "recipients", "type" ],
        "type" : "object",
        "properties" : {
          "last_message_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "lastMessageId"
          },
          "last_pin_timestamp" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "lastPinTimestamp"
          },
          "recipients" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/UserResponse"
            }
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 1 ]
          }
        }
      },
      "SlackWebhook" : {
        "title" : "SlackWebhook",
        "type" : "object",
        "properties" : {
          "icon_url" : {
            "maxLength" : 2048,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "iconUrl"
          },
          "attachments" : {
            "maxItems" : 1521,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/WebhookSlackEmbed"
            }
          },
          "text" : {
            "maxLength" : 2000,
            "type" : "string",
            "nullable" : true
          },
          "username" : {
            "maxLength" : 152133,
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "APPLICATIONSCOMMANDSUPDATE" : {
        "title" : "APPLICATIONS_COMMANDS_UPDATE",
        "type" : "string",
        "description" : "allows your app to update its commands using a Bearer token - client credentials grant only",
        "enum" : [ "applications.commands.update" ]
      },
      "BotAccountPatchRequest" : {
        "title" : "BotAccountPatchRequest",
        "required" : [ "username" ],
        "type" : "object",
        "properties" : {
          "banner" : {
            "type" : "string",
            "format" : "binary",
            "nullable" : true
          },
          "avatar" : {
            "type" : "string",
            "format" : "binary",
            "nullable" : true
          },
          "username" : {
            "maxLength" : 32,
            "minLength" : 2,
            "type" : "string"
          }
        }
      },
      "COMPLETED" : {
        "title" : "COMPLETED",
        "type" : "integer",
        "enum" : [ 3 ]
      },
      "BulkBanUsersResponse" : {
        "title" : "BulkBanUsersResponse",
        "required" : [ "banned_users", "failed_users" ],
        "type" : "object",
        "properties" : {
          "failed_users" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "failedUsers"
          },
          "banned_users" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "bannedUsers"
          }
        }
      },
      "PARTNERED" : {
        "title" : "PARTNERED",
        "type" : "string",
        "description" : "guild is partnered",
        "enum" : [ "PARTNERED" ]
      },
      "VOICECHANNELSTATUSDELETE" : {
        "title" : "VOICE_CHANNEL_STATUS_DELETE",
        "type" : "integer",
        "enum" : [ 193 ]
      },
      "SkuIdsSkuIdsOneOf12OneOf1" : {
        "pattern" : "^(0|[1-9][0-9]*)$",
        "type" : "string"
      },
      "ApplicationCommandCreateRequestOptions" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ApplicationCommandAttachmentOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandBooleanOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandChannelOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandIntegerOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandMentionableOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandNumberOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandRoleOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandStringOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandSubcommandGroupOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandSubcommandOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandUserOption"
        }, {
          "$ref" : "#/components/schemas/OptionsOneOf12"
        } ]
      },
      "WelcomeScreenPatchRequestPartial" : {
        "title" : "WelcomeScreenPatchRequestPartial",
        "type" : "object",
        "properties" : {
          "welcome_channels" : {
            "maxItems" : 5,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/GuildWelcomeChannel"
            },
            "x-ballerina-name" : "welcomeChannels"
          },
          "description" : {
            "maxLength" : 140,
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "ApplicationCommandBooleanOptionResponse" : {
        "title" : "ApplicationCommandBooleanOptionResponse",
        "required" : [ "description", "name", "type" ],
        "type" : "object",
        "properties" : {
          "name_localized" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "nameLocalized"
          },
          "name_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "nameLocalizations"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "description_localized" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalized"
          },
          "description_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalizations"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 5 ]
          },
          "required" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "EntityMetadataExternalResponse" : {
        "title" : "EntityMetadataExternalResponse",
        "required" : [ "location" ],
        "type" : "object",
        "properties" : {
          "location" : {
            "type" : "string"
          }
        }
      },
      "GuildRoleResponse" : {
        "title" : "GuildRoleResponse",
        "required" : [ "color", "hoist", "id", "managed", "mentionable", "name", "permissions", "position" ],
        "type" : "object",
        "properties" : {
          "color" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unicode_emoji" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "unicodeEmoji"
          },
          "permissions" : {
            "type" : "string"
          },
          "managed" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "icon" : {
            "type" : "string",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "mentionable" : {
            "type" : "boolean"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "position" : {
            "type" : "integer",
            "format" : "int32"
          },
          "hoist" : {
            "type" : "boolean"
          },
          "tags" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/GuildRoleTagsResponse"
            }, {
              "nullable" : true
            } ]
          }
        }
      },
      "ApplicationCommandOptionNumberChoiceResponse" : {
        "title" : "ApplicationCommandOptionNumberChoiceResponse",
        "required" : [ "name", "value" ],
        "type" : "object",
        "properties" : {
          "name_localized" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "nameLocalized"
          },
          "name_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "nameLocalizations"
          },
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "number"
          }
        }
      },
      "StageInstanceResponse" : {
        "title" : "StageInstanceResponse",
        "required" : [ "channel_id", "guild_id", "id", "privacy_level", "topic" ],
        "type" : "object",
        "properties" : {
          "privacy_level" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/StageInstancesPrivacyLevels"
            } ],
            "x-ballerina-name" : "privacyLevel"
          },
          "guild_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "guildId"
          },
          "topic" : {
            "type" : "string"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "guild_scheduled_event_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "guildScheduledEventId"
          },
          "discoverable_disabled" : {
            "type" : "boolean",
            "nullable" : true,
            "x-ballerina-name" : "discoverableDisabled"
          },
          "channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "channelId"
          }
        }
      },
      "IncomingWebhookRequestPartial" : {
        "title" : "IncomingWebhookRequestPartial",
        "type" : "object",
        "properties" : {
          "components" : {
            "maxItems" : 5,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ActionRow"
            }
          },
          "tts" : {
            "type" : "boolean",
            "nullable" : true
          },
          "attachments" : {
            "maxItems" : 10,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/MessageAttachmentRequest"
            }
          },
          "avatar_url" : {
            "maxLength" : 2048,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "avatarUrl"
          },
          "thread_name" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "threadName"
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "allowed_mentions" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MessageAllowedMentionsRequest"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "allowedMentions"
          },
          "embeds" : {
            "maxItems" : 10,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/RichEmbed"
            }
          },
          "content" : {
            "maxLength" : 2000,
            "type" : "string",
            "nullable" : true
          },
          "username" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string",
            "nullable" : true
          },
          "applied_tags" : {
            "maxItems" : 5,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "appliedTags"
          }
        }
      },
      "WidgetChannel" : {
        "title" : "WidgetChannel",
        "required" : [ "id", "name", "position" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "position" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "UpdateThreadRequestPartial" : {
        "title" : "UpdateThreadRequestPartial",
        "type" : "object",
        "properties" : {
          "archived" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rtc_region" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "rtcRegion"
          },
          "rate_limit_per_user" : {
            "maximum" : 21600.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "rateLimitPerUser"
          },
          "name" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "nullable" : true
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "invitable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "bitrate" : {
            "minimum" : 8000.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "locked" : {
            "type" : "boolean",
            "nullable" : true
          },
          "user_limit" : {
            "maximum" : 99.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "userLimit"
          },
          "auto_archive_duration" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ThreadAutoArchiveDuration"
              } ]
            }, { } ],
            "x-ballerina-name" : "autoArchiveDuration"
          },
          "applied_tags" : {
            "maxItems" : 5,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "appliedTags"
          },
          "video_quality_mode" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/VideoQualityModes"
              } ]
            }, { } ],
            "x-ballerina-name" : "videoQualityMode"
          }
        }
      },
      "ErrorResponse" : {
        "title" : "ErrorResponse",
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "description" : "Discord internal error code. See error code reference",
            "format" : "int32"
          },
          "message" : {
            "type" : "string",
            "description" : "Human-readable error message"
          },
          "errors" : {
            "$ref" : "#/components/schemas/ErrorDetails"
          }
        },
        "description" : "Errors object returned by the Discord API"
      },
      "MODALSUBMIT" : {
        "title" : "MODAL_SUBMIT",
        "type" : "integer",
        "description" : "Sent when a user submits a modal previously sent by your application",
        "enum" : [ 5 ]
      },
      "InteractionApplicationCommandAutocompleteCallbackStringData" : {
        "title" : "InteractionApplicationCommandAutocompleteCallbackStringData",
        "type" : "object",
        "properties" : {
          "choices" : {
            "maxItems" : 25,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/InteractionApplicationCommandAutocompleteCallbackStringDataChoices"
            }
          }
        }
      },
      "AuditLogObjectChangeResponse" : {
        "title" : "AuditLogObjectChangeResponse",
        "type" : "object",
        "properties" : {
          "old_value" : {
            "x-ballerina-name" : "oldValue"
          },
          "key" : {
            "type" : "string",
            "nullable" : true
          },
          "new_value" : {
            "x-ballerina-name" : "newValue"
          }
        }
      },
      "ROLECREATE" : {
        "title" : "ROLE_CREATE",
        "type" : "integer",
        "enum" : [ 30 ]
      },
      "InlineResponse2001" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/DefaultKeywordRuleResponse"
        }, {
          "$ref" : "#/components/schemas/KeywordRuleResponse"
        }, {
          "$ref" : "#/components/schemas/MLSpamRuleResponse"
        }, {
          "$ref" : "#/components/schemas/MentionSpamRuleResponse"
        }, {
          "$ref" : "#/components/schemas/SpamLinkRuleResponse"
        } ]
      },
      "GDMJOIN" : {
        "title" : "GDM_JOIN",
        "type" : "string",
        "description" : "allows your app to join users to a group dm",
        "enum" : [ "gdm.join" ]
      },
      "InlineResponse2003" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ExternalScheduledEventResponse"
        }, {
          "$ref" : "#/components/schemas/StageScheduledEventResponse"
        }, {
          "$ref" : "#/components/schemas/VoiceScheduledEventResponse"
        } ]
      },
      "InlineResponse2002" : {
        "anyOf" : [ {
          "$ref" : "#/components/schemas/FriendInviteResponse"
        }, {
          "$ref" : "#/components/schemas/GroupDMInviteResponse"
        }, {
          "$ref" : "#/components/schemas/GuildInviteResponse"
        } ]
      },
      "STRINGSELECT1" : {
        "title" : "STRING_SELECT1",
        "type" : "integer",
        "description" : "Select menu for picking from defined text options",
        "enum" : [ 3 ]
      },
      "InlineResponse2005" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/GuildStickerResponse"
        }, {
          "$ref" : "#/components/schemas/StandardStickerResponse"
        } ]
      },
      "InlineResponse2004" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ApplicationIncomingWebhookResponse"
        }, {
          "$ref" : "#/components/schemas/ChannelFollowerWebhookResponse"
        }, {
          "$ref" : "#/components/schemas/GuildIncomingWebhookResponse"
        } ]
      },
      "InlineResponse2006" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/GuildChannelResponse"
        }, {
          "$ref" : "#/components/schemas/PrivateChannelResponse"
        }, {
          "$ref" : "#/components/schemas/PrivateGroupChannelResponse"
        }, {
          "$ref" : "#/components/schemas/ThreadResponse"
        } ]
      },
      "RichEmbedFooter" : {
        "title" : "RichEmbedFooter",
        "type" : "object",
        "properties" : {
          "icon_url" : {
            "maxLength" : 2048,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "iconUrl"
          },
          "text" : {
            "maxLength" : 2048,
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "REMOVEROLE" : {
        "title" : "REMOVE_ROLE",
        "type" : "integer",
        "description" : "Remove role",
        "enum" : [ 0 ]
      },
      "StickersOneOf3" : {
        "nullable" : true
      },
      "TALK" : {
        "title" : "TALK",
        "type" : "integer",
        "enum" : [ 1 ]
      },
      "CREATORMONETIZATIONREQUESTCREATED" : {
        "title" : "CREATOR_MONETIZATION_REQUEST_CREATED",
        "type" : "integer",
        "enum" : [ 150 ]
      },
      "MyGuildResponse" : {
        "title" : "MyGuildResponse",
        "required" : [ "features", "id", "name", "owner", "permissions" ],
        "type" : "object",
        "properties" : {
          "owner" : {
            "type" : "boolean"
          },
          "features" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/GuildFeatures"
            }
          },
          "approximate_presence_count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "approximatePresenceCount"
          },
          "permissions" : {
            "type" : "string"
          },
          "approximate_member_count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "approximateMemberCount"
          },
          "name" : {
            "type" : "string"
          },
          "icon" : {
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }
      },
      "VideoQualityModes" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/AUTO"
        }, {
          "$ref" : "#/components/schemas/FULL"
        } ]
      },
      "CommandPermissionsResponse" : {
        "title" : "CommandPermissionsResponse",
        "required" : [ "application_id", "guild_id", "id", "permissions" ],
        "type" : "object",
        "properties" : {
          "permissions" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/CommandPermissionResponse"
            }
          },
          "guild_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "guildId"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "application_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "applicationId"
          }
        }
      },
      "APPLICATIONSCOMMANDS" : {
        "title" : "APPLICATIONS_COMMANDS",
        "type" : "string",
        "description" : "allows your app to use commands in a guild",
        "enum" : [ "applications.commands" ]
      },
      "ResolvedObjectsResponse" : {
        "title" : "ResolvedObjectsResponse",
        "required" : [ "channels", "members", "roles", "users" ],
        "type" : "object",
        "properties" : {
          "channels" : {
            "type" : "object",
            "additionalProperties" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/GuildChannelResponse"
              }, {
                "$ref" : "#/components/schemas/PrivateChannelResponse"
              }, {
                "$ref" : "#/components/schemas/PrivateGroupChannelResponse"
              }, {
                "$ref" : "#/components/schemas/ThreadResponse"
              } ]
            }
          },
          "members" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/GuildMemberResponse"
            }
          },
          "roles" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/GuildRoleResponse"
            }
          },
          "users" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/UserResponse"
            }
          }
        }
      },
      "GUILDANNOUNCEMENT" : {
        "title" : "GUILD_ANNOUNCEMENT",
        "type" : "integer",
        "description" : "A channel that users can follow and crosspost into their own server (formerly news channels)",
        "enum" : [ 5 ]
      },
      "BasicMessageResponse" : {
        "title" : "BasicMessageResponse",
        "required" : [ "attachments", "author", "channel_id", "components", "content", "embeds", "flags", "id", "mention_everyone", "mention_roles", "mentions", "pinned", "timestamp", "tts", "type" ],
        "type" : "object",
        "properties" : {
          "mention_everyone" : {
            "type" : "boolean",
            "x-ballerina-name" : "mentionEveryone"
          },
          "components" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/BasicMessageResponseComponents"
            }
          },
          "pinned" : {
            "type" : "boolean"
          },
          "attachments" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/MessageAttachmentResponse"
            }
          },
          "activity" : {
            "oneOf" : [ {
              "type" : "object"
            }, {
              "nullable" : true
            } ]
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "$ref" : "#/components/schemas/MessageType"
          },
          "mention_roles" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "mentionRoles"
          },
          "content" : {
            "type" : "string"
          },
          "edited_timestamp" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "editedTimestamp"
          },
          "stickers" : {
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/BasicMessageResponseStickers"
            }
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "message_reference" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MessageReferenceResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "messageReference"
          },
          "sticker_items" : {
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/MessageStickerItemResponse"
            },
            "x-ballerina-name" : "stickerItems"
          },
          "timestamp" : {
            "type" : "string",
            "format" : "date-time"
          },
          "resolved" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResolvedObjectsResponse"
            }, {
              "nullable" : true
            } ]
          },
          "role_subscription_data" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MessageRoleSubscriptionDataResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "roleSubscriptionData"
          },
          "author" : {
            "$ref" : "#/components/schemas/UserResponse"
          },
          "thread" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ThreadResponse"
            }, {
              "nullable" : true
            } ]
          },
          "application_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "applicationId"
          },
          "nonce" : {
            "oneOf" : [ {
              "maximum" : 9223372036854776000,
              "minimum" : -9223372036854776000,
              "type" : "integer",
              "format" : "int64"
            }, {
              "maxLength" : 25,
              "type" : "string"
            }, {
              "nullable" : true
            } ]
          },
          "call" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MessageCallResponse"
            }, {
              "nullable" : true
            } ]
          },
          "tts" : {
            "type" : "boolean"
          },
          "mention_channels" : {
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/BasicMessageResponseMentionChannels"
            },
            "x-ballerina-name" : "mentionChannels"
          },
          "application" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/BasicApplicationResponse"
            }, {
              "nullable" : true
            } ]
          },
          "webhook_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "webhookId"
          },
          "mentions" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/UserResponse"
            }
          },
          "purchase_notification" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/PurchaseNotificationResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "purchaseNotification"
          },
          "interaction" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MessageInteractionResponse"
            }, {
              "nullable" : true
            } ]
          },
          "position" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "channelId"
          },
          "embeds" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/MessageEmbedResponse"
            }
          }
        }
      },
      "GuildResponse" : {
        "title" : "GuildResponse",
        "required" : [ "afk_timeout", "default_message_notifications", "emojis", "explicit_content_filter", "features", "id", "mfa_level", "name", "nsfw", "nsfw_level", "owner_id", "preferred_locale", "premium_progress_bar_enabled", "premium_subscription_count", "premium_tier", "region", "roles", "stickers", "system_channel_flags", "verification_level", "widget_enabled" ],
        "type" : "object",
        "properties" : {
          "max_stage_video_channel_users" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxStageVideoChannelUsers"
          },
          "preferred_locale" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AvailableLocalesEnum"
            } ],
            "x-ballerina-name" : "preferredLocale"
          },
          "default_message_notifications" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserNotificationSettings"
            } ],
            "x-ballerina-name" : "defaultMessageNotifications"
          },
          "owner_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "ownerId"
          },
          "widget_channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "widgetChannelId"
          },
          "roles" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/GuildRoleResponse"
            }
          },
          "icon" : {
            "type" : "string",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "system_channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "systemChannelId"
          },
          "rules_channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "rulesChannelId"
          },
          "afk_timeout" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AfkTimeouts"
            } ],
            "x-ballerina-name" : "afkTimeout"
          },
          "features" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/GuildFeatures"
            }
          },
          "afk_channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "afkChannelId"
          },
          "max_members" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxMembers"
          },
          "stickers" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/GuildStickerResponse"
            }
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "widget_enabled" : {
            "type" : "boolean",
            "x-ballerina-name" : "widgetEnabled"
          },
          "max_video_channel_users" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxVideoChannelUsers"
          },
          "nsfw_level" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/GuildNSFWContentLevel"
            } ],
            "x-ballerina-name" : "nsfwLevel"
          },
          "safety_alerts_channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "safetyAlertsChannelId"
          },
          "emojis" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/EmojiResponse"
            }
          },
          "nsfw" : {
            "type" : "boolean"
          },
          "vanity_url_code" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "vanityUrlCode"
          },
          "system_channel_flags" : {
            "type" : "integer",
            "format" : "int32",
            "x-ballerina-name" : "systemChannelFlags"
          },
          "max_presences" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxPresences"
          },
          "premium_progress_bar_enabled" : {
            "type" : "boolean",
            "x-ballerina-name" : "premiumProgressBarEnabled"
          },
          "banner" : {
            "type" : "string",
            "nullable" : true
          },
          "premium_subscription_count" : {
            "type" : "integer",
            "format" : "int32",
            "x-ballerina-name" : "premiumSubscriptionCount"
          },
          "public_updates_channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "publicUpdatesChannelId"
          },
          "application_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "applicationId"
          },
          "home_header" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "homeHeader"
          },
          "verification_level" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/VerificationLevels"
            } ],
            "x-ballerina-name" : "verificationLevel"
          },
          "discovery_splash" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "discoverySplash"
          },
          "explicit_content_filter" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/GuildExplicitContentFilterTypes"
            } ],
            "x-ballerina-name" : "explicitContentFilter"
          },
          "name" : {
            "type" : "string"
          },
          "mfa_level" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/GuildMFALevel"
            } ],
            "x-ballerina-name" : "mfaLevel"
          },
          "premium_tier" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PremiumGuildTiers"
            } ],
            "x-ballerina-name" : "premiumTier"
          },
          "region" : {
            "type" : "string"
          },
          "splash" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "CreateOrUpdateThreadTagRequest" : {
        "title" : "CreateOrUpdateThreadTagRequest",
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "moderated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string"
          },
          "emoji_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "emojiId"
          },
          "emoji_name" : {
            "maxLength" : 100,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "emojiName"
          }
        }
      },
      "DISABLED" : {
        "title" : "DISABLED",
        "type" : "integer",
        "description" : "media content will not be scanned",
        "enum" : [ 0 ]
      },
      "GuildProductPurchaseResponse" : {
        "title" : "GuildProductPurchaseResponse",
        "required" : [ "listing_id", "product_name" ],
        "type" : "object",
        "properties" : {
          "listing_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "listingId"
          },
          "product_name" : {
            "type" : "string",
            "x-ballerina-name" : "productName"
          }
        }
      },
      "UPDATEMESSAGE" : {
        "title" : "UPDATE_MESSAGE",
        "type" : "integer",
        "enum" : [ 7 ]
      },
      "ApplicationCommandPermission" : {
        "title" : "ApplicationCommandPermission",
        "required" : [ "id", "permission", "type" ],
        "type" : "object",
        "properties" : {
          "permission" : {
            "type" : "boolean"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/ApplicationCommandPermissionType"
          }
        }
      },
      "BlockMessageActionMetadata" : {
        "title" : "BlockMessageActionMetadata",
        "type" : "object",
        "properties" : {
          "custom_message" : {
            "maxLength" : 150,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "customMessage"
          }
        }
      },
      "AGERESTRICTED" : {
        "title" : "AGE_RESTRICTED",
        "type" : "integer",
        "enum" : [ 3 ]
      },
      "CREATORMONETIZATIONTERMSACCEPTED" : {
        "title" : "CREATOR_MONETIZATION_TERMS_ACCEPTED",
        "type" : "integer",
        "enum" : [ 151 ]
      },
      "EMOJIDELETE" : {
        "title" : "EMOJI_DELETE",
        "type" : "integer",
        "enum" : [ 62 ]
      },
      "ApplicationCommandOptionStringChoiceResponse" : {
        "title" : "ApplicationCommandOptionStringChoiceResponse",
        "required" : [ "name", "value" ],
        "type" : "object",
        "properties" : {
          "name_localized" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "nameLocalized"
          },
          "name_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "nameLocalizations"
          },
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "MentionSpamUpsertRequest" : {
        "title" : "MentionSpamUpsertRequest",
        "required" : [ "event_type", "name", "trigger_type" ],
        "type" : "object",
        "properties" : {
          "event_type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AutomodEventType"
            } ],
            "x-ballerina-name" : "eventType"
          },
          "trigger_type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 5 ],
            "x-ballerina-name" : "triggerType"
          },
          "name" : {
            "maxLength" : 100,
            "type" : "string"
          },
          "exempt_roles" : {
            "maxItems" : 20,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "exemptRoles"
          },
          "exempt_channels" : {
            "maxItems" : 50,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "exemptChannels"
          },
          "actions" : {
            "maxItems" : 5,
            "minItems" : 1,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/MentionSpamUpsertRequestActions"
            }
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "trigger_metadata" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MentionSpamTriggerMetadata"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "triggerMetadata"
          }
        }
      },
      "OAuth2GetAuthorizationResponse" : {
        "title" : "OAuth2GetAuthorizationResponse",
        "required" : [ "application", "expires", "scopes" ],
        "type" : "object",
        "properties" : {
          "expires" : {
            "type" : "string",
            "format" : "date-time"
          },
          "application" : {
            "$ref" : "#/components/schemas/ApplicationResponse"
          },
          "scopes" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/OAuth2Scopes"
            }
          },
          "user" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/UserResponse"
            }, {
              "nullable" : true
            } ]
          }
        }
      },
      "STAGEINSTANCEDELETE" : {
        "title" : "STAGE_INSTANCE_DELETE",
        "type" : "integer",
        "enum" : [ 85 ]
      },
      "BATTLENET" : {
        "title" : "BATTLENET",
        "type" : "string",
        "enum" : [ "battlenet" ]
      },
      "InviteChannelResponse" : {
        "title" : "InviteChannelResponse",
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "recipients" : {
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/InviteChannelRecipientResponse"
            }
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "icon" : {
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/ChannelTypes"
          }
        }
      },
      "DEFAULTKEYWORDLIST" : {
        "title" : "DEFAULT_KEYWORD_LIST",
        "type" : "integer",
        "description" : "Check if content contains words from internal pre-defined wordsets",
        "enum" : [ 4 ]
      },
      "GithubCommit" : {
        "title" : "GithubCommit",
        "required" : [ "author", "id", "message", "url" ],
        "type" : "object",
        "properties" : {
          "author" : {
            "$ref" : "#/components/schemas/GithubAuthor"
          },
          "id" : {
            "maxLength" : 152133,
            "type" : "string"
          },
          "message" : {
            "maxLength" : 152133,
            "type" : "string"
          },
          "url" : {
            "maxLength" : 2048,
            "type" : "string"
          }
        }
      },
      "TeamResponse" : {
        "title" : "TeamResponse",
        "required" : [ "id", "members", "name", "owner_user_id" ],
        "type" : "object",
        "properties" : {
          "owner_user_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "ownerUserId"
          },
          "members" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/TeamMemberResponse"
            }
          },
          "icon" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }
      },
      "SelectOption" : {
        "title" : "SelectOption",
        "required" : [ "label", "value" ],
        "type" : "object",
        "properties" : {
          "default" : {
            "type" : "boolean",
            "nullable" : true
          },
          "emoji" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Emoji"
            }, {
              "nullable" : true
            } ]
          },
          "description" : {
            "maxLength" : 100,
            "type" : "string",
            "nullable" : true
          },
          "label" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "value" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          }
        }
      },
      "LATESTACTIVITY" : {
        "title" : "LATEST_ACTIVITY",
        "type" : "integer",
        "description" : "Sort forum posts by activity",
        "enum" : [ 0 ]
      },
      "ConnectedAccountProviders" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/BATTLENET"
        }, {
          "$ref" : "#/components/schemas/BUNGIE"
        }, {
          "$ref" : "#/components/schemas/EBAY"
        }, {
          "$ref" : "#/components/schemas/EPICGAMES"
        }, {
          "$ref" : "#/components/schemas/FACEBOOK"
        }, {
          "$ref" : "#/components/schemas/GITHUB"
        }, {
          "$ref" : "#/components/schemas/INSTAGRAM"
        }, {
          "$ref" : "#/components/schemas/LEAGUEOFLEGENDS"
        }, {
          "$ref" : "#/components/schemas/PAYPAL"
        }, {
          "$ref" : "#/components/schemas/PLAYSTATION"
        }, {
          "$ref" : "#/components/schemas/REDDIT"
        }, {
          "$ref" : "#/components/schemas/RIOTGAMES"
        }, {
          "$ref" : "#/components/schemas/ROBLOX"
        }, {
          "$ref" : "#/components/schemas/SKYPE"
        }, {
          "$ref" : "#/components/schemas/SPOTIFY"
        }, {
          "$ref" : "#/components/schemas/STEAM"
        }, {
          "$ref" : "#/components/schemas/TIKTOK"
        }, {
          "$ref" : "#/components/schemas/TWITCH"
        }, {
          "$ref" : "#/components/schemas/TWITTER"
        }, {
          "$ref" : "#/components/schemas/XBOX"
        }, {
          "$ref" : "#/components/schemas/YOUTUBE"
        }, {
          "$ref" : "#/components/schemas/DOMAIN"
        } ]
      },
      "FOURTEENDAYS" : {
        "title" : "FOURTEEN_DAYS",
        "type" : "integer",
        "description" : "14 days",
        "enum" : [ 14 ]
      },
      "TIER21" : {
        "title" : "TIER_21",
        "type" : "integer",
        "description" : "Nitro Standard",
        "enum" : [ 2 ]
      },
      "KeywordUpsertRequestPartialActions" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/BlockMessageAction"
        }, {
          "$ref" : "#/components/schemas/FlagToChannelAction"
        }, {
          "$ref" : "#/components/schemas/QuarantineUserAction"
        }, {
          "$ref" : "#/components/schemas/UserCommunicationDisabledAction"
        }, {
          "$ref" : "#/components/schemas/ActionsOneOf53"
        } ]
      },
      "SelectOptionResponse" : {
        "title" : "SelectOptionResponse",
        "required" : [ "label", "value" ],
        "type" : "object",
        "properties" : {
          "default" : {
            "type" : "boolean",
            "nullable" : true
          },
          "emoji" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MessageComponentEmojiResponse"
            }, {
              "nullable" : true
            } ]
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "label" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "STAGESTART" : {
        "title" : "STAGE_START",
        "type" : "integer",
        "enum" : [ 27 ]
      },
      "ActionRow" : {
        "title" : "ActionRow",
        "required" : [ "components", "type" ],
        "type" : "object",
        "properties" : {
          "components" : {
            "maxItems" : 5,
            "minItems" : 1,
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/ActionRowComponents"
            }
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 1 ]
          }
        }
      },
      "RPCVIDEOWRITE" : {
        "title" : "RPC_VIDEO_WRITE",
        "type" : "string",
        "description" : "for local rpc server access, this allows you to update a user's video settings - requires Discord approval",
        "enum" : [ "rpc.video.write" ]
      },
      "ROLESUBSCRIPTIONSAVAILABLEFORPURCHASE" : {
        "title" : "ROLE_SUBSCRIPTIONS_AVAILABLE_FOR_PURCHASE",
        "type" : "string",
        "description" : "guild has role subscriptions that can be purchased",
        "enum" : [ "ROLE_SUBSCRIPTIONS_AVAILABLE_FOR_PURCHASE" ]
      },
      "RPCACTIVITIESWRITE" : {
        "title" : "RPC_ACTIVITIES_WRITE",
        "type" : "string",
        "description" : "for local rpc server access, this allows you to update a user's activity - requires Discord approval",
        "enum" : [ "rpc.activities.write" ]
      },
      "RichEmbed" : {
        "title" : "RichEmbed",
        "type" : "object",
        "properties" : {
          "image" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/RichEmbedImage"
            }, {
              "nullable" : true
            } ]
          },
          "thumbnail" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/RichEmbedThumbnail"
            }, {
              "nullable" : true
            } ]
          },
          "color" : {
            "maximum" : 16777215,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "footer" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/RichEmbedFooter"
            }, {
              "nullable" : true
            } ]
          },
          "author" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/RichEmbedAuthor"
            }, {
              "nullable" : true
            } ]
          },
          "description" : {
            "maxLength" : 4096,
            "type" : "string",
            "nullable" : true
          },
          "video" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/RichEmbedVideo"
            }, {
              "nullable" : true
            } ]
          },
          "type" : {
            "maxLength" : 152133,
            "type" : "string",
            "nullable" : true
          },
          "title" : {
            "maxLength" : 256,
            "type" : "string",
            "nullable" : true
          },
          "url" : {
            "maxLength" : 2048,
            "type" : "string",
            "nullable" : true
          },
          "provider" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/RichEmbedProvider"
            }, {
              "nullable" : true
            } ]
          },
          "fields" : {
            "maxItems" : 25,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/RichEmbedField"
            }
          },
          "timestamp" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          }
        }
      },
      "TIER11" : {
        "title" : "TIER_11",
        "type" : "integer",
        "description" : "Nitro Classic",
        "enum" : [ 1 ]
      },
      "DEFAULT" : {
        "title" : "DEFAULT",
        "type" : "integer",
        "enum" : [ 0 ]
      },
      "InteractionTokenCallbackBody" : {
        "anyOf" : [ {
          "$ref" : "#/components/schemas/ApplicationCommandAutocompleteCallbackRequest"
        }, {
          "$ref" : "#/components/schemas/CreateMessageInteractionCallbackRequest"
        }, {
          "$ref" : "#/components/schemas/ModalInteractionCallbackRequest"
        }, {
          "$ref" : "#/components/schemas/PongInteractionCallbackRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateMessageInteractionCallbackRequest"
        } ]
      },
      "MessageEmbedResponse" : {
        "title" : "MessageEmbedResponse",
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "image" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MessageEmbedImageResponse"
            }, {
              "nullable" : true
            } ]
          },
          "thumbnail" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MessageEmbedImageResponse"
            }, {
              "nullable" : true
            } ]
          },
          "color" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "footer" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MessageEmbedFooterResponse"
            }, {
              "nullable" : true
            } ]
          },
          "author" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MessageEmbedAuthorResponse"
            }, {
              "nullable" : true
            } ]
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "video" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MessageEmbedVideoResponse"
            }, {
              "nullable" : true
            } ]
          },
          "type" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          },
          "url" : {
            "type" : "string",
            "nullable" : true
          },
          "provider" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MessageEmbedProviderResponse"
            }, {
              "nullable" : true
            } ]
          },
          "fields" : {
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/MessageEmbedFieldResponse"
            }
          },
          "timestamp" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          }
        }
      },
      "OnboardingPromptResponse" : {
        "title" : "OnboardingPromptResponse",
        "required" : [ "id", "in_onboarding", "options", "required", "single_select", "title", "type" ],
        "type" : "object",
        "properties" : {
          "in_onboarding" : {
            "type" : "boolean",
            "x-ballerina-name" : "inOnboarding"
          },
          "options" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/OnboardingPromptOptionResponse"
            }
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/OnboardingPromptType"
          },
          "single_select" : {
            "type" : "boolean",
            "x-ballerina-name" : "singleSelect"
          },
          "required" : {
            "type" : "boolean"
          }
        }
      },
      "InteractionApplicationCommandAutocompleteCallbackNumberData" : {
        "title" : "InteractionApplicationCommandAutocompleteCallbackNumberData",
        "type" : "object",
        "properties" : {
          "choices" : {
            "maxItems" : 25,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/InteractionApplicationCommandAutocompleteCallbackNumberDataChoices"
            }
          }
        }
      },
      "EnUS" : {
        "title" : "en-US",
        "type" : "string",
        "description" : "The en-US locale",
        "enum" : [ "en-US" ]
      },
      "GuildsPruneRequest" : {
        "title" : "GuildsPruneRequest",
        "type" : "object",
        "properties" : {
          "compute_prune_count" : {
            "type" : "boolean",
            "nullable" : true,
            "x-ballerina-name" : "computePruneCount"
          },
          "days" : {
            "maximum" : 30.0,
            "minimum" : 1.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "include_roles" : {
            "oneOf" : [ {
              "type" : "string"
            }, {
              "maxItems" : 100,
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "pattern" : "^(0|[1-9][0-9]*)$",
                "oneOf" : [ {
                  "pattern" : "^(0|[1-9][0-9]*)$",
                  "type" : "string"
                } ]
              }
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "includeRoles"
          }
        }
      },
      "FULFILLMENTNOTNEEDED" : {
        "title" : "FULFILLMENT_NOT_NEEDED",
        "type" : "integer",
        "enum" : [ 1 ]
      },
      "ChannelTypes" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/DM"
        }, {
          "$ref" : "#/components/schemas/GROUPDM"
        }, {
          "$ref" : "#/components/schemas/GUILDTEXT"
        }, {
          "$ref" : "#/components/schemas/GUILDVOICE"
        }, {
          "$ref" : "#/components/schemas/GUILDCATEGORY"
        }, {
          "$ref" : "#/components/schemas/GUILDANNOUNCEMENT"
        }, {
          "$ref" : "#/components/schemas/ANNOUNCEMENTTHREAD"
        }, {
          "$ref" : "#/components/schemas/PUBLICTHREAD"
        }, {
          "$ref" : "#/components/schemas/PRIVATETHREAD"
        }, {
          "$ref" : "#/components/schemas/GUILDSTAGEVOICE"
        }, {
          "$ref" : "#/components/schemas/GUILDDIRECTORY"
        }, {
          "$ref" : "#/components/schemas/GUILDFORUM"
        } ]
      },
      "StageScheduledEventPatchRequestPartial" : {
        "title" : "StageScheduledEventPatchRequestPartial",
        "type" : "object",
        "properties" : {
          "image" : {
            "type" : "string",
            "format" : "binary",
            "nullable" : true
          },
          "entity_type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/GuildScheduledEventEntityTypes"
              } ]
            }, { } ],
            "x-ballerina-name" : "entityType"
          },
          "privacy_level" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/GuildScheduledEventPrivacyLevels"
            } ],
            "x-ballerina-name" : "privacyLevel"
          },
          "name" : {
            "maxLength" : 100,
            "type" : "string"
          },
          "entity_metadata" : {
            "oneOf" : [ {
              "type" : "object"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "entityMetadata"
          },
          "description" : {
            "maxLength" : 1000,
            "type" : "string",
            "nullable" : true
          },
          "channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "channelId"
          },
          "status" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/GuildScheduledEventStatuses"
              } ]
            }, { } ]
          },
          "scheduled_start_time" : {
            "type" : "string",
            "format" : "date-time",
            "x-ballerina-name" : "scheduledStartTime"
          },
          "scheduled_end_time" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "scheduledEndTime"
          }
        }
      },
      "CHANNELCREATE" : {
        "title" : "CHANNEL_CREATE",
        "type" : "integer",
        "enum" : [ 10 ]
      },
      "AUTOMODERATIONRULEUPDATE" : {
        "title" : "AUTO_MODERATION_RULE_UPDATE",
        "type" : "integer",
        "enum" : [ 141 ]
      },
      "ChannelsInvitesResponse" : {
        "title" : "ChannelsInvitesResponse",
        "type" : "object",
        "properties" : {
          "friends_count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "friendsCount"
          },
          "temporary" : {
            "type" : "boolean",
            "nullable" : true
          },
          "code" : {
            "type" : "string"
          },
          "guild_scheduled_event" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ScheduledEventResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "guildScheduledEvent"
          },
          "approximate_presence_count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "approximatePresenceCount"
          },
          "target_application" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/InviteApplicationResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "targetApplication"
          },
          "channel" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/InviteChannelResponse"
            } ]
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "target_type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/InviteTargetTypes"
              } ]
            }, { } ],
            "x-ballerina-name" : "targetType"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "createdAt"
          },
          "type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/InviteTypes"
              } ]
            }, { } ]
          },
          "is_contact" : {
            "type" : "boolean",
            "nullable" : true,
            "x-ballerina-name" : "isContact"
          },
          "max_age" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxAge"
          },
          "guild" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/InviteGuildResponse"
            }, {
              "nullable" : true
            } ]
          },
          "expires_at" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "expiresAt"
          },
          "max_uses" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxUses"
          },
          "approximate_member_count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "approximateMemberCount"
          },
          "guild_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "guildId"
          },
          "target_user" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/UserResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "targetUser"
          },
          "inviter" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/UserResponse"
            } ]
          },
          "uses" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "stage_instance" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/InviteStageInstanceResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "stageInstance"
          }
        }
      },
      "WEBHOOKCREATE" : {
        "title" : "WEBHOOK_CREATE",
        "type" : "integer",
        "enum" : [ 50 ]
      },
      "UpdateGuildOnboardingRequest" : {
        "title" : "UpdateGuildOnboardingRequest",
        "type" : "object",
        "properties" : {
          "mode" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/GuildOnboardingMode"
              } ]
            }, { } ]
          },
          "default_channel_ids" : {
            "maxItems" : 500,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "defaultChannelIds"
          },
          "prompts" : {
            "maxItems" : 15,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/UpdateOnboardingPromptRequest"
            }
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "RichEmbedThumbnail" : {
        "title" : "RichEmbedThumbnail",
        "type" : "object",
        "properties" : {
          "width" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "placeholder_version" : {
            "maximum" : 2147483647,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "placeholderVersion"
          },
          "placeholder" : {
            "maxLength" : 64,
            "type" : "string",
            "nullable" : true
          },
          "url" : {
            "maxLength" : 2048,
            "type" : "string",
            "nullable" : true
          },
          "height" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "ChannelsPermissionsRequest" : {
        "title" : "ChannelsPermissionsRequest",
        "type" : "object",
        "properties" : {
          "allow" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "deny" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ChannelPermissionOverwrites"
              } ]
            }, { } ]
          }
        }
      },
      "ApplicationCommandAutocompleteCallbackRequest" : {
        "title" : "ApplicationCommandAutocompleteCallbackRequest",
        "required" : [ "data", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "anyOf" : [ {
              "$ref" : "#/components/schemas/InteractionApplicationCommandAutocompleteCallbackIntegerData"
            }, {
              "$ref" : "#/components/schemas/InteractionApplicationCommandAutocompleteCallbackNumberData"
            }, {
              "$ref" : "#/components/schemas/InteractionApplicationCommandAutocompleteCallbackStringData"
            } ]
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 8 ]
          }
        }
      },
      "InviteStageInstanceResponse" : {
        "title" : "InviteStageInstanceResponse",
        "required" : [ "topic" ],
        "type" : "object",
        "properties" : {
          "speaker_count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "speakerCount"
          },
          "participant_count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "participantCount"
          },
          "members" : {
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/GuildMemberResponse"
            }
          },
          "topic" : {
            "type" : "string"
          }
        }
      },
      "RichEmbedProvider" : {
        "title" : "RichEmbedProvider",
        "type" : "object",
        "properties" : {
          "name" : {
            "maxLength" : 256,
            "type" : "string",
            "nullable" : true
          },
          "url" : {
            "maxLength" : 2048,
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ApplicationCommandSubcommandGroupOptionResponse" : {
        "title" : "ApplicationCommandSubcommandGroupOptionResponse",
        "required" : [ "description", "name", "type" ],
        "type" : "object",
        "properties" : {
          "name_localized" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "nameLocalized"
          },
          "name_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "nameLocalizations"
          },
          "name" : {
            "type" : "string"
          },
          "options" : {
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ApplicationCommandSubcommandOptionResponse"
            }
          },
          "description" : {
            "type" : "string"
          },
          "description_localized" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalized"
          },
          "description_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalizations"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 2 ]
          },
          "required" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "ApplicationCommandUserOption" : {
        "title" : "ApplicationCommandUserOption",
        "required" : [ "description", "name", "type" ],
        "type" : "object",
        "properties" : {
          "name_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "nameLocalizations"
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 1,
            "type" : "string"
          },
          "description" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "description_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalizations"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 6 ]
          },
          "required" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "BlockMessageActionMetadataResponse" : {
        "title" : "BlockMessageActionMetadataResponse",
        "type" : "object",
        "properties" : {
          "custom_message" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "customMessage"
          }
        }
      },
      "MessageResponseStickers" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/GuildStickerResponse"
        }, {
          "$ref" : "#/components/schemas/StandardStickerResponse"
        }, {
          "$ref" : "#/components/schemas/StickersOneOf31"
        } ]
      },
      "ApplicationIncomingWebhookResponse" : {
        "title" : "ApplicationIncomingWebhookResponse",
        "required" : [ "id", "name", "type" ],
        "type" : "object",
        "properties" : {
          "guild_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "guildId"
          },
          "name" : {
            "type" : "string"
          },
          "avatar" : {
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 3 ]
          },
          "application_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "applicationId"
          },
          "channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "channelId"
          },
          "user" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/UserResponse"
            }, {
              "nullable" : true
            } ]
          }
        }
      },
      "InviteTargetTypes" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/STREAM"
        }, {
          "$ref" : "#/components/schemas/EMBEDDEDAPPLICATION"
        }, {
          "$ref" : "#/components/schemas/ROLESUBSCRIPTIONSPURCHASE"
        } ]
      },
      "GUILDSTAGEVOICE" : {
        "title" : "GUILD_STAGE_VOICE",
        "type" : "integer",
        "description" : "A voice channel for hosting events with an audience",
        "enum" : [ 13 ]
      },
      "MESSAGEDELETE" : {
        "title" : "MESSAGE_DELETE",
        "type" : "integer",
        "enum" : [ 72 ]
      },
      "GUILDINCOMING" : {
        "title" : "GUILD_INCOMING",
        "type" : "integer",
        "description" : "Incoming Webhooks can post messages to channels with a generated token",
        "enum" : [ 1 ]
      },
      "ApplicationCommandPatchRequestPartialOptions" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ApplicationCommandAttachmentOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandBooleanOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandChannelOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandIntegerOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandMentionableOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandNumberOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandRoleOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandStringOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandSubcommandGroupOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandSubcommandOption"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandUserOption"
        }, {
          "$ref" : "#/components/schemas/OptionsOneOf121"
        } ]
      },
      "VerificationLevels" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/NONE2"
        }, {
          "$ref" : "#/components/schemas/LOW"
        }, {
          "$ref" : "#/components/schemas/MEDIUM"
        }, {
          "$ref" : "#/components/schemas/HIGH"
        }, {
          "$ref" : "#/components/schemas/VERYHIGH"
        } ]
      },
      "ONBOARDINGPROMPTDELETE" : {
        "title" : "ONBOARDING_PROMPT_DELETE",
        "type" : "integer",
        "enum" : [ 165 ]
      },
      "AUTOMODERATIONQUARANTINEUSER" : {
        "title" : "AUTO_MODERATION_QUARANTINE_USER",
        "type" : "integer",
        "enum" : [ 146 ]
      },
      "AuditLogActionTypes" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/GUILDUPDATE"
        }, {
          "$ref" : "#/components/schemas/CHANNELCREATE"
        }, {
          "$ref" : "#/components/schemas/CHANNELUPDATE"
        }, {
          "$ref" : "#/components/schemas/CHANNELDELETE"
        }, {
          "$ref" : "#/components/schemas/CHANNELOVERWRITECREATE"
        }, {
          "$ref" : "#/components/schemas/CHANNELOVERWRITEUPDATE"
        }, {
          "$ref" : "#/components/schemas/CHANNELOVERWRITEDELETE"
        }, {
          "$ref" : "#/components/schemas/MEMBERKICK"
        }, {
          "$ref" : "#/components/schemas/MEMBERPRUNE"
        }, {
          "$ref" : "#/components/schemas/MEMBERBANADD"
        }, {
          "$ref" : "#/components/schemas/MEMBERBANREMOVE"
        }, {
          "$ref" : "#/components/schemas/MEMBERUPDATE"
        }, {
          "$ref" : "#/components/schemas/MEMBERROLEUPDATE"
        }, {
          "$ref" : "#/components/schemas/MEMBERMOVE"
        }, {
          "$ref" : "#/components/schemas/MEMBERDISCONNECT"
        }, {
          "$ref" : "#/components/schemas/BOTADD"
        }, {
          "$ref" : "#/components/schemas/ROLECREATE"
        }, {
          "$ref" : "#/components/schemas/ROLEUPDATE"
        }, {
          "$ref" : "#/components/schemas/ROLEDELETE"
        }, {
          "$ref" : "#/components/schemas/INVITECREATE"
        }, {
          "$ref" : "#/components/schemas/INVITEUPDATE"
        }, {
          "$ref" : "#/components/schemas/INVITEDELETE"
        }, {
          "$ref" : "#/components/schemas/WEBHOOKCREATE"
        }, {
          "$ref" : "#/components/schemas/WEBHOOKUPDATE"
        }, {
          "$ref" : "#/components/schemas/WEBHOOKDELETE"
        }, {
          "$ref" : "#/components/schemas/EMOJICREATE"
        }, {
          "$ref" : "#/components/schemas/EMOJIUPDATE"
        }, {
          "$ref" : "#/components/schemas/EMOJIDELETE"
        }, {
          "$ref" : "#/components/schemas/MESSAGEDELETE"
        }, {
          "$ref" : "#/components/schemas/MESSAGEBULKDELETE"
        }, {
          "$ref" : "#/components/schemas/MESSAGEPIN"
        }, {
          "$ref" : "#/components/schemas/MESSAGEUNPIN"
        }, {
          "$ref" : "#/components/schemas/INTEGRATIONCREATE"
        }, {
          "$ref" : "#/components/schemas/INTEGRATIONUPDATE"
        }, {
          "$ref" : "#/components/schemas/INTEGRATIONDELETE"
        }, {
          "$ref" : "#/components/schemas/STAGEINSTANCECREATE"
        }, {
          "$ref" : "#/components/schemas/STAGEINSTANCEUPDATE"
        }, {
          "$ref" : "#/components/schemas/STAGEINSTANCEDELETE"
        }, {
          "$ref" : "#/components/schemas/STICKERCREATE"
        }, {
          "$ref" : "#/components/schemas/STICKERUPDATE"
        }, {
          "$ref" : "#/components/schemas/STICKERDELETE"
        }, {
          "$ref" : "#/components/schemas/GUILDSCHEDULEDEVENTCREATE"
        }, {
          "$ref" : "#/components/schemas/GUILDSCHEDULEDEVENTUPDATE"
        }, {
          "$ref" : "#/components/schemas/GUILDSCHEDULEDEVENTDELETE"
        }, {
          "$ref" : "#/components/schemas/THREADCREATE"
        }, {
          "$ref" : "#/components/schemas/THREADUPDATE"
        }, {
          "$ref" : "#/components/schemas/THREADDELETE"
        }, {
          "$ref" : "#/components/schemas/APPLICATIONCOMMANDPERMISSIONUPDATE"
        }, {
          "$ref" : "#/components/schemas/SOUNDBOARDSOUNDCREATE"
        }, {
          "$ref" : "#/components/schemas/SOUNDBOARDSOUNDUPDATE"
        }, {
          "$ref" : "#/components/schemas/SOUNDBOARDSOUNDDELETE"
        }, {
          "$ref" : "#/components/schemas/AUTOMODERATIONRULECREATE"
        }, {
          "$ref" : "#/components/schemas/AUTOMODERATIONRULEUPDATE"
        }, {
          "$ref" : "#/components/schemas/AUTOMODERATIONRULEDELETE"
        }, {
          "$ref" : "#/components/schemas/AUTOMODERATIONBLOCKMESSAGE"
        }, {
          "$ref" : "#/components/schemas/AUTOMODERATIONFLAGTOCHANNEL"
        }, {
          "$ref" : "#/components/schemas/AUTOMODERATIONUSERCOMMDISABLED"
        }, {
          "$ref" : "#/components/schemas/AUTOMODERATIONQUARANTINEUSER"
        }, {
          "$ref" : "#/components/schemas/CREATORMONETIZATIONREQUESTCREATED"
        }, {
          "$ref" : "#/components/schemas/CREATORMONETIZATIONTERMSACCEPTED"
        }, {
          "$ref" : "#/components/schemas/ONBOARDINGPROMPTCREATE"
        }, {
          "$ref" : "#/components/schemas/ONBOARDINGPROMPTUPDATE"
        }, {
          "$ref" : "#/components/schemas/ONBOARDINGPROMPTDELETE"
        }, {
          "$ref" : "#/components/schemas/ONBOARDINGCREATE"
        }, {
          "$ref" : "#/components/schemas/ONBOARDINGUPDATE"
        }, {
          "$ref" : "#/components/schemas/GUILDHOMEFEATUREITEM"
        }, {
          "$ref" : "#/components/schemas/GUILDHOMEREMOVEITEM"
        }, {
          "$ref" : "#/components/schemas/HARMFULLINKSBLOCKEDMESSAGE"
        }, {
          "$ref" : "#/components/schemas/HOMESETTINGSCREATE"
        }, {
          "$ref" : "#/components/schemas/HOMESETTINGSUPDATE"
        }, {
          "$ref" : "#/components/schemas/VOICECHANNELSTATUSCREATE"
        }, {
          "$ref" : "#/components/schemas/VOICECHANNELSTATUSDELETE"
        } ]
      },
      "EntitlementResponse" : {
        "title" : "EntitlementResponse",
        "required" : [ "application_id", "deleted", "id", "sku_id", "type", "user_id" ],
        "type" : "object",
        "properties" : {
          "fulfilled_at" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "fulfilledAt"
          },
          "consumed" : {
            "type" : "boolean",
            "nullable" : true
          },
          "starts_at" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "startsAt"
          },
          "deleted" : {
            "type" : "boolean"
          },
          "fulfillment_status" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/EntitlementTenantFulfillmentStatusResponse"
              } ]
            }, { } ],
            "x-ballerina-name" : "fulfillmentStatus"
          },
          "user_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "userId"
          },
          "guild_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "guildId"
          },
          "sku_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "skuId"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "ends_at" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "endsAt"
          },
          "type" : {
            "$ref" : "#/components/schemas/EntitlementTypes"
          },
          "application_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "applicationId"
          }
        }
      },
      "ForumTagResponse" : {
        "title" : "ForumTagResponse",
        "required" : [ "id", "moderated", "name" ],
        "type" : "object",
        "properties" : {
          "moderated" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "emoji_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "emojiId"
          },
          "emoji_name" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "emojiName"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }
      },
      "SUBCOMMANDGROUP" : {
        "title" : "SUB_COMMAND_GROUP",
        "type" : "integer",
        "description" : "A group of subcommands",
        "enum" : [ 2 ]
      },
      "HIGH" : {
        "title" : "HIGH",
        "type" : "integer",
        "description" : "must be a member of the server for longer than 10 minutes",
        "enum" : [ 3 ]
      },
      "TextStyleTypes" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/SHORT"
        }, {
          "$ref" : "#/components/schemas/PARAGRAPH"
        } ]
      },
      "REDDIT" : {
        "title" : "REDDIT",
        "type" : "string",
        "enum" : [ "reddit" ]
      },
      "STEAM" : {
        "title" : "STEAM",
        "type" : "string",
        "enum" : [ "steam" ]
      },
      "UNFULFILLMENTFAILED" : {
        "title" : "UNFULFILLMENT_FAILED",
        "type" : "integer",
        "enum" : [ 7 ]
      },
      "THIRTYDAYS" : {
        "title" : "THIRTY_DAYS",
        "type" : "integer",
        "description" : "30 days",
        "enum" : [ 30 ]
      },
      "APPLICATIONCOMMANDAUTOCOMPLETE" : {
        "title" : "APPLICATION_COMMAND_AUTOCOMPLETE",
        "type" : "integer",
        "description" : "Sent when a user is filling in an autocomplete option in a chat command",
        "enum" : [ 4 ]
      },
      "GuildsEmojisRequestRoles" : {
        "pattern" : "^(0|[1-9][0-9]*)$",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/RolesOneOf11"
        }, {
          "$ref" : "#/components/schemas/RolesRolesOneOf112"
        } ]
      },
      "ApplicationCommandSubcommandOptionResponse" : {
        "title" : "ApplicationCommandSubcommandOptionResponse",
        "required" : [ "description", "name", "type" ],
        "type" : "object",
        "properties" : {
          "name_localized" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "nameLocalized"
          },
          "name_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "nameLocalizations"
          },
          "name" : {
            "type" : "string"
          },
          "options" : {
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ApplicationCommandSubcommandOptionResponseOptions"
            }
          },
          "description" : {
            "type" : "string"
          },
          "description_localized" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalized"
          },
          "description_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalizations"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 1 ]
          },
          "required" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "GuildPatchRequestPartial" : {
        "title" : "GuildPatchRequestPartial",
        "type" : "object",
        "properties" : {
          "preferred_locale" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/AvailableLocalesEnum"
              } ]
            }, { } ],
            "x-ballerina-name" : "preferredLocale"
          },
          "default_message_notifications" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/UserNotificationSettings"
              } ]
            }, { } ],
            "x-ballerina-name" : "defaultMessageNotifications"
          },
          "owner_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "ownerId"
          },
          "system_channel_flags" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "systemChannelFlags"
          },
          "premium_progress_bar_enabled" : {
            "type" : "boolean",
            "nullable" : true,
            "x-ballerina-name" : "premiumProgressBarEnabled"
          },
          "icon" : {
            "type" : "string",
            "format" : "binary",
            "nullable" : true
          },
          "description" : {
            "maxLength" : 120,
            "minLength" : 0,
            "type" : "string",
            "nullable" : true
          },
          "system_channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "systemChannelId"
          },
          "banner" : {
            "type" : "string",
            "format" : "binary",
            "nullable" : true
          },
          "rules_channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "rulesChannelId"
          },
          "afk_timeout" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/AfkTimeouts"
              } ]
            }, { } ],
            "x-ballerina-name" : "afkTimeout"
          },
          "public_updates_channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "publicUpdatesChannelId"
          },
          "features" : {
            "maxItems" : 1521,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "maxLength" : 152133,
              "type" : "string",
              "nullable" : true
            }
          },
          "home_header" : {
            "type" : "string",
            "format" : "binary",
            "nullable" : true,
            "x-ballerina-name" : "homeHeader"
          },
          "verification_level" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/VerificationLevels"
              } ]
            }, { } ],
            "x-ballerina-name" : "verificationLevel"
          },
          "explicit_content_filter" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/GuildExplicitContentFilterTypes"
              } ]
            }, { } ],
            "x-ballerina-name" : "explicitContentFilter"
          },
          "discovery_splash" : {
            "type" : "string",
            "format" : "binary",
            "nullable" : true,
            "x-ballerina-name" : "discoverySplash"
          },
          "afk_channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "afkChannelId"
          },
          "name" : {
            "maxLength" : 100,
            "minLength" : 2,
            "type" : "string"
          },
          "region" : {
            "type" : "string",
            "nullable" : true
          },
          "splash" : {
            "type" : "string",
            "format" : "binary",
            "nullable" : true
          },
          "safety_alerts_channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "safetyAlertsChannelId"
          }
        }
      },
      "MEMBERDISCONNECT" : {
        "title" : "MEMBER_DISCONNECT",
        "type" : "integer",
        "enum" : [ 27 ]
      },
      "EXPLICIT" : {
        "title" : "EXPLICIT",
        "type" : "integer",
        "enum" : [ 1 ]
      },
      "CreateForumThreadRequest" : {
        "title" : "CreateForumThreadRequest",
        "required" : [ "message", "name" ],
        "type" : "object",
        "properties" : {
          "rate_limit_per_user" : {
            "maximum" : 21600.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "rateLimitPerUser"
          },
          "name" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "message" : {
            "$ref" : "#/components/schemas/BaseCreateMessageCreateRequest"
          },
          "auto_archive_duration" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ThreadAutoArchiveDuration"
              } ]
            }, { } ],
            "x-ballerina-name" : "autoArchiveDuration"
          },
          "applied_tags" : {
            "maxItems" : 5,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "appliedTags"
          }
        }
      },
      "FIVEMINUTES" : {
        "title" : "FIVE_MINUTES",
        "type" : "integer",
        "enum" : [ 300 ]
      },
      "STICKERDELETE" : {
        "title" : "STICKER_DELETE",
        "type" : "integer",
        "enum" : [ 92 ]
      },
      "OAuth2Key" : {
        "title" : "OAuth2Key",
        "required" : [ "alg", "e", "kid", "kty", "n", "use" ],
        "type" : "object",
        "properties" : {
          "kty" : {
            "type" : "string"
          },
          "e" : {
            "type" : "string"
          },
          "use" : {
            "type" : "string"
          },
          "kid" : {
            "type" : "string"
          },
          "alg" : {
            "type" : "string"
          },
          "n" : {
            "type" : "string"
          }
        }
      },
      "MessageComponentTypes" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ACTIONROW1"
        }, {
          "$ref" : "#/components/schemas/BUTTON1"
        }, {
          "$ref" : "#/components/schemas/STRINGSELECT1"
        }, {
          "$ref" : "#/components/schemas/INPUTTEXT1"
        }, {
          "$ref" : "#/components/schemas/USERSELECT1"
        }, {
          "$ref" : "#/components/schemas/ROLESELECT1"
        }, {
          "$ref" : "#/components/schemas/MENTIONABLESELECT1"
        }, {
          "$ref" : "#/components/schemas/CHANNELSELECT1"
        } ]
      },
      "QuarantineUserAction" : {
        "title" : "QuarantineUserAction",
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "oneOf" : [ {
              "type" : "object"
            }, {
              "nullable" : true
            } ]
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 4 ]
          }
        }
      },
      "ApplicationCommandPatchRequestPartial" : {
        "title" : "ApplicationCommandPatchRequestPartial",
        "type" : "object",
        "properties" : {
          "name_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "nameLocalizations"
          },
          "dm_permission" : {
            "type" : "boolean",
            "nullable" : true,
            "x-ballerina-name" : "dmPermission"
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 1,
            "type" : "string"
          },
          "options" : {
            "maxItems" : 25,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ApplicationCommandPatchRequestPartialOptions"
            }
          },
          "description" : {
            "maxLength" : 100,
            "type" : "string",
            "nullable" : true
          },
          "description_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalizations"
          },
          "default_member_permissions" : {
            "maximum" : 2251799813685247,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "defaultMemberPermissions"
          }
        }
      },
      "FULFILLMENTNEEDED" : {
        "title" : "FULFILLMENT_NEEDED",
        "type" : "integer",
        "enum" : [ 2 ]
      },
      "LOTTIE" : {
        "title" : "LOTTIE",
        "type" : "integer",
        "enum" : [ 3 ]
      },
      "SOUNDBOARDSOUNDCREATE" : {
        "title" : "SOUNDBOARD_SOUND_CREATE",
        "type" : "integer",
        "enum" : [ 130 ]
      },
      "TICKETEDEVENTSENABLED" : {
        "title" : "TICKETED_EVENTS_ENABLED",
        "type" : "string",
        "description" : "guild has enabled ticketed events",
        "enum" : [ "TICKETED_EVENTS_ENABLED" ]
      },
      "AUTO" : {
        "title" : "AUTO",
        "type" : "integer",
        "description" : "Discord chooses the quality for optimal performance",
        "enum" : [ 1 ]
      },
      "RichEmbed1" : {
        "title" : "RichEmbed1",
        "type" : "object",
        "properties" : {
          "image" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/RichEmbedImage"
            } ]
          },
          "thumbnail" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/RichEmbedThumbnail"
            } ]
          },
          "color" : {
            "maximum" : 16777215,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "footer" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/RichEmbedFooter"
            } ]
          },
          "author" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/RichEmbedAuthor"
            } ]
          },
          "description" : {
            "maxLength" : 4096,
            "type" : "string",
            "nullable" : true
          },
          "video" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/RichEmbedVideo"
            } ]
          },
          "type" : {
            "maxLength" : 152133,
            "type" : "string",
            "nullable" : true
          },
          "title" : {
            "maxLength" : 256,
            "type" : "string",
            "nullable" : true
          },
          "url" : {
            "maxLength" : 2048,
            "type" : "string",
            "nullable" : true
          },
          "provider" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/RichEmbedProvider"
            } ]
          },
          "fields" : {
            "maxItems" : 25,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/RichEmbedField"
            }
          },
          "timestamp" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          }
        }
      },
      "EBAY" : {
        "title" : "EBAY",
        "type" : "string",
        "enum" : [ "ebay" ]
      },
      "GuildScheduledEventPrivacyLevels" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/GUILDONLY"
        } ]
      },
      "OAuth2GetKeys" : {
        "title" : "OAuth2GetKeys",
        "required" : [ "keys" ],
        "type" : "object",
        "properties" : {
          "keys" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/OAuth2Key"
            }
          }
        }
      },
      "USERJOIN" : {
        "title" : "USER_JOIN",
        "type" : "integer",
        "enum" : [ 7 ]
      },
      "RPC" : {
        "title" : "RPC",
        "type" : "string",
        "description" : "for local rpc server access, this allows you to control a user's local Discord client - requires Discord approval",
        "enum" : [ "rpc" ]
      },
      "ThreadsResponse" : {
        "title" : "ThreadsResponse",
        "required" : [ "members", "threads" ],
        "type" : "object",
        "properties" : {
          "members" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/ThreadMemberResponse"
            }
          },
          "threads" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/ThreadResponse"
            }
          },
          "has_more" : {
            "type" : "boolean",
            "nullable" : true,
            "x-ballerina-name" : "hasMore"
          }
        }
      },
      "InlineResponse200" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/PrivateChannelResponse"
        }, {
          "$ref" : "#/components/schemas/PrivateGroupChannelResponse"
        } ]
      },
      "GuildsMembersRequest1Roles" : {
        "pattern" : "^(0|[1-9][0-9]*)$",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/RolesOneOf14"
        }, {
          "$ref" : "#/components/schemas/RolesRolesOneOf142"
        } ]
      },
      "200OneOf43" : {
        "nullable" : true
      },
      "RichEmbedVideo" : {
        "title" : "RichEmbedVideo",
        "type" : "object",
        "properties" : {
          "width" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "placeholder_version" : {
            "maximum" : 2147483647,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "placeholderVersion"
          },
          "placeholder" : {
            "maxLength" : 64,
            "type" : "string",
            "nullable" : true
          },
          "url" : {
            "maxLength" : 2048,
            "type" : "string",
            "nullable" : true
          },
          "height" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "200OneOf42" : {
        "nullable" : true
      },
      "200OneOf41" : {
        "nullable" : true
      },
      "WidgetResponse" : {
        "title" : "WidgetResponse",
        "required" : [ "channels", "id", "members", "name", "presence_count" ],
        "type" : "object",
        "properties" : {
          "channels" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/WidgetChannel"
            }
          },
          "members" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/WidgetMember"
            }
          },
          "name" : {
            "type" : "string"
          },
          "presence_count" : {
            "type" : "integer",
            "format" : "int32",
            "x-ballerina-name" : "presenceCount"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "instant_invite" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "instantInvite"
          }
        }
      },
      "THREADDELETE" : {
        "title" : "THREAD_DELETE",
        "type" : "integer",
        "enum" : [ 112 ]
      },
      "EsES" : {
        "title" : "es-ES",
        "type" : "string",
        "description" : "The es-ES locale",
        "enum" : [ "es-ES" ]
      },
      "ROLESELECT1" : {
        "title" : "ROLE_SELECT1",
        "type" : "integer",
        "description" : "Select menu for roles",
        "enum" : [ 6 ]
      },
      "GatewayResponse" : {
        "title" : "GatewayResponse",
        "required" : [ "url" ],
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "string"
          }
        }
      },
      "DANGER" : {
        "title" : "DANGER",
        "type" : "integer",
        "enum" : [ 4 ]
      },
      "MLSpamUpsertRequestPartial" : {
        "title" : "MLSpamUpsertRequestPartial",
        "type" : "object",
        "properties" : {
          "event_type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AutomodEventType"
            } ],
            "x-ballerina-name" : "eventType"
          },
          "trigger_type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AutomodTriggerType"
            } ],
            "x-ballerina-name" : "triggerType"
          },
          "name" : {
            "maxLength" : 100,
            "type" : "string"
          },
          "exempt_roles" : {
            "maxItems" : 20,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "exemptRoles"
          },
          "exempt_channels" : {
            "maxItems" : 50,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "exemptChannels"
          },
          "actions" : {
            "maxItems" : 5,
            "minItems" : 1,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/MLSpamUpsertRequestPartialActions"
            }
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "trigger_metadata" : {
            "oneOf" : [ {
              "type" : "object"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "triggerMetadata"
          }
        }
      },
      "SelectOption1" : {
        "title" : "SelectOption1",
        "required" : [ "label", "value" ],
        "type" : "object",
        "properties" : {
          "default" : {
            "type" : "boolean",
            "nullable" : true
          },
          "emoji" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Emoji"
            } ]
          },
          "description" : {
            "maxLength" : 100,
            "type" : "string",
            "nullable" : true
          },
          "label" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "value" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          }
        }
      },
      "ExternalConnectionIntegrationResponse" : {
        "title" : "ExternalConnectionIntegrationResponse",
        "required" : [ "id", "type", "user" ],
        "type" : "object",
        "properties" : {
          "syncing" : {
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/IntegrationTypes"
          },
          "revoked" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "expire_behavior" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/IntegrationExpireBehaviorTypes"
              } ]
            }, { } ],
            "x-ballerina-name" : "expireBehavior"
          },
          "expire_grace_period" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/IntegrationExpireGracePeriodTypes"
              } ]
            }, { } ],
            "x-ballerina-name" : "expireGracePeriod"
          },
          "role_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "roleId"
          },
          "subscriber_count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "subscriberCount"
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/UserResponse"
          },
          "account" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/AccountResponse"
            }, {
              "nullable" : true
            } ]
          },
          "enable_emoticons" : {
            "type" : "boolean",
            "nullable" : true,
            "x-ballerina-name" : "enableEmoticons"
          },
          "synced_at" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "syncedAt"
          }
        }
      },
      "MentionSpamUpsertRequestPartialActions" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/BlockMessageAction"
        }, {
          "$ref" : "#/components/schemas/FlagToChannelAction"
        }, {
          "$ref" : "#/components/schemas/QuarantineUserAction"
        }, {
          "$ref" : "#/components/schemas/UserCommunicationDisabledAction"
        }, {
          "$ref" : "#/components/schemas/ActionsOneOf57"
        } ]
      },
      "MentionSpamTriggerMetadataResponse" : {
        "title" : "MentionSpamTriggerMetadataResponse",
        "required" : [ "mention_total_limit" ],
        "type" : "object",
        "properties" : {
          "mention_total_limit" : {
            "type" : "integer",
            "format" : "int32",
            "x-ballerina-name" : "mentionTotalLimit"
          }
        }
      },
      "GUILDBOOST" : {
        "title" : "GUILD_BOOST",
        "type" : "integer",
        "enum" : [ 8 ]
      },
      "PREMIUM" : {
        "title" : "PREMIUM",
        "type" : "integer",
        "enum" : [ 6 ]
      },
      "MessageComponentActionRowResponse" : {
        "title" : "MessageComponentActionRowResponse",
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "components" : {
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/MessageComponentActionRowResponseComponents"
            }
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 1 ]
          }
        }
      },
      "Error" : {
        "title" : "Error",
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "description" : "Discord internal error code. See error code reference",
            "format" : "int32"
          },
          "message" : {
            "type" : "string",
            "description" : "Human-readable error message"
          }
        },
        "description" : "A single error, either for an API response or a specific field"
      },
      "GuildWithCountsResponse" : {
        "title" : "GuildWithCountsResponse",
        "required" : [ "afk_timeout", "default_message_notifications", "emojis", "explicit_content_filter", "features", "id", "mfa_level", "name", "nsfw", "nsfw_level", "owner_id", "preferred_locale", "premium_progress_bar_enabled", "premium_subscription_count", "premium_tier", "region", "roles", "stickers", "system_channel_flags", "verification_level", "widget_enabled" ],
        "type" : "object",
        "properties" : {
          "max_stage_video_channel_users" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxStageVideoChannelUsers"
          },
          "preferred_locale" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AvailableLocalesEnum"
            } ],
            "x-ballerina-name" : "preferredLocale"
          },
          "approximate_presence_count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "approximatePresenceCount"
          },
          "default_message_notifications" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserNotificationSettings"
            } ],
            "x-ballerina-name" : "defaultMessageNotifications"
          },
          "owner_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "ownerId"
          },
          "widget_channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "widgetChannelId"
          },
          "roles" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/GuildRoleResponse"
            }
          },
          "icon" : {
            "type" : "string",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "system_channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "systemChannelId"
          },
          "rules_channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "rulesChannelId"
          },
          "afk_timeout" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AfkTimeouts"
            } ],
            "x-ballerina-name" : "afkTimeout"
          },
          "features" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/GuildFeatures"
            }
          },
          "afk_channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "afkChannelId"
          },
          "approximate_member_count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "approximateMemberCount"
          },
          "max_members" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxMembers"
          },
          "stickers" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/GuildStickerResponse"
            }
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "widget_enabled" : {
            "type" : "boolean",
            "x-ballerina-name" : "widgetEnabled"
          },
          "max_video_channel_users" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxVideoChannelUsers"
          },
          "nsfw_level" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/GuildNSFWContentLevel"
            } ],
            "x-ballerina-name" : "nsfwLevel"
          },
          "safety_alerts_channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "safetyAlertsChannelId"
          },
          "emojis" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/EmojiResponse"
            }
          },
          "nsfw" : {
            "type" : "boolean"
          },
          "vanity_url_code" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "vanityUrlCode"
          },
          "system_channel_flags" : {
            "type" : "integer",
            "format" : "int32",
            "x-ballerina-name" : "systemChannelFlags"
          },
          "max_presences" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxPresences"
          },
          "premium_progress_bar_enabled" : {
            "type" : "boolean",
            "x-ballerina-name" : "premiumProgressBarEnabled"
          },
          "banner" : {
            "type" : "string",
            "nullable" : true
          },
          "premium_subscription_count" : {
            "type" : "integer",
            "format" : "int32",
            "x-ballerina-name" : "premiumSubscriptionCount"
          },
          "public_updates_channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "publicUpdatesChannelId"
          },
          "application_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "applicationId"
          },
          "home_header" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "homeHeader"
          },
          "verification_level" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/VerificationLevels"
            } ],
            "x-ballerina-name" : "verificationLevel"
          },
          "discovery_splash" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "discoverySplash"
          },
          "explicit_content_filter" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/GuildExplicitContentFilterTypes"
            } ],
            "x-ballerina-name" : "explicitContentFilter"
          },
          "name" : {
            "type" : "string"
          },
          "mfa_level" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/GuildMFALevel"
            } ],
            "x-ballerina-name" : "mfaLevel"
          },
          "premium_tier" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PremiumGuildTiers"
            } ],
            "x-ballerina-name" : "premiumTier"
          },
          "region" : {
            "type" : "string"
          },
          "splash" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "VoiceRegionResponse" : {
        "title" : "VoiceRegionResponse",
        "required" : [ "custom", "deprecated", "id", "name", "optimal" ],
        "type" : "object",
        "properties" : {
          "optimal" : {
            "type" : "boolean"
          },
          "custom" : {
            "type" : "boolean"
          },
          "deprecated" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          }
        }
      },
      "VOICE" : {
        "title" : "VOICE",
        "type" : "string",
        "description" : "allows your app to connect to voice on user's behalf and see all the voice members - requires Discord approval",
        "enum" : [ "voice" ]
      },
      "MentionableSelect" : {
        "title" : "MentionableSelect",
        "required" : [ "custom_id", "type" ],
        "type" : "object",
        "properties" : {
          "default_values" : {
            "maxItems" : 25,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/MentionableSelectDefaultValues"
            },
            "x-ballerina-name" : "defaultValues"
          },
          "min_values" : {
            "maximum" : 25.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "minValues"
          },
          "custom_id" : {
            "maxLength" : 100,
            "type" : "string",
            "x-ballerina-name" : "customId"
          },
          "max_values" : {
            "maximum" : 25.0,
            "minimum" : 1.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxValues"
          },
          "disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "placeholder" : {
            "maxLength" : 150,
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 7 ]
          }
        }
      },
      "APPLICATIONSENTITLEMENTS" : {
        "title" : "APPLICATIONS_ENTITLEMENTS",
        "type" : "string",
        "description" : "allows your app to read entitlements for a user's applications",
        "enum" : [ "applications.entitlements" ]
      },
      "ApplicationCommandOptionStringChoice" : {
        "title" : "ApplicationCommandOptionStringChoice",
        "required" : [ "name", "value" ],
        "type" : "object",
        "properties" : {
          "name_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "nameLocalizations"
          },
          "name" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "value" : {
            "maxLength" : 6000,
            "type" : "string"
          }
        }
      },
      "ApplicationCommandStringOption" : {
        "title" : "ApplicationCommandStringOption",
        "required" : [ "description", "name", "type" ],
        "type" : "object",
        "properties" : {
          "name_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "nameLocalizations"
          },
          "autocomplete" : {
            "type" : "boolean",
            "nullable" : true
          },
          "min_length" : {
            "maximum" : 6000.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "minLength"
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 1,
            "type" : "string"
          },
          "description" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "description_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalizations"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 3 ]
          },
          "choices" : {
            "maxItems" : 25,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ApplicationCommandOptionStringChoice"
            }
          },
          "required" : {
            "type" : "boolean",
            "nullable" : true
          },
          "max_length" : {
            "maximum" : 6000.0,
            "minimum" : 1.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxLength"
          }
        }
      },
      "GUILDPRODUCT" : {
        "title" : "GUILD_PRODUCT",
        "type" : "integer",
        "enum" : [ 0 ]
      },
      "GUILDONLY" : {
        "title" : "GUILD_ONLY",
        "type" : "integer",
        "description" : "the scheduled event is only accessible to guild members",
        "enum" : [ 2 ]
      },
      "SettingsEmojiResponse" : {
        "title" : "SettingsEmojiResponse",
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "animated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ]
          }
        }
      },
      "PNG" : {
        "title" : "PNG",
        "type" : "integer",
        "enum" : [ 1 ]
      },
      "ApplicationCommandRoleOptionResponse" : {
        "title" : "ApplicationCommandRoleOptionResponse",
        "required" : [ "description", "name", "type" ],
        "type" : "object",
        "properties" : {
          "name_localized" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "nameLocalized"
          },
          "name_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "nameLocalizations"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "description_localized" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalized"
          },
          "description_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalizations"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 8 ]
          },
          "required" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "STAGEINSTANCE" : {
        "title" : "STAGE_INSTANCE",
        "type" : "integer",
        "enum" : [ 1 ]
      },
      "QuarantineUserActionResponse" : {
        "title" : "QuarantineUserActionResponse",
        "required" : [ "metadata", "type" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "type" : "object"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 4 ]
          }
        }
      },
      "MENTIONABLE" : {
        "title" : "MENTIONABLE",
        "type" : "integer",
        "description" : "A snowflake option that represents anything you can mention",
        "enum" : [ 9 ]
      },
      "EntitlementTypes" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/APPLICATIONSUBSCRIPTION"
        }, {
          "$ref" : "#/components/schemas/QUESTREWARD"
        } ]
      },
      "MessageComponentRoleSelectResponse" : {
        "title" : "MessageComponentRoleSelectResponse",
        "required" : [ "custom_id", "id", "type" ],
        "type" : "object",
        "properties" : {
          "min_values" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "minValues"
          },
          "custom_id" : {
            "type" : "string",
            "x-ballerina-name" : "customId"
          },
          "max_values" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxValues"
          },
          "disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "placeholder" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 6 ]
          }
        }
      },
      "RELATIONSHIPSREAD" : {
        "title" : "RELATIONSHIPS_READ",
        "type" : "string",
        "description" : "allows your app to know a user's friends and implicit relationships - requires Discord approval",
        "enum" : [ "relationships.read" ]
      },
      "EVERYONE" : {
        "title" : "EVERYONE",
        "type" : "string",
        "description" : "Controls @everyone and @here mentions",
        "enum" : [ "everyone" ]
      },
      "AUTOMODERATIONRULECREATE" : {
        "title" : "AUTO_MODERATION_RULE_CREATE",
        "type" : "integer",
        "enum" : [ 140 ]
      },
      "IntegrationApplicationResponse" : {
        "title" : "IntegrationApplicationResponse",
        "required" : [ "description", "id", "name" ],
        "type" : "object",
        "properties" : {
          "bot" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/UserResponse"
            }, {
              "nullable" : true
            } ]
          },
          "name" : {
            "type" : "string"
          },
          "icon" : {
            "type" : "string",
            "nullable" : true
          },
          "description" : {
            "type" : "string"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "cover_image" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "coverImage"
          },
          "primary_sku_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "primarySkuId"
          },
          "type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ApplicationTypes"
              } ]
            }, { } ]
          }
        }
      },
      "RichEmbedImage" : {
        "title" : "RichEmbedImage",
        "type" : "object",
        "properties" : {
          "width" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "placeholder_version" : {
            "maximum" : 2147483647,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "placeholderVersion"
          },
          "placeholder" : {
            "maxLength" : 64,
            "type" : "string",
            "nullable" : true
          },
          "url" : {
            "maxLength" : 2048,
            "type" : "string",
            "nullable" : true
          },
          "height" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "CONNECTIONS" : {
        "title" : "CONNECTIONS",
        "type" : "string",
        "description" : "allows /users/@me/connections to return linked third-party accounts",
        "enum" : [ "connections" ]
      },
      "MessageReactionCountDetailsResponse" : {
        "title" : "MessageReactionCountDetailsResponse",
        "required" : [ "burst", "normal" ],
        "type" : "object",
        "properties" : {
          "normal" : {
            "type" : "integer",
            "format" : "int32"
          },
          "burst" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "UpdateThreadTagRequest" : {
        "title" : "UpdateThreadTagRequest",
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "moderated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string"
          },
          "emoji_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "emojiId"
          },
          "emoji_name" : {
            "maxLength" : 100,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "emojiName"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ]
          }
        }
      },
      "CHANNEL" : {
        "title" : "CHANNEL",
        "type" : "integer",
        "description" : "A snowflake option that represents a Channel. Includes all channel types and categories",
        "enum" : [ 7 ]
      },
      "CHANNELOVERWRITEDELETE" : {
        "title" : "CHANNEL_OVERWRITE_DELETE",
        "type" : "integer",
        "enum" : [ 15 ]
      },
      "ONEHOUR1" : {
        "title" : "ONE_HOUR1",
        "type" : "integer",
        "description" : "One hour",
        "enum" : [ 60 ]
      },
      "CHANNELUPDATE" : {
        "title" : "CHANNEL_UPDATE",
        "type" : "integer",
        "enum" : [ 11 ]
      },
      "UpdateDefaultReactionEmojiRequest" : {
        "title" : "UpdateDefaultReactionEmojiRequest",
        "type" : "object",
        "properties" : {
          "emoji_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "emojiId"
          },
          "emoji_name" : {
            "maxLength" : 100,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "emojiName"
          }
        }
      },
      "GUILDROLESUBSCRIPTIONS" : {
        "title" : "GUILD_ROLE_SUBSCRIPTIONS",
        "type" : "integer",
        "enum" : [ 4 ]
      },
      "InteractionApplicationCommandAutocompleteCallbackIntegerDataChoices" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ApplicationCommandOptionIntegerChoice"
        }, {
          "$ref" : "#/components/schemas/ChoicesOneOf2"
        } ]
      },
      "MessageReferenceResponse" : {
        "title" : "MessageReferenceResponse",
        "required" : [ "channel_id" ],
        "type" : "object",
        "properties" : {
          "guild_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "guildId"
          },
          "message_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "messageId"
          },
          "type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/MessageReferenceType"
              } ]
            }, { } ]
          },
          "channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "channelId"
          }
        }
      },
      "ErrorDetails" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ErrorDetailsOneOf1"
        }, {
          "$ref" : "#/components/schemas/InnerErrors"
        } ]
      },
      "APPLICATIONCOMMANDPERMISSIONUPDATE" : {
        "title" : "APPLICATION_COMMAND_PERMISSION_UPDATE",
        "type" : "integer",
        "enum" : [ 121 ]
      },
      "AvailableTagsOneOf2" : {
        "nullable" : true
      },
      "TIER1" : {
        "title" : "TIER_1",
        "type" : "integer",
        "description" : "Guild has unlocked Server Boost level 1 perks",
        "enum" : [ 1 ]
      },
      "TIER0" : {
        "title" : "TIER_0",
        "type" : "integer",
        "description" : "Nitro Basic",
        "enum" : [ 3 ]
      },
      "RulesruleIdBody" : {
        "anyOf" : [ {
          "$ref" : "#/components/schemas/DefaultKeywordListUpsertRequestPartial"
        }, {
          "$ref" : "#/components/schemas/KeywordUpsertRequestPartial"
        }, {
          "$ref" : "#/components/schemas/MLSpamUpsertRequestPartial"
        }, {
          "$ref" : "#/components/schemas/MentionSpamUpsertRequestPartial"
        } ]
      },
      "TIER3" : {
        "title" : "TIER_3",
        "type" : "integer",
        "description" : "Guild has unlocked Server Boost level 3 perks",
        "enum" : [ 3 ]
      },
      "TIER2" : {
        "title" : "TIER_2",
        "type" : "integer",
        "description" : "Guild has unlocked Server Boost level 2 perks",
        "enum" : [ 2 ]
      },
      "UsersOneOf1" : {
        "pattern" : "^(0|[1-9][0-9]*)$",
        "type" : "string"
      },
      "WELCOMESCREENENABLED" : {
        "title" : "WELCOME_SCREEN_ENABLED",
        "type" : "string",
        "description" : "guild has enabled the welcome screen",
        "enum" : [ "WELCOME_SCREEN_ENABLED" ]
      },
      "STICKERUPDATE" : {
        "title" : "STICKER_UPDATE",
        "type" : "integer",
        "enum" : [ 91 ]
      },
      "VOICE1" : {
        "title" : "VOICE1",
        "type" : "integer",
        "enum" : [ 2 ]
      },
      "REPLY" : {
        "title" : "REPLY",
        "type" : "integer",
        "enum" : [ 19 ]
      },
      "MentionChannelsOneOf2" : {
        "nullable" : true
      },
      "AutomodActionType" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/BLOCKMESSAGE"
        }, {
          "$ref" : "#/components/schemas/FLAGTOCHANNEL"
        }, {
          "$ref" : "#/components/schemas/USERCOMMUNICATIONDISABLED"
        }, {
          "$ref" : "#/components/schemas/QUARANTINEUSER"
        } ]
      },
      "STRING" : {
        "title" : "STRING",
        "type" : "integer",
        "description" : "A string option",
        "enum" : [ 3 ]
      },
      "ApplicationCommandResponse" : {
        "title" : "ApplicationCommandResponse",
        "required" : [ "application_id", "description", "id", "name", "type", "version" ],
        "type" : "object",
        "properties" : {
          "name_localized" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "nameLocalized"
          },
          "name_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "nameLocalizations"
          },
          "nsfw" : {
            "type" : "boolean",
            "nullable" : true
          },
          "description" : {
            "type" : "string"
          },
          "description_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalizations"
          },
          "type" : {
            "$ref" : "#/components/schemas/ApplicationCommandType"
          },
          "application_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "applicationId"
          },
          "version" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "dm_permission" : {
            "type" : "boolean",
            "nullable" : true,
            "x-ballerina-name" : "dmPermission"
          },
          "name" : {
            "type" : "string"
          },
          "guild_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "guildId"
          },
          "options" : {
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ApplicationCommandResponseOptions"
            }
          },
          "description_localized" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalized"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "default_member_permissions" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "defaultMemberPermissions"
          }
        }
      },
      "FACEBOOK" : {
        "title" : "FACEBOOK",
        "type" : "string",
        "enum" : [ "facebook" ]
      },
      "INVITEDELETE" : {
        "title" : "INVITE_DELETE",
        "type" : "integer",
        "enum" : [ 42 ]
      },
      "DefaultReactionEmojiResponse" : {
        "title" : "DefaultReactionEmojiResponse",
        "type" : "object",
        "properties" : {
          "emoji_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "emojiId"
          },
          "emoji_name" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "emojiName"
          }
        }
      },
      "ALLMESSAGES" : {
        "title" : "ALL_MESSAGES",
        "type" : "integer",
        "description" : "members will receive notifications for all messages by default",
        "enum" : [ 0 ]
      },
      "ApplicationCommandUpdateRequest" : {
        "title" : "ApplicationCommandUpdateRequest",
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "nameLocalizations"
          },
          "dm_permission" : {
            "type" : "boolean",
            "nullable" : true,
            "x-ballerina-name" : "dmPermission"
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 1,
            "type" : "string"
          },
          "options" : {
            "maxItems" : 25,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ApplicationCommandUpdateRequestOptions"
            }
          },
          "description" : {
            "maxLength" : 100,
            "type" : "string",
            "nullable" : true
          },
          "description_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalizations"
          },
          "default_member_permissions" : {
            "maximum" : 2251799813685247,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "defaultMemberPermissions"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ]
          },
          "type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ApplicationCommandType"
              } ]
            }, { } ]
          }
        }
      },
      "GUILDINCIDENTREPORTRAID" : {
        "title" : "GUILD_INCIDENT_REPORT_RAID",
        "type" : "integer",
        "enum" : [ 38 ]
      },
      "ONEMINUTE" : {
        "title" : "ONE_MINUTE",
        "type" : "integer",
        "enum" : [ 60 ]
      },
      "StickerPackResponse" : {
        "title" : "StickerPackResponse",
        "required" : [ "id", "name", "sku_id", "stickers" ],
        "type" : "object",
        "properties" : {
          "banner_asset_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "bannerAssetId"
          },
          "cover_sticker_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "coverStickerId"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "sku_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "skuId"
          },
          "stickers" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/StandardStickerResponse"
            }
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }
      },
      "GUILDVOICE" : {
        "title" : "GUILD_VOICE",
        "type" : "integer",
        "description" : "A voice channel within a server",
        "enum" : [ 2 ]
      },
      "GuildsVoiceStatesRequest" : {
        "title" : "GuildsVoiceStatesRequest",
        "type" : "object",
        "properties" : {
          "suppress" : {
            "type" : "boolean",
            "nullable" : true
          },
          "channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "channelId"
          }
        }
      },
      "ONBOARDINGPROMPTUPDATE" : {
        "title" : "ONBOARDING_PROMPT_UPDATE",
        "type" : "integer",
        "enum" : [ 164 ]
      },
      "MEMBERVERIFICATIONGATEENABLED" : {
        "title" : "MEMBER_VERIFICATION_GATE_ENABLED",
        "type" : "string",
        "description" : "guild has enabled Membership Screening",
        "enum" : [ "MEMBER_VERIFICATION_GATE_ENABLED" ]
      },
      "RECIPIENTADD" : {
        "title" : "RECIPIENT_ADD",
        "type" : "integer",
        "enum" : [ 1 ]
      },
      "MessageEmbedImageResponse" : {
        "title" : "MessageEmbedImageResponse",
        "type" : "object",
        "properties" : {
          "width" : {
            "maximum" : 4294967295,
            "minimum" : 0.0,
            "oneOf" : [ {
              "maximum" : 4294967295,
              "minimum" : 0.0,
              "type" : "integer",
              "format" : "int64"
            }, {
              "nullable" : true
            } ]
          },
          "placeholder_version" : {
            "maximum" : 4294967295,
            "minimum" : 0.0,
            "oneOf" : [ {
              "maximum" : 4294967295,
              "minimum" : 0.0,
              "type" : "integer",
              "format" : "int64"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "placeholderVersion"
          },
          "proxy_url" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "proxyUrl"
          },
          "placeholder" : {
            "type" : "string",
            "nullable" : true
          },
          "url" : {
            "type" : "string",
            "nullable" : true
          },
          "height" : {
            "maximum" : 4294967295,
            "minimum" : 0.0,
            "oneOf" : [ {
              "maximum" : 4294967295,
              "minimum" : 0.0,
              "type" : "integer",
              "format" : "int64"
            }, {
              "nullable" : true
            } ]
          }
        }
      },
      "ApplicationCommandSubcommandOptionResponseOptions" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ApplicationCommandAttachmentOptionResponse"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandBooleanOptionResponse"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandChannelOptionResponse"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandIntegerOptionResponse"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandMentionableOptionResponse"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandNumberOptionResponse"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandRoleOptionResponse"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandStringOptionResponse"
        }, {
          "$ref" : "#/components/schemas/ApplicationCommandUserOptionResponse"
        }, {
          "$ref" : "#/components/schemas/OptionsOneOf101"
        } ]
      },
      "UpdateGuildChannelRequestPartial" : {
        "title" : "UpdateGuildChannelRequestPartial",
        "type" : "object",
        "properties" : {
          "nsfw" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rate_limit_per_user" : {
            "maximum" : 21600.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "rateLimitPerUser"
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "bitrate" : {
            "minimum" : 8000.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ChannelTypes"
              } ]
            }, { } ]
          },
          "user_limit" : {
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "userLimit"
          },
          "permission_overwrites" : {
            "maxItems" : 100,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ChannelPermissionOverwriteRequest"
            },
            "x-ballerina-name" : "permissionOverwrites"
          },
          "rtc_region" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "rtcRegion"
          },
          "default_thread_rate_limit_per_user" : {
            "maximum" : 21600.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "defaultThreadRateLimitPerUser"
          },
          "default_auto_archive_duration" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ThreadAutoArchiveDuration"
              } ]
            }, { } ],
            "x-ballerina-name" : "defaultAutoArchiveDuration"
          },
          "parent_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "parentId"
          },
          "default_reaction_emoji" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/UpdateDefaultReactionEmojiRequest"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "defaultReactionEmoji"
          },
          "name" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "topic" : {
            "maxLength" : 4096,
            "minLength" : 0,
            "type" : "string",
            "nullable" : true
          },
          "default_forum_layout" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ForumLayout"
              } ]
            }, { } ],
            "x-ballerina-name" : "defaultForumLayout"
          },
          "position" : {
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "available_tags" : {
            "maxItems" : 20,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/UpdateThreadTagRequest"
            },
            "x-ballerina-name" : "availableTags"
          },
          "video_quality_mode" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/VideoQualityModes"
              } ]
            }, { } ],
            "x-ballerina-name" : "videoQualityMode"
          },
          "default_sort_order" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ThreadSortOrder"
              } ]
            }, { } ],
            "x-ballerina-name" : "defaultSortOrder"
          }
        }
      },
      "GuildTemplateChannelResponsePermissionOverwrites" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ChannelPermissionOverwriteResponse"
        } ]
      },
      "FlagToChannelActionMetadata1" : {
        "title" : "FlagToChannelActionMetadata1",
        "required" : [ "channel_id" ],
        "type" : "object",
        "properties" : {
          "duration_seconds" : {
            "maximum" : 2419200.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "durationSeconds"
          },
          "custom_message" : {
            "maxLength" : 150,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "customMessage"
          },
          "channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "channelId"
          }
        }
      },
      "NUMBER" : {
        "title" : "NUMBER",
        "type" : "integer",
        "description" : "A number option. Any double between -2^53 and 2^53 is a valid value",
        "enum" : [ 10 ]
      },
      "MessageResponse" : {
        "title" : "MessageResponse",
        "required" : [ "attachments", "author", "channel_id", "components", "content", "embeds", "flags", "id", "mention_everyone", "mention_roles", "mentions", "pinned", "timestamp", "tts", "type" ],
        "type" : "object",
        "properties" : {
          "mention_everyone" : {
            "type" : "boolean",
            "x-ballerina-name" : "mentionEveryone"
          },
          "components" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/BasicMessageResponseComponents"
            }
          },
          "pinned" : {
            "type" : "boolean"
          },
          "attachments" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/MessageAttachmentResponse"
            }
          },
          "activity" : {
            "oneOf" : [ {
              "type" : "object"
            }, {
              "nullable" : true
            } ]
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "$ref" : "#/components/schemas/MessageType"
          },
          "mention_roles" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "mentionRoles"
          },
          "content" : {
            "type" : "string"
          },
          "edited_timestamp" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "editedTimestamp"
          },
          "referenced_message" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/BasicMessageResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "referencedMessage"
          },
          "stickers" : {
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/MessageResponseStickers"
            }
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "message_reference" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MessageReferenceResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "messageReference"
          },
          "sticker_items" : {
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/MessageStickerItemResponse"
            },
            "x-ballerina-name" : "stickerItems"
          },
          "timestamp" : {
            "type" : "string",
            "format" : "date-time"
          },
          "resolved" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResolvedObjectsResponse"
            }, {
              "nullable" : true
            } ]
          },
          "role_subscription_data" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MessageRoleSubscriptionDataResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "roleSubscriptionData"
          },
          "author" : {
            "$ref" : "#/components/schemas/UserResponse"
          },
          "thread" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ThreadResponse"
            }, {
              "nullable" : true
            } ]
          },
          "application_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "applicationId"
          },
          "nonce" : {
            "oneOf" : [ {
              "maximum" : 9223372036854776000,
              "minimum" : -9223372036854776000,
              "type" : "integer",
              "format" : "int64"
            }, {
              "maxLength" : 25,
              "type" : "string"
            }, {
              "nullable" : true
            } ]
          },
          "call" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MessageCallResponse"
            }, {
              "nullable" : true
            } ]
          },
          "tts" : {
            "type" : "boolean"
          },
          "mention_channels" : {
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/MessageResponseMentionChannels"
            },
            "x-ballerina-name" : "mentionChannels"
          },
          "application" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/BasicApplicationResponse"
            }, {
              "nullable" : true
            } ]
          },
          "webhook_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "webhookId"
          },
          "mentions" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/UserResponse"
            }
          },
          "purchase_notification" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/PurchaseNotificationResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "purchaseNotification"
          },
          "interaction" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MessageInteractionResponse"
            }, {
              "nullable" : true
            } ]
          },
          "reactions" : {
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/MessageReactionResponse"
            }
          },
          "position" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "channelId"
          },
          "embeds" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/MessageEmbedResponse"
            }
          }
        }
      },
      "HARMFULLINKSBLOCKEDMESSAGE" : {
        "title" : "HARMFUL_LINKS_BLOCKED_MESSAGE",
        "type" : "integer",
        "enum" : [ 180 ]
      },
      "ApplicationCommandOptionIntegerChoice" : {
        "title" : "ApplicationCommandOptionIntegerChoice",
        "required" : [ "name", "value" ],
        "type" : "object",
        "properties" : {
          "name_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "nameLocalizations"
          },
          "name" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "value" : {
            "maximum" : 9007199254740991,
            "minimum" : -9007199254740991,
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "BOOLEAN" : {
        "title" : "BOOLEAN",
        "type" : "integer",
        "description" : "A boolean option",
        "enum" : [ 5 ]
      },
      "InteractionApplicationCommandAutocompleteCallbackNumberDataChoices" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ApplicationCommandOptionNumberChoice"
        }, {
          "$ref" : "#/components/schemas/ChoicesOneOf21"
        } ]
      },
      "PAYPAL" : {
        "title" : "PAYPAL",
        "type" : "string",
        "enum" : [ "paypal" ]
      },
      "GUILDUPDATE" : {
        "title" : "GUILD_UPDATE",
        "type" : "integer",
        "enum" : [ 1 ]
      },
      "WidgetUserDiscriminator" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ZEROES"
        } ]
      },
      "MESSAGECOMPONENT" : {
        "title" : "MESSAGE_COMPONENT",
        "type" : "integer",
        "description" : "Sent when a user interacts with a message component previously sent by your application",
        "enum" : [ 3 ]
      },
      "UserCommunicationDisabledAction" : {
        "title" : "UserCommunicationDisabledAction",
        "required" : [ "metadata", "type" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/UserCommunicationDisabledActionMetadata"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 3 ]
          }
        }
      },
      "ApplicationOAuth2InstallParamsResponse" : {
        "title" : "ApplicationOAuth2InstallParamsResponse",
        "required" : [ "permissions", "scopes" ],
        "type" : "object",
        "properties" : {
          "permissions" : {
            "type" : "string"
          },
          "scopes" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/OAuth2Scopes"
            }
          }
        }
      },
      "Action" : {
        "title" : "Action",
        "required" : [ "metadata", "type" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/BlockMessageActionMetadata"
            } ]
          },
          "type" : { }
        }
      },
      "PLAYSTATION" : {
        "title" : "PLAYSTATION",
        "type" : "string",
        "enum" : [ "playstation" ]
      },
      "InputText" : {
        "title" : "InputText",
        "required" : [ "custom_id", "label", "style", "type" ],
        "type" : "object",
        "properties" : {
          "min_length" : {
            "maximum" : 4000.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "minLength"
          },
          "custom_id" : {
            "maxLength" : 100,
            "type" : "string",
            "x-ballerina-name" : "customId"
          },
          "style" : {
            "$ref" : "#/components/schemas/TextStyleTypes"
          },
          "label" : {
            "maxLength" : 45,
            "type" : "string"
          },
          "placeholder" : {
            "maxLength" : 100,
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 4 ]
          },
          "value" : {
            "maxLength" : 4000,
            "type" : "string",
            "nullable" : true
          },
          "required" : {
            "type" : "boolean",
            "nullable" : true
          },
          "max_length" : {
            "maximum" : 4000.0,
            "minimum" : 1.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxLength"
          }
        }
      },
      "DefaultKeywordListUpsertRequestPartial" : {
        "title" : "DefaultKeywordListUpsertRequestPartial",
        "type" : "object",
        "properties" : {
          "event_type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AutomodEventType"
            } ],
            "x-ballerina-name" : "eventType"
          },
          "trigger_type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AutomodTriggerType"
            } ],
            "x-ballerina-name" : "triggerType"
          },
          "name" : {
            "maxLength" : 100,
            "type" : "string"
          },
          "exempt_roles" : {
            "maxItems" : 20,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "exemptRoles"
          },
          "exempt_channels" : {
            "maxItems" : 50,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "exemptChannels"
          },
          "actions" : {
            "maxItems" : 5,
            "minItems" : 1,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/DefaultKeywordListUpsertRequestPartialActions"
            }
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "trigger_metadata" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DefaultKeywordListTriggerMetadata"
            } ],
            "x-ballerina-name" : "triggerMetadata"
          }
        }
      },
      "OAuth2Scopes" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/IDENTIFY"
        }, {
          "$ref" : "#/components/schemas/EMAIL"
        }, {
          "$ref" : "#/components/schemas/CONNECTIONS"
        }, {
          "$ref" : "#/components/schemas/GUILDS"
        }, {
          "$ref" : "#/components/schemas/GUILDSJOIN"
        }, {
          "$ref" : "#/components/schemas/GUILDSMEMBERSREAD"
        }, {
          "$ref" : "#/components/schemas/GDMJOIN"
        }, {
          "$ref" : "#/components/schemas/BOT"
        }, {
          "$ref" : "#/components/schemas/RPC"
        }, {
          "$ref" : "#/components/schemas/RPCNOTIFICATIONSREAD"
        }, {
          "$ref" : "#/components/schemas/RPCVOICEREAD"
        }, {
          "$ref" : "#/components/schemas/RPCVOICEWRITE"
        }, {
          "$ref" : "#/components/schemas/RPCVIDEOREAD"
        }, {
          "$ref" : "#/components/schemas/RPCVIDEOWRITE"
        }, {
          "$ref" : "#/components/schemas/RPCSCREENSHAREREAD"
        }, {
          "$ref" : "#/components/schemas/RPCSCREENSHAREWRITE"
        }, {
          "$ref" : "#/components/schemas/RPCACTIVITIESWRITE"
        }, {
          "$ref" : "#/components/schemas/WEBHOOKINCOMING"
        }, {
          "$ref" : "#/components/schemas/MESSAGESREAD"
        }, {
          "$ref" : "#/components/schemas/APPLICATIONSBUILDSUPLOAD"
        }, {
          "$ref" : "#/components/schemas/APPLICATIONSBUILDSREAD"
        }, {
          "$ref" : "#/components/schemas/APPLICATIONSCOMMANDS"
        }, {
          "$ref" : "#/components/schemas/APPLICATIONSCOMMANDSPERMISSIONSUPDATE"
        }, {
          "$ref" : "#/components/schemas/APPLICATIONSCOMMANDSUPDATE"
        }, {
          "$ref" : "#/components/schemas/APPLICATIONSSTOREUPDATE"
        }, {
          "$ref" : "#/components/schemas/APPLICATIONSENTITLEMENTS"
        }, {
          "$ref" : "#/components/schemas/ACTIVITIESREAD"
        }, {
          "$ref" : "#/components/schemas/ACTIVITIESWRITE"
        }, {
          "$ref" : "#/components/schemas/RELATIONSHIPSREAD"
        }, {
          "$ref" : "#/components/schemas/VOICE"
        }, {
          "$ref" : "#/components/schemas/DMCHANNELSREAD"
        }, {
          "$ref" : "#/components/schemas/ROLECONNECTIONSWRITE"
        }, {
          "$ref" : "#/components/schemas/OPENID"
        } ]
      },
      "WEBHOOKDELETE" : {
        "title" : "WEBHOOK_DELETE",
        "type" : "integer",
        "enum" : [ 52 ]
      },
      "MLSPAM" : {
        "title" : "ML_SPAM",
        "type" : "integer",
        "description" : "Check if content represents generic spam",
        "enum" : [ 3 ]
      },
      "GUILDDISCOVERYGRACEPERIODFINALWARNING" : {
        "title" : "GUILD_DISCOVERY_GRACE_PERIOD_FINAL_WARNING",
        "type" : "integer",
        "enum" : [ 17 ]
      },
      "MEMBERBANADD" : {
        "title" : "MEMBER_BAN_ADD",
        "type" : "integer",
        "enum" : [ 22 ]
      },
      "CHANNELFOLLOWADD" : {
        "title" : "CHANNEL_FOLLOW_ADD",
        "type" : "integer",
        "enum" : [ 12 ]
      },
      "GROUPDM1" : {
        "title" : "GROUP_DM1",
        "type" : "integer",
        "enum" : [ 1 ]
      },
      "ROLEICONS" : {
        "title" : "ROLE_ICONS",
        "type" : "string",
        "description" : "guild is able to set role icons",
        "enum" : [ "ROLE_ICONS" ]
      },
      "DEFERREDUPDATEMESSAGE" : {
        "title" : "DEFERRED_UPDATE_MESSAGE",
        "type" : "integer",
        "enum" : [ 6 ]
      },
      "MEMBERKICK" : {
        "title" : "MEMBER_KICK",
        "type" : "integer",
        "enum" : [ 20 ]
      },
      "ApplicationCommandOptionType" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/SUBCOMMAND"
        }, {
          "$ref" : "#/components/schemas/SUBCOMMANDGROUP"
        }, {
          "$ref" : "#/components/schemas/STRING"
        }, {
          "$ref" : "#/components/schemas/INTEGER"
        }, {
          "$ref" : "#/components/schemas/BOOLEAN"
        }, {
          "$ref" : "#/components/schemas/USER1"
        }, {
          "$ref" : "#/components/schemas/CHANNEL"
        }, {
          "$ref" : "#/components/schemas/ROLE"
        }, {
          "$ref" : "#/components/schemas/MENTIONABLE"
        }, {
          "$ref" : "#/components/schemas/NUMBER"
        }, {
          "$ref" : "#/components/schemas/ATTACHMENT"
        } ]
      },
      "GuildNSFWContentLevel" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/DEFAULT"
        }, {
          "$ref" : "#/components/schemas/EXPLICIT"
        }, {
          "$ref" : "#/components/schemas/SAFE"
        }, {
          "$ref" : "#/components/schemas/AGERESTRICTED"
        } ]
      },
      "MODAL" : {
        "title" : "MODAL",
        "type" : "integer",
        "enum" : [ 9 ]
      },
      "ChannelFollowerResponse" : {
        "title" : "ChannelFollowerResponse",
        "required" : [ "channel_id", "webhook_id" ],
        "type" : "object",
        "properties" : {
          "webhook_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "webhookId"
          },
          "channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "channelId"
          }
        }
      },
      "InlineResponseItems2008" : {
        "anyOf" : [ {
          "$ref" : "#/components/schemas/FriendInviteResponse"
        }, {
          "$ref" : "#/components/schemas/GroupDMInviteResponse"
        }, {
          "$ref" : "#/components/schemas/GuildInviteResponse"
        }, {
          "$ref" : "#/components/schemas/200AnyOf41"
        } ]
      },
      "SpamLinkRuleResponse" : {
        "title" : "SpamLinkRuleResponse",
        "required" : [ "actions", "creator_id", "event_type", "guild_id", "id", "name", "trigger_metadata", "trigger_type" ],
        "type" : "object",
        "properties" : {
          "event_type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AutomodEventType"
            } ],
            "x-ballerina-name" : "eventType"
          },
          "trigger_type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 2 ],
            "x-ballerina-name" : "triggerType"
          },
          "guild_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "guildId"
          },
          "creator_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "creatorId"
          },
          "name" : {
            "type" : "string"
          },
          "exempt_roles" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "exemptRoles"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "exempt_channels" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "exemptChannels"
          },
          "actions" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/DefaultKeywordRuleResponseActions"
            }
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "trigger_metadata" : {
            "type" : "object",
            "x-ballerina-name" : "triggerMetadata"
          }
        }
      },
      "MessageEditRequestPartial" : {
        "title" : "MessageEditRequestPartial",
        "type" : "object",
        "properties" : {
          "components" : {
            "maxItems" : 5,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ActionRow"
            }
          },
          "attachments" : {
            "maxItems" : 10,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/MessageAttachmentRequest"
            }
          },
          "sticker_ids" : {
            "maxItems" : 1521,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "stickerIds"
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "allowed_mentions" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MessageAllowedMentionsRequest"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "allowedMentions"
          },
          "embeds" : {
            "maxItems" : 10,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/RichEmbed"
            }
          },
          "content" : {
            "maxLength" : 4000,
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "InlineResponseItems2006" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ApplicationIncomingWebhookResponse"
        }, {
          "$ref" : "#/components/schemas/ChannelFollowerWebhookResponse"
        }, {
          "$ref" : "#/components/schemas/GuildIncomingWebhookResponse"
        }, {
          "$ref" : "#/components/schemas/200OneOf43"
        } ]
      },
      "InlineResponseItems2007" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/GuildChannelResponse"
        }, {
          "$ref" : "#/components/schemas/PrivateChannelResponse"
        }, {
          "$ref" : "#/components/schemas/PrivateGroupChannelResponse"
        }, {
          "$ref" : "#/components/schemas/ThreadResponse"
        }, {
          "$ref" : "#/components/schemas/200OneOf5"
        } ]
      },
      "InlineResponseItems2004" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ExternalScheduledEventResponse"
        }, {
          "$ref" : "#/components/schemas/StageScheduledEventResponse"
        }, {
          "$ref" : "#/components/schemas/VoiceScheduledEventResponse"
        }, {
          "$ref" : "#/components/schemas/200OneOf41"
        } ]
      },
      "GatewayBotResponse" : {
        "title" : "GatewayBotResponse",
        "required" : [ "session_start_limit", "shards", "url" ],
        "type" : "object",
        "properties" : {
          "shards" : {
            "type" : "integer",
            "format" : "int32"
          },
          "session_start_limit" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/GatewayBotSessionStartLimitResponse"
            } ],
            "x-ballerina-name" : "sessionStartLimit"
          },
          "url" : {
            "type" : "string"
          }
        }
      },
      "InlineResponseItems2005" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/DiscordIntegrationResponse"
        }, {
          "$ref" : "#/components/schemas/ExternalConnectionIntegrationResponse"
        }, {
          "$ref" : "#/components/schemas/GuildSubscriptionIntegrationResponse"
        }, {
          "$ref" : "#/components/schemas/200OneOf42"
        } ]
      },
      "MessageEmbedAuthorResponse" : {
        "title" : "MessageEmbedAuthorResponse",
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "icon_url" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "iconUrl"
          },
          "name" : {
            "type" : "string"
          },
          "proxy_icon_url" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "proxyIconUrl"
          },
          "url" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "InlineResponseItems2002" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ApplicationIncomingWebhookResponse"
        }, {
          "$ref" : "#/components/schemas/ChannelFollowerWebhookResponse"
        }, {
          "$ref" : "#/components/schemas/GuildIncomingWebhookResponse"
        }, {
          "$ref" : "#/components/schemas/200OneOf4"
        } ]
      },
      "FULFILLMENTFAILED" : {
        "title" : "FULFILLMENT_FAILED",
        "type" : "integer",
        "enum" : [ 4 ]
      },
      "InlineResponseItems2003" : {
        "anyOf" : [ {
          "$ref" : "#/components/schemas/FriendInviteResponse"
        }, {
          "$ref" : "#/components/schemas/GroupDMInviteResponse"
        }, {
          "$ref" : "#/components/schemas/GuildInviteResponse"
        }, {
          "$ref" : "#/components/schemas/200AnyOf4"
        } ]
      },
      "InlineResponseItems2001" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/EntitlementResponse"
        } ]
      },
      "GUILDCATEGORY" : {
        "title" : "GUILD_CATEGORY",
        "type" : "integer",
        "description" : "An organizational category that contains up to 50 channels",
        "enum" : [ 4 ]
      },
      "SkuIdsOneOf1" : {
        "type" : "string"
      },
      "GuildTemplateResponse" : {
        "title" : "GuildTemplateResponse",
        "required" : [ "code", "created_at", "creator_id", "name", "serialized_source_guild", "source_guild_id", "updated_at", "usage_count" ],
        "type" : "object",
        "properties" : {
          "usage_count" : {
            "type" : "integer",
            "format" : "int32",
            "x-ballerina-name" : "usageCount"
          },
          "creator" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/UserResponse"
            }, {
              "nullable" : true
            } ]
          },
          "code" : {
            "type" : "string"
          },
          "source_guild_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "sourceGuildId"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "date-time",
            "x-ballerina-name" : "updatedAt"
          },
          "serialized_source_guild" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/GuildTemplateSnapshotResponse"
            } ],
            "x-ballerina-name" : "serializedSourceGuild"
          },
          "name" : {
            "type" : "string"
          },
          "creator_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "creatorId"
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time",
            "x-ballerina-name" : "createdAt"
          },
          "is_dirty" : {
            "type" : "boolean",
            "nullable" : true,
            "x-ballerina-name" : "isDirty"
          }
        }
      },
      "ChannelSelectDefaultValue" : {
        "title" : "ChannelSelectDefaultValue",
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "channel" ]
          }
        }
      },
      "ApplicationCommandIntegerOptionResponse" : {
        "title" : "ApplicationCommandIntegerOptionResponse",
        "required" : [ "description", "name", "type" ],
        "type" : "object",
        "properties" : {
          "min_value" : {
            "maximum" : 9007199254740991,
            "minimum" : -9007199254740991,
            "oneOf" : [ {
              "maximum" : 9007199254740991,
              "minimum" : -9007199254740991,
              "type" : "integer",
              "format" : "int64"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "minValue"
          },
          "name_localized" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "nameLocalized"
          },
          "name_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "nameLocalizations"
          },
          "autocomplete" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "description_localized" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalized"
          },
          "description_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalizations"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 4 ]
          },
          "choices" : {
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ApplicationCommandOptionIntegerChoiceResponse"
            }
          },
          "required" : {
            "type" : "boolean",
            "nullable" : true
          },
          "max_value" : {
            "maximum" : 9007199254740991,
            "minimum" : -9007199254740991,
            "oneOf" : [ {
              "maximum" : 9007199254740991,
              "minimum" : -9007199254740991,
              "type" : "integer",
              "format" : "int64"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "maxValue"
          }
        }
      },
      "ScheduledEventResponse" : {
        "title" : "ScheduledEventResponse",
        "required" : [ "entity_type", "guild_id", "id", "name", "privacy_level", "scheduled_start_time", "status" ],
        "type" : "object",
        "properties" : {
          "image" : {
            "type" : "string",
            "nullable" : true
          },
          "creator" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/UserResponse"
            }, {
              "nullable" : true
            } ]
          },
          "privacy_level" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/GuildScheduledEventPrivacyLevels"
            } ],
            "x-ballerina-name" : "privacyLevel"
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "entity_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "entityId"
          },
          "scheduled_end_time" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "scheduledEndTime"
          },
          "entity_type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/GuildScheduledEventEntityTypes"
            } ],
            "x-ballerina-name" : "entityType"
          },
          "user_rsvp" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ScheduledEventUserResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "userRsvp"
          },
          "user_count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "userCount"
          },
          "guild_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "guildId"
          },
          "name" : {
            "type" : "string"
          },
          "creator_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "creatorId"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "channelId"
          },
          "scheduled_start_time" : {
            "type" : "string",
            "format" : "date-time",
            "x-ballerina-name" : "scheduledStartTime"
          },
          "status" : {
            "$ref" : "#/components/schemas/GuildScheduledEventStatuses"
          }
        }
      },
      "MessageComponentUserSelectResponse" : {
        "title" : "MessageComponentUserSelectResponse",
        "required" : [ "custom_id", "id", "type" ],
        "type" : "object",
        "properties" : {
          "min_values" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "minValues"
          },
          "custom_id" : {
            "type" : "string",
            "x-ballerina-name" : "customId"
          },
          "max_values" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxValues"
          },
          "disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "placeholder" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 5 ]
          }
        }
      },
      "SUBCOMMAND" : {
        "title" : "SUB_COMMAND",
        "type" : "integer",
        "description" : "A sub-action within a command or group",
        "enum" : [ 1 ]
      },
      "AllowedMentionTypes" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/USERS"
        }, {
          "$ref" : "#/components/schemas/ROLES"
        }, {
          "$ref" : "#/components/schemas/EVERYONE"
        } ]
      },
      "InviteApplicationResponse" : {
        "title" : "InviteApplicationResponse",
        "required" : [ "description", "flags", "id", "name", "verify_key" ],
        "type" : "object",
        "properties" : {
          "rpc_origins" : {
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "x-ballerina-name" : "rpcOrigins"
          },
          "privacy_policy_url" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "privacyPolicyUrl"
          },
          "bot_require_code_grant" : {
            "type" : "boolean",
            "nullable" : true,
            "x-ballerina-name" : "botRequireCodeGrant"
          },
          "bot" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/UserResponse"
            }, {
              "nullable" : true
            } ]
          },
          "icon" : {
            "type" : "string",
            "nullable" : true
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32"
          },
          "description" : {
            "type" : "string"
          },
          "verify_key" : {
            "type" : "string",
            "x-ballerina-name" : "verifyKey"
          },
          "type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ApplicationTypes"
              } ]
            }, { } ]
          },
          "max_participants" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxParticipants"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "type" : "string"
            }
          },
          "custom_install_url" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "customInstallUrl"
          },
          "install_params" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ApplicationOAuth2InstallParamsResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "installParams"
          },
          "name" : {
            "type" : "string"
          },
          "guild_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "guildId"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "cover_image" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "coverImage"
          },
          "primary_sku_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "primarySkuId"
          },
          "slug" : {
            "type" : "string",
            "nullable" : true
          },
          "bot_public" : {
            "type" : "boolean",
            "nullable" : true,
            "x-ballerina-name" : "botPublic"
          },
          "terms_of_service_url" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "termsOfServiceUrl"
          }
        }
      },
      "ApplicationCommandUserOptionResponse" : {
        "title" : "ApplicationCommandUserOptionResponse",
        "required" : [ "description", "name", "type" ],
        "type" : "object",
        "properties" : {
          "name_localized" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "nameLocalized"
          },
          "name_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "nameLocalizations"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "description_localized" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalized"
          },
          "description_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalizations"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 6 ]
          },
          "required" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "BaseCreateMessageCreateRequest" : {
        "title" : "BaseCreateMessageCreateRequest",
        "type" : "object",
        "properties" : {
          "components" : {
            "maxItems" : 5,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ActionRow"
            }
          },
          "attachments" : {
            "maxItems" : 10,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/MessageAttachmentRequest"
            }
          },
          "sticker_ids" : {
            "maxItems" : 3,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "stickerIds"
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "allowed_mentions" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MessageAllowedMentionsRequest"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "allowedMentions"
          },
          "embeds" : {
            "maxItems" : 10,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/RichEmbed"
            }
          },
          "content" : {
            "maxLength" : 4000,
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "INVITESPLASH" : {
        "title" : "INVITE_SPLASH",
        "type" : "string",
        "description" : "guild has access to set an invite splash background",
        "enum" : [ "INVITE_SPLASH" ]
      },
      "CreatedThreadResponse" : {
        "title" : "CreatedThreadResponse",
        "required" : [ "flags", "guild_id", "id", "member_count", "message_count", "name", "owner_id", "total_message_sent", "type" ],
        "type" : "object",
        "properties" : {
          "last_pin_timestamp" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "lastPinTimestamp"
          },
          "rate_limit_per_user" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "rateLimitPerUser"
          },
          "owner_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "ownerId"
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32"
          },
          "bitrate" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ChannelTypes"
          },
          "user_limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "userLimit"
          },
          "message_count" : {
            "type" : "integer",
            "format" : "int32",
            "x-ballerina-name" : "messageCount"
          },
          "total_message_sent" : {
            "type" : "integer",
            "format" : "int32",
            "x-ballerina-name" : "totalMessageSent"
          },
          "last_message_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "lastMessageId"
          },
          "rtc_region" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "rtcRegion"
          },
          "parent_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "parentId"
          },
          "permissions" : {
            "type" : "string",
            "nullable" : true
          },
          "guild_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "guildId"
          },
          "name" : {
            "type" : "string"
          },
          "member" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ThreadMemberResponse"
            }, {
              "nullable" : true
            } ]
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "thread_metadata" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ThreadMetadataResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "threadMetadata"
          },
          "member_count" : {
            "type" : "integer",
            "format" : "int32",
            "x-ballerina-name" : "memberCount"
          },
          "video_quality_mode" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/VideoQualityModes"
              } ]
            }, { } ],
            "x-ballerina-name" : "videoQualityMode"
          },
          "applied_tags" : {
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "appliedTags"
          }
        }
      },
      "NONE" : {
        "title" : "NONE",
        "type" : "integer",
        "enum" : [ 0 ]
      },
      "GuildHomeSettingsResponseNewMemberActions" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/NewMemberActionResponse"
        }, {
          "$ref" : "#/components/schemas/NewMemberActionsOneOf2"
        } ]
      },
      "MessageEmbedVideoResponse" : {
        "title" : "MessageEmbedVideoResponse",
        "type" : "object",
        "properties" : {
          "width" : {
            "maximum" : 4294967295,
            "minimum" : 0.0,
            "oneOf" : [ {
              "maximum" : 4294967295,
              "minimum" : 0.0,
              "type" : "integer",
              "format" : "int64"
            }, {
              "nullable" : true
            } ]
          },
          "placeholder_version" : {
            "maximum" : 4294967295,
            "minimum" : 0.0,
            "oneOf" : [ {
              "maximum" : 4294967295,
              "minimum" : 0.0,
              "type" : "integer",
              "format" : "int64"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "placeholderVersion"
          },
          "proxy_url" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "proxyUrl"
          },
          "placeholder" : {
            "type" : "string",
            "nullable" : true
          },
          "url" : {
            "type" : "string",
            "nullable" : true
          },
          "height" : {
            "maximum" : 4294967295,
            "minimum" : 0.0,
            "oneOf" : [ {
              "maximum" : 4294967295,
              "minimum" : 0.0,
              "type" : "integer",
              "format" : "int64"
            }, {
              "nullable" : true
            } ]
          }
        }
      },
      "USERCOMMUNICATIONDISABLED" : {
        "title" : "USER_COMMUNICATION_DISABLED",
        "type" : "integer",
        "description" : "Temporarily disable a user's ability to communicate in the server (timeout)",
        "enum" : [ 3 ]
      },
      "ThreadMemberResponse" : {
        "title" : "ThreadMemberResponse",
        "required" : [ "flags", "id", "join_timestamp", "user_id" ],
        "type" : "object",
        "properties" : {
          "join_timestamp" : {
            "type" : "string",
            "format" : "date-time",
            "x-ballerina-name" : "joinTimestamp"
          },
          "user_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "userId"
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32"
          },
          "member" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/GuildMemberResponse"
            }, {
              "nullable" : true
            } ]
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }
      },
      "THIRTYMINUTES" : {
        "title" : "THIRTY_MINUTES",
        "type" : "integer",
        "enum" : [ 1800 ]
      },
      "ScheduledEventUserResponse" : {
        "title" : "ScheduledEventUserResponse",
        "required" : [ "guild_scheduled_event_id", "user_id" ],
        "type" : "object",
        "properties" : {
          "user_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "userId"
          },
          "member" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/GuildMemberResponse"
            }, {
              "nullable" : true
            } ]
          },
          "guild_scheduled_event_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "guildScheduledEventId"
          },
          "user" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/UserResponse"
            }, {
              "nullable" : true
            } ]
          }
        }
      },
      "ChannelsFollowersRequest" : {
        "title" : "ChannelsFollowersRequest",
        "required" : [ "webhook_channel_id" ],
        "type" : "object",
        "properties" : {
          "webhook_channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "webhookChannelId"
          }
        }
      },
      "ChannelsRequest" : {
        "title" : "ChannelsRequest",
        "type" : "object",
        "properties" : {
          "icon" : {
            "type" : "string",
            "format" : "binary",
            "nullable" : true
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "bitrate" : {
            "minimum" : 8000.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ChannelTypes"
              } ]
            }, { } ]
          },
          "auto_archive_duration" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ThreadAutoArchiveDuration"
              } ]
            }, { } ],
            "x-ballerina-name" : "autoArchiveDuration"
          },
          "rtc_region" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "rtcRegion"
          },
          "archived" : {
            "type" : "boolean",
            "nullable" : true
          },
          "default_reaction_emoji" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/UpdateDefaultReactionEmojiRequest"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "defaultReactionEmoji"
          },
          "default_forum_layout" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ForumLayout"
              } ]
            }, { } ],
            "x-ballerina-name" : "defaultForumLayout"
          },
          "invitable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "available_tags" : {
            "maxItems" : 20,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/UpdateThreadTagRequest"
            },
            "x-ballerina-name" : "availableTags"
          },
          "locked" : {
            "type" : "boolean",
            "nullable" : true
          },
          "video_quality_mode" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/VideoQualityModes"
              } ]
            }, { } ],
            "x-ballerina-name" : "videoQualityMode"
          },
          "default_sort_order" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ThreadSortOrder"
              } ]
            }, { } ],
            "x-ballerina-name" : "defaultSortOrder"
          },
          "nsfw" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rate_limit_per_user" : {
            "maximum" : 21600.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "rateLimitPerUser"
          },
          "user_limit" : {
            "maximum" : 99.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "userLimit"
          },
          "permission_overwrites" : {
            "maxItems" : 100,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ChannelPermissionOverwriteRequest"
            },
            "x-ballerina-name" : "permissionOverwrites"
          },
          "default_thread_rate_limit_per_user" : {
            "maximum" : 21600.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "defaultThreadRateLimitPerUser"
          },
          "default_auto_archive_duration" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ThreadAutoArchiveDuration"
              } ]
            }, { } ],
            "x-ballerina-name" : "defaultAutoArchiveDuration"
          },
          "parent_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "parentId"
          },
          "name" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string",
            "nullable" : true
          },
          "topic" : {
            "maxLength" : 4096,
            "minLength" : 0,
            "type" : "string",
            "nullable" : true
          },
          "position" : {
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "applied_tags" : {
            "maxItems" : 5,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "appliedTags"
          }
        }
      },
      "LOW" : {
        "title" : "LOW",
        "type" : "integer",
        "description" : "must have verified email on account",
        "enum" : [ 1 ]
      },
      "STAGEINSTANCECREATE" : {
        "title" : "STAGE_INSTANCE_CREATE",
        "type" : "integer",
        "enum" : [ 83 ]
      },
      "ONBOARDINGPROMPTCREATE" : {
        "title" : "ONBOARDING_PROMPT_CREATE",
        "type" : "integer",
        "enum" : [ 163 ]
      },
      "DEFAULT1" : {
        "title" : "DEFAULT1",
        "type" : "integer",
        "description" : "No default has been set for forum channel",
        "enum" : [ 0 ]
      },
      "DEFAULT2" : {
        "title" : "DEFAULT2",
        "type" : "integer",
        "description" : "Reference to a message",
        "enum" : [ 0 ]
      },
      "VanityURLErrorResponse" : {
        "title" : "VanityURLErrorResponse",
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "THREEDAY" : {
        "title" : "THREE_DAY",
        "type" : "integer",
        "description" : "Three days",
        "enum" : [ 4320 ]
      },
      "Description" : {
        "title" : "Description",
        "required" : [ "default" ],
        "type" : "object",
        "properties" : {
          "default" : {
            "maxLength" : 400,
            "type" : "string"
          },
          "localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true
          }
        }
      },
      "EMOJIUPDATE" : {
        "title" : "EMOJI_UPDATE",
        "type" : "integer",
        "enum" : [ 61 ]
      },
      "ChannelsRecipientsRequest" : {
        "title" : "ChannelsRecipientsRequest",
        "type" : "object",
        "properties" : {
          "access_token" : {
            "maxLength" : 152133,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "accessToken"
          },
          "nick" : {
            "maxLength" : 152133,
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "StageInstancesPrivacyLevels" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/PUBLIC"
        }, {
          "$ref" : "#/components/schemas/GUILDONLY1"
        } ]
      },
      "MessagesmessageIdBody1" : {
        "type" : "object",
        "properties" : {
          "components" : {
            "maxItems" : 5,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ActionRow"
            }
          },
          "attachments" : {
            "maxItems" : 10,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/MessageAttachmentRequest"
            }
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "allowed_mentions" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MessageAllowedMentionsRequest"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "allowedMentions"
          },
          "embeds" : {
            "maxItems" : 10,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/RichEmbed"
            }
          },
          "content" : {
            "maxLength" : 2000,
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "MentionSpamUpsertRequestActions" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/BlockMessageAction"
        }, {
          "$ref" : "#/components/schemas/FlagToChannelAction"
        }, {
          "$ref" : "#/components/schemas/QuarantineUserAction"
        }, {
          "$ref" : "#/components/schemas/UserCommunicationDisabledAction"
        }, {
          "$ref" : "#/components/schemas/ActionsOneOf56"
        } ]
      },
      "KeywordRuleResponse" : {
        "title" : "KeywordRuleResponse",
        "required" : [ "actions", "creator_id", "event_type", "guild_id", "id", "name", "trigger_metadata", "trigger_type" ],
        "type" : "object",
        "properties" : {
          "event_type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AutomodEventType"
            } ],
            "x-ballerina-name" : "eventType"
          },
          "trigger_type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 1 ],
            "x-ballerina-name" : "triggerType"
          },
          "guild_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "guildId"
          },
          "creator_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "creatorId"
          },
          "name" : {
            "type" : "string"
          },
          "exempt_roles" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "exemptRoles"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "exempt_channels" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "exemptChannels"
          },
          "actions" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/DefaultKeywordRuleResponseActions"
            }
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "trigger_metadata" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/KeywordTriggerMetadataResponse"
            } ],
            "x-ballerina-name" : "triggerMetadata"
          }
        }
      },
      "AutomodKeywordPresetType" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/PROFANITY"
        }, {
          "$ref" : "#/components/schemas/SEXUALCONTENT"
        }, {
          "$ref" : "#/components/schemas/SLURS"
        } ]
      },
      "WebhooksRequest" : {
        "title" : "WebhooksRequest",
        "type" : "object",
        "properties" : {
          "components" : {
            "maxItems" : 5,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ActionRow3"
            }
          },
          "tts" : {
            "type" : "boolean",
            "nullable" : true
          },
          "attachments" : {
            "maxItems" : 10,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/MessageAttachmentRequest"
            }
          },
          "avatar_url" : {
            "maxLength" : 2048,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "avatarUrl"
          },
          "thread_name" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "threadName"
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "allowed_mentions" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/MessageAllowedMentionsRequest"
            } ],
            "x-ballerina-name" : "allowedMentions"
          },
          "embeds" : {
            "maxItems" : 10,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/RichEmbed1"
            }
          },
          "content" : {
            "maxLength" : 2000,
            "type" : "string",
            "nullable" : true
          },
          "username" : {
            "maxLength" : 80,
            "minLength" : 1,
            "type" : "string",
            "nullable" : true
          },
          "applied_tags" : {
            "maxItems" : 5,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "appliedTags"
          }
        }
      },
      "ResourceChannelsOneOf2" : {
        "nullable" : true
      },
      "ApplicationFormPartial" : {
        "title" : "ApplicationFormPartial",
        "type" : "object",
        "properties" : {
          "role_connections_verification_url" : {
            "maxLength" : 2048,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "roleConnectionsVerificationUrl"
          },
          "custom_install_url" : {
            "maxLength" : 2048,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "customInstallUrl"
          },
          "install_params" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ApplicationOAuth2InstallParams"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "installParams"
          },
          "icon" : {
            "type" : "string",
            "format" : "binary",
            "nullable" : true
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "description" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/Description"
              } ]
            }, { } ]
          },
          "interactions_endpoint_url" : {
            "maxLength" : 2048,
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "interactionsEndpointUrl"
          },
          "cover_image" : {
            "type" : "string",
            "format" : "binary",
            "nullable" : true,
            "x-ballerina-name" : "coverImage"
          },
          "team_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "teamId"
          },
          "type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ApplicationTypes"
              } ]
            }, { } ]
          },
          "max_participants" : {
            "minimum" : -1.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxParticipants"
          },
          "tags" : {
            "maxItems" : 5,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "maxLength" : 20,
              "type" : "string"
            }
          }
        }
      },
      "PrivateGuildMemberResponse" : {
        "title" : "PrivateGuildMemberResponse",
        "required" : [ "deaf", "flags", "joined_at", "mute", "pending", "roles", "user" ],
        "type" : "object",
        "properties" : {
          "premium_since" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "premiumSince"
          },
          "pending" : {
            "type" : "boolean"
          },
          "roles" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32"
          },
          "deaf" : {
            "type" : "boolean"
          },
          "banner" : {
            "type" : "string",
            "nullable" : true
          },
          "mute" : {
            "type" : "boolean"
          },
          "avatar" : {
            "type" : "string",
            "nullable" : true
          },
          "joined_at" : {
            "type" : "string",
            "format" : "date-time",
            "x-ballerina-name" : "joinedAt"
          },
          "nick" : {
            "type" : "string",
            "nullable" : true
          },
          "communication_disabled_until" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "communicationDisabledUntil"
          },
          "avatar_decoration_data" : {
            "oneOf" : [ {
              "type" : "object"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "avatarDecorationData"
          },
          "user" : {
            "$ref" : "#/components/schemas/UserResponse"
          }
        }
      },
      "GROUPDM" : {
        "title" : "GROUP_DM",
        "type" : "integer",
        "description" : "A direct message between multiple users",
        "enum" : [ 3 ]
      },
      "SnowflakeSelectDefaultValueTypes" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/USER3"
        }, {
          "$ref" : "#/components/schemas/ROLE3"
        }, {
          "$ref" : "#/components/schemas/CHANNEL2"
        } ]
      },
      "DISCORD" : {
        "title" : "DISCORD",
        "type" : "string",
        "enum" : [ "discord" ]
      },
      "THREADCREATE" : {
        "title" : "THREAD_CREATE",
        "type" : "integer",
        "enum" : [ 110 ]
      },
      "MLSpamUpsertRequestActions" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/BlockMessageAction"
        }, {
          "$ref" : "#/components/schemas/FlagToChannelAction"
        }, {
          "$ref" : "#/components/schemas/QuarantineUserAction"
        }, {
          "$ref" : "#/components/schemas/UserCommunicationDisabledAction"
        }, {
          "$ref" : "#/components/schemas/ActionsOneOf54"
        } ]
      },
      "ApplicationCommandCreateRequest" : {
        "title" : "ApplicationCommandCreateRequest",
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "nameLocalizations"
          },
          "dm_permission" : {
            "type" : "boolean",
            "nullable" : true,
            "x-ballerina-name" : "dmPermission"
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 1,
            "type" : "string"
          },
          "options" : {
            "maxItems" : 25,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ApplicationCommandCreateRequestOptions"
            }
          },
          "description" : {
            "maxLength" : 100,
            "type" : "string",
            "nullable" : true
          },
          "description_localizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "x-ballerina-name" : "descriptionLocalizations"
          },
          "default_member_permissions" : {
            "maximum" : 2251799813685247,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "defaultMemberPermissions"
          },
          "type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ApplicationCommandType"
              } ]
            }, { } ]
          }
        }
      },
      "CreateTextThreadWithMessageRequest" : {
        "title" : "CreateTextThreadWithMessageRequest",
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "rate_limit_per_user" : {
            "maximum" : 21600.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "rateLimitPerUser"
          },
          "name" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "auto_archive_duration" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ThreadAutoArchiveDuration"
              } ]
            }, { } ],
            "x-ballerina-name" : "autoArchiveDuration"
          }
        }
      },
      "VERYHIGH" : {
        "title" : "VERY_HIGH",
        "type" : "integer",
        "description" : "must have a verified phone number",
        "enum" : [ 4 ]
      },
      "BANNER" : {
        "title" : "BANNER",
        "type" : "string",
        "description" : "guild has access to set a guild banner image",
        "enum" : [ "BANNER" ]
      },
      "AuditLogEntryResponse" : {
        "title" : "AuditLogEntryResponse",
        "required" : [ "action_type", "id" ],
        "type" : "object",
        "properties" : {
          "reason" : {
            "type" : "string",
            "nullable" : true
          },
          "action_type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AuditLogActionTypes"
            } ],
            "x-ballerina-name" : "actionType"
          },
          "user_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "userId"
          },
          "changes" : {
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/AuditLogObjectChangeResponse"
            }
          },
          "options" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true
          },
          "target_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "targetId"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          }
        }
      },
      "PrivateApplicationResponse" : {
        "title" : "PrivateApplicationResponse",
        "required" : [ "description", "flags", "id", "name", "owner", "redirect_uris", "verify_key" ],
        "type" : "object",
        "properties" : {
          "privacy_policy_url" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "privacyPolicyUrl"
          },
          "bot_require_code_grant" : {
            "type" : "boolean",
            "nullable" : true,
            "x-ballerina-name" : "botRequireCodeGrant"
          },
          "bot" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/UserResponse"
            }, {
              "nullable" : true
            } ]
          },
          "icon" : {
            "type" : "string",
            "nullable" : true
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32"
          },
          "description" : {
            "type" : "string"
          },
          "interactions_endpoint_url" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "interactionsEndpointUrl"
          },
          "type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/ApplicationTypes"
              } ]
            }, { } ]
          },
          "max_participants" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxParticipants"
          },
          "custom_install_url" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "customInstallUrl"
          },
          "install_params" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ApplicationOAuth2InstallParamsResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "installParams"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "cover_image" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "coverImage"
          },
          "slug" : {
            "type" : "string",
            "nullable" : true
          },
          "bot_public" : {
            "type" : "boolean",
            "nullable" : true,
            "x-ballerina-name" : "botPublic"
          },
          "terms_of_service_url" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "termsOfServiceUrl"
          },
          "rpc_origins" : {
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "x-ballerina-name" : "rpcOrigins"
          },
          "owner" : {
            "$ref" : "#/components/schemas/UserResponse"
          },
          "role_connections_verification_url" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "roleConnectionsVerificationUrl"
          },
          "verify_key" : {
            "type" : "string",
            "x-ballerina-name" : "verifyKey"
          },
          "redirect_uris" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "x-ballerina-name" : "redirectUris"
          },
          "team" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/TeamResponse"
            }, {
              "nullable" : true
            } ]
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "type" : "string"
            }
          },
          "approximate_guild_count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "approximateGuildCount"
          },
          "name" : {
            "type" : "string"
          },
          "guild_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "guildId"
          },
          "primary_sku_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "primarySkuId"
          }
        }
      },
      "RPCSCREENSHAREWRITE" : {
        "title" : "RPC_SCREENSHARE_WRITE",
        "type" : "string",
        "description" : "for local rpc server access, this allows you to update a user's screenshare settings- requires Discord approval",
        "enum" : [ "rpc.screenshare.write" ]
      },
      "InlineResponseItems200" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/DefaultKeywordRuleResponse"
        }, {
          "$ref" : "#/components/schemas/KeywordRuleResponse"
        }, {
          "$ref" : "#/components/schemas/MLSpamRuleResponse"
        }, {
          "$ref" : "#/components/schemas/MentionSpamRuleResponse"
        }, {
          "$ref" : "#/components/schemas/SpamLinkRuleResponse"
        }, {
          "$ref" : "#/components/schemas/200OneOf6"
        } ]
      },
      "RPCVOICEREAD" : {
        "title" : "RPC_VOICE_READ",
        "type" : "string",
        "description" : "for local rpc server access, this allows you to read a user's voice settings and listen for voice events - requires Discord approval",
        "enum" : [ "rpc.voice.read" ]
      },
      "DEVELOPERSUPPORTSERVER" : {
        "title" : "DEVELOPER_SUPPORT_SERVER",
        "type" : "string",
        "description" : "guild has been set as a support server on the App Directory",
        "enum" : [ "DEVELOPER_SUPPORT_SERVER" ]
      },
      "ForumLayout" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/DEFAULT1"
        }, {
          "$ref" : "#/components/schemas/LIST"
        }, {
          "$ref" : "#/components/schemas/GRID"
        } ]
      },
      "ThreadMetadataResponse" : {
        "title" : "ThreadMetadataResponse",
        "required" : [ "archived", "auto_archive_duration", "locked" ],
        "type" : "object",
        "properties" : {
          "archived" : {
            "type" : "boolean"
          },
          "archive_timestamp" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "archiveTimestamp"
          },
          "create_timestamp" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "createTimestamp"
          },
          "invitable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locked" : {
            "type" : "boolean"
          },
          "auto_archive_duration" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ThreadAutoArchiveDuration"
            } ],
            "x-ballerina-name" : "autoArchiveDuration"
          }
        }
      },
      "ExternalScheduledEventPatchRequestPartial" : {
        "title" : "ExternalScheduledEventPatchRequestPartial",
        "type" : "object",
        "properties" : {
          "image" : {
            "type" : "string",
            "format" : "binary",
            "nullable" : true
          },
          "entity_type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/GuildScheduledEventEntityTypes"
              } ]
            }, { } ],
            "x-ballerina-name" : "entityType"
          },
          "privacy_level" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/GuildScheduledEventPrivacyLevels"
            } ],
            "x-ballerina-name" : "privacyLevel"
          },
          "name" : {
            "maxLength" : 100,
            "type" : "string"
          },
          "entity_metadata" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EntityMetadataExternal"
            } ],
            "x-ballerina-name" : "entityMetadata"
          },
          "description" : {
            "maxLength" : 1000,
            "type" : "string",
            "nullable" : true
          },
          "channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "channelId"
          },
          "status" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/GuildScheduledEventStatuses"
              } ]
            }, { } ]
          },
          "scheduled_start_time" : {
            "type" : "string",
            "format" : "date-time",
            "x-ballerina-name" : "scheduledStartTime"
          },
          "scheduled_end_time" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "scheduledEndTime"
          }
        }
      },
      "TIKTOK" : {
        "title" : "TIKTOK",
        "type" : "string",
        "enum" : [ "tiktok" ]
      },
      "TWITCH" : {
        "title" : "TWITCH",
        "type" : "string",
        "enum" : [ "twitch" ]
      },
      "UserGuildOnboardingResponse" : {
        "title" : "UserGuildOnboardingResponse",
        "required" : [ "default_channel_ids", "enabled", "guild_id", "prompts" ],
        "type" : "object",
        "properties" : {
          "default_channel_ids" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "defaultChannelIds"
          },
          "guild_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "guildId"
          },
          "prompts" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/OnboardingPromptResponse"
            }
          },
          "enabled" : {
            "type" : "boolean"
          }
        }
      },
      "PartialGuildSubscriptionIntegrationResponse" : {
        "title" : "PartialGuildSubscriptionIntegrationResponse",
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "guild_subscription" ]
          },
          "account" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/AccountResponse"
            }, {
              "nullable" : true
            } ]
          }
        }
      },
      "BasicMessageResponseComponents" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/MessageComponentActionRowResponse"
        }, {
          "$ref" : "#/components/schemas/MessageComponentButtonResponse"
        }, {
          "$ref" : "#/components/schemas/MessageComponentChannelSelectResponse"
        }, {
          "$ref" : "#/components/schemas/MessageComponentInputTextResponse"
        }, {
          "$ref" : "#/components/schemas/MessageComponentMentionableSelectResponse"
        }, {
          "$ref" : "#/components/schemas/MessageComponentRoleSelectResponse"
        }, {
          "$ref" : "#/components/schemas/MessageComponentStringSelectResponse"
        }, {
          "$ref" : "#/components/schemas/MessageComponentUserSelectResponse"
        } ]
      },
      "StickersOneOf31" : {
        "nullable" : true
      },
      "AUTOMODERATIONFLAGTOCHANNEL" : {
        "title" : "AUTO_MODERATION_FLAG_TO_CHANNEL",
        "type" : "integer",
        "enum" : [ 144 ]
      },
      "CREATIONDATE" : {
        "title" : "CREATION_DATE",
        "type" : "integer",
        "description" : "Sort forum posts by creation time (from most recent to oldest)",
        "enum" : [ 1 ]
      },
      "CHANNEL1" : {
        "title" : "CHANNEL1",
        "type" : "integer",
        "description" : "This permission is for a channel",
        "enum" : [ 3 ]
      },
      "CHANNEL2" : {
        "title" : "CHANNEL2",
        "type" : "string",
        "enum" : [ "channel" ]
      },
      "StageScheduledEventCreateRequest" : {
        "title" : "StageScheduledEventCreateRequest",
        "required" : [ "entity_type", "name", "privacy_level", "scheduled_start_time" ],
        "type" : "object",
        "properties" : {
          "image" : {
            "type" : "string",
            "format" : "binary",
            "nullable" : true
          },
          "entity_type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 1 ],
            "x-ballerina-name" : "entityType"
          },
          "privacy_level" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/GuildScheduledEventPrivacyLevels"
            } ],
            "x-ballerina-name" : "privacyLevel"
          },
          "name" : {
            "maxLength" : 100,
            "type" : "string"
          },
          "entity_metadata" : {
            "oneOf" : [ {
              "type" : "object"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "entityMetadata"
          },
          "description" : {
            "maxLength" : 1000,
            "type" : "string",
            "nullable" : true
          },
          "channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "channelId"
          },
          "scheduled_start_time" : {
            "type" : "string",
            "format" : "date-time",
            "x-ballerina-name" : "scheduledStartTime"
          },
          "scheduled_end_time" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "scheduledEndTime"
          }
        }
      },
      "GUILDINCIDENTALERTMODEENABLED" : {
        "title" : "GUILD_INCIDENT_ALERT_MODE_ENABLED",
        "type" : "integer",
        "enum" : [ 36 ]
      },
      "GithubAuthor" : {
        "title" : "GithubAuthor",
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "maxLength" : 152133,
            "type" : "string"
          },
          "username" : {
            "maxLength" : 152133,
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "GuildsTemplatesRequest1" : {
        "title" : "GuildsTemplatesRequest1",
        "type" : "object",
        "properties" : {
          "name" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "description" : {
            "maxLength" : 120,
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "SAFE" : {
        "title" : "SAFE",
        "type" : "integer",
        "enum" : [ 2 ]
      },
      "ActionsOneOf5" : {
        "nullable" : true
      },
      "GuildsTemplatesRequest2" : {
        "title" : "GuildsTemplatesRequest2",
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "description" : {
            "maxLength" : 120,
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "EmojiResponse" : {
        "title" : "EmojiResponse",
        "required" : [ "animated", "available", "id", "managed", "name", "require_colons", "roles" ],
        "type" : "object",
        "properties" : {
          "managed" : {
            "type" : "boolean"
          },
          "roles" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string"
          },
          "available" : {
            "type" : "boolean"
          },
          "animated" : {
            "type" : "boolean"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "user" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/UserResponse"
            }, {
              "nullable" : true
            } ]
          },
          "require_colons" : {
            "type" : "boolean",
            "x-ballerina-name" : "requireColons"
          }
        }
      },
      "GuildExplicitContentFilterTypes" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/DISABLED"
        }, {
          "$ref" : "#/components/schemas/MEMBERSWITHOUTROLES"
        }, {
          "$ref" : "#/components/schemas/ALLMEMBERS"
        } ]
      },
      "PartialDiscordIntegrationResponse" : {
        "title" : "PartialDiscordIntegrationResponse",
        "required" : [ "application_id", "id", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "discord" ]
          },
          "application_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "applicationId"
          },
          "account" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/AccountResponse"
            }, {
              "nullable" : true
            } ]
          }
        }
      },
      "OPENID" : {
        "title" : "OPENID",
        "type" : "string",
        "description" : "for OpenID Connect, this allows your app to receive user id and basic profile information",
        "enum" : [ "openid" ]
      },
      "SOUNDBOARDSOUNDUPDATE" : {
        "title" : "SOUNDBOARD_SOUND_UPDATE",
        "type" : "integer",
        "enum" : [ 131 ]
      },
      "EntityMetadataExternal" : {
        "title" : "EntityMetadataExternal",
        "required" : [ "location" ],
        "type" : "object",
        "properties" : {
          "location" : {
            "maxLength" : 100,
            "type" : "string"
          }
        }
      },
      "CreateEntitlementRequestData" : {
        "title" : "CreateEntitlementRequestData",
        "required" : [ "owner_id", "owner_type", "sku_id" ],
        "type" : "object",
        "properties" : {
          "owner_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "ownerId"
          },
          "sku_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "skuId"
          },
          "owner_type" : {
            "type" : "integer",
            "format" : "int32",
            "x-ballerina-name" : "ownerType"
          }
        }
      },
      "BasicMessageResponseStickers" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/GuildStickerResponse"
        }, {
          "$ref" : "#/components/schemas/StandardStickerResponse"
        }, {
          "$ref" : "#/components/schemas/StickersOneOf3"
        } ]
      },
      "UserPIIResponse" : {
        "title" : "UserPIIResponse",
        "required" : [ "discriminator", "flags", "id", "locale", "mfa_enabled", "public_flags", "username" ],
        "type" : "object",
        "properties" : {
          "bot" : {
            "type" : "boolean",
            "nullable" : true
          },
          "flags" : {
            "maximum" : 9007199254740991,
            "minimum" : -9007199254740991,
            "type" : "integer",
            "format" : "int64"
          },
          "verified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "banner" : {
            "type" : "string",
            "nullable" : true
          },
          "avatar" : {
            "type" : "string",
            "nullable" : true
          },
          "locale" : {
            "$ref" : "#/components/schemas/AvailableLocalesEnum"
          },
          "discriminator" : {
            "type" : "string"
          },
          "premium_type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/PremiumTypes"
              } ]
            }, { } ],
            "x-ballerina-name" : "premiumType"
          },
          "accent_color" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "accentColor"
          },
          "system" : {
            "type" : "boolean",
            "nullable" : true
          },
          "global_name" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "globalName"
          },
          "mfa_enabled" : {
            "type" : "boolean",
            "x-ballerina-name" : "mfaEnabled"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "public_flags" : {
            "type" : "integer",
            "format" : "int32",
            "x-ballerina-name" : "publicFlags"
          },
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "username" : {
            "type" : "string"
          }
        }
      },
      "GUILD" : {
        "title" : "GUILD",
        "type" : "integer",
        "enum" : [ 0 ]
      },
      "DefaultKeywordListUpsertRequestPartialActions" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/BlockMessageAction"
        }, {
          "$ref" : "#/components/schemas/FlagToChannelAction"
        }, {
          "$ref" : "#/components/schemas/QuarantineUserAction"
        }, {
          "$ref" : "#/components/schemas/UserCommunicationDisabledAction"
        }, {
          "$ref" : "#/components/schemas/ActionsOneOf51"
        } ]
      },
      "MORESTICKERS" : {
        "title" : "MORE_STICKERS",
        "type" : "string",
        "description" : "guild has increased custom sticker slots",
        "enum" : [ "MORE_STICKERS" ]
      },
      "SkuIds" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/SkuIdsOneOf1"
        }, {
          "$ref" : "#/components/schemas/SkuIdsSkuIdsOneOf12"
        } ]
      },
      "DefaultKeywordRuleResponse" : {
        "title" : "DefaultKeywordRuleResponse",
        "required" : [ "actions", "creator_id", "event_type", "guild_id", "id", "name", "trigger_metadata", "trigger_type" ],
        "type" : "object",
        "properties" : {
          "event_type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AutomodEventType"
            } ],
            "x-ballerina-name" : "eventType"
          },
          "trigger_type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 4 ],
            "x-ballerina-name" : "triggerType"
          },
          "guild_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "guildId"
          },
          "creator_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "creatorId"
          },
          "name" : {
            "type" : "string"
          },
          "exempt_roles" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "exemptRoles"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "exempt_channels" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "exemptChannels"
          },
          "actions" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/DefaultKeywordRuleResponseActions"
            }
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "trigger_metadata" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DefaultKeywordListTriggerMetadataResponse"
            } ],
            "x-ballerina-name" : "triggerMetadata"
          }
        }
      },
      "GuildIncomingWebhookResponse" : {
        "title" : "GuildIncomingWebhookResponse",
        "required" : [ "id", "name", "type" ],
        "type" : "object",
        "properties" : {
          "guild_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "guildId"
          },
          "name" : {
            "type" : "string"
          },
          "avatar" : {
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 1 ]
          },
          "application_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "applicationId"
          },
          "channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "channelId"
          },
          "user" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/UserResponse"
            }, {
              "nullable" : true
            } ]
          },
          "url" : {
            "type" : "string",
            "nullable" : true
          },
          "token" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "CreateGuildInviteRequest" : {
        "title" : "CreateGuildInviteRequest",
        "type" : "object",
        "properties" : {
          "max_age" : {
            "maximum" : 604800.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxAge"
          },
          "temporary" : {
            "type" : "boolean",
            "nullable" : true
          },
          "max_uses" : {
            "maximum" : 100.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "maxUses"
          },
          "unique" : {
            "type" : "boolean",
            "nullable" : true
          },
          "target_type" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/InviteTargetTypes"
              } ]
            }, { } ],
            "x-ballerina-name" : "targetType"
          },
          "target_user_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "targetUserId"
          },
          "target_application_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "targetApplicationId"
          }
        }
      },
      "APPLICATIONSBUILDSREAD" : {
        "title" : "APPLICATIONS_BUILDS_READ",
        "type" : "string",
        "description" : "allows your app to read build data for a user's applications",
        "enum" : [ "applications.builds.read" ]
      },
      "VoiceScheduledEventResponse" : {
        "title" : "VoiceScheduledEventResponse",
        "required" : [ "entity_type", "guild_id", "id", "name", "privacy_level", "scheduled_start_time", "status" ],
        "type" : "object",
        "properties" : {
          "image" : {
            "type" : "string",
            "nullable" : true
          },
          "creator" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/UserResponse"
            }, {
              "nullable" : true
            } ]
          },
          "privacy_level" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/GuildScheduledEventPrivacyLevels"
            } ],
            "x-ballerina-name" : "privacyLevel"
          },
          "entity_metadata" : {
            "oneOf" : [ {
              "type" : "object"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "entityMetadata"
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "entity_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "entityId"
          },
          "scheduled_end_time" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "scheduledEndTime"
          },
          "entity_type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 2 ],
            "x-ballerina-name" : "entityType"
          },
          "user_rsvp" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ScheduledEventUserResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "userRsvp"
          },
          "user_count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "userCount"
          },
          "guild_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "guildId"
          },
          "name" : {
            "type" : "string"
          },
          "creator_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "creatorId"
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "channel_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "channelId"
          },
          "scheduled_start_time" : {
            "type" : "string",
            "format" : "date-time",
            "x-ballerina-name" : "scheduledStartTime"
          },
          "status" : {
            "$ref" : "#/components/schemas/GuildScheduledEventStatuses"
          }
        }
      },
      "GuildsBulkBanRequest" : {
        "title" : "GuildsBulkBanRequest",
        "required" : [ "user_ids" ],
        "type" : "object",
        "properties" : {
          "user_ids" : {
            "maxItems" : 200,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "",
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "userIds"
          },
          "delete_message_seconds" : {
            "maximum" : 604800.0,
            "minimum" : 0.0,
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "deleteMessageSeconds"
          }
        }
      },
      "LINK" : {
        "title" : "LINK",
        "type" : "integer",
        "enum" : [ 5 ]
      },
      "PONG" : {
        "title" : "PONG",
        "type" : "integer",
        "enum" : [ 1 ]
      },
      "OptionsOneOf2" : {
        "nullable" : true
      },
      "CHANNELDELETE" : {
        "title" : "CHANNEL_DELETE",
        "type" : "integer",
        "enum" : [ 12 ]
      },
      "APPLICATIONSCOMMANDSPERMISSIONSUPDATE" : {
        "title" : "APPLICATIONS_COMMANDS_PERMISSIONS_UPDATE",
        "type" : "string",
        "description" : "allows your app to update permissions for its commands in a guild a user has permissions to",
        "enum" : [ "applications.commands.permissions.update" ]
      },
      "InviteTypes" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/GUILD"
        }, {
          "$ref" : "#/components/schemas/GROUPDM1"
        }, {
          "$ref" : "#/components/schemas/FRIEND"
        } ]
      },
      "THREEDAYS" : {
        "title" : "THREE_DAYS",
        "type" : "integer",
        "description" : "3 days",
        "enum" : [ 3 ]
      },
      "StickerPackCollectionResponse" : {
        "title" : "StickerPackCollectionResponse",
        "required" : [ "sticker_packs" ],
        "type" : "object",
        "properties" : {
          "sticker_packs" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/StickerPackResponse"
            },
            "x-ballerina-name" : "stickerPacks"
          }
        }
      },
      "DATETIMELESSTHANEQUAL" : {
        "title" : "DATETIME_LESS_THAN_EQUAL",
        "type" : "integer",
        "description" : "the metadata value (ISO8601 string) is less than or equal to the guild's configured value (integer; days before current date)",
        "enum" : [ 5 ]
      },
      "UserSelectDefaultValue" : {
        "title" : "UserSelectDefaultValue",
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "user" ]
          }
        }
      },
      "PartialExternalConnectionIntegrationResponse" : {
        "title" : "PartialExternalConnectionIntegrationResponse",
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/IntegrationTypes"
          },
          "account" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/AccountResponse"
            }, {
              "nullable" : true
            } ]
          }
        }
      },
      "MLSpamUpsertRequestPartialActions" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/BlockMessageAction"
        }, {
          "$ref" : "#/components/schemas/FlagToChannelAction"
        }, {
          "$ref" : "#/components/schemas/QuarantineUserAction"
        }, {
          "$ref" : "#/components/schemas/UserCommunicationDisabledAction"
        }, {
          "$ref" : "#/components/schemas/ActionsOneOf55"
        } ]
      },
      "STICKERCREATE" : {
        "title" : "STICKER_CREATE",
        "type" : "integer",
        "enum" : [ 90 ]
      },
      "MESSAGEBULKDELETE" : {
        "title" : "MESSAGE_BULK_DELETE",
        "type" : "integer",
        "enum" : [ 73 ]
      },
      "ThreadResponse" : {
        "title" : "ThreadResponse",
        "required" : [ "flags", "guild_id", "id", "member_count", "message_count", "name", "owner_id", "total_message_sent", "type" ],
        "type" : "object",
        "properties" : {
          "last_pin_timestamp" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true,
            "x-ballerina-name" : "lastPinTimestamp"
          },
          "rate_limit_per_user" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "rateLimitPerUser"
          },
          "owner_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "ownerId"
          },
          "flags" : {
            "type" : "integer",
            "format" : "int32"
          },
          "bitrate" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ChannelTypes"
          },
          "user_limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "x-ballerina-name" : "userLimit"
          },
          "message_count" : {
            "type" : "integer",
            "format" : "int32",
            "x-ballerina-name" : "messageCount"
          },
          "total_message_sent" : {
            "type" : "integer",
            "format" : "int32",
            "x-ballerina-name" : "totalMessageSent"
          },
          "last_message_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "lastMessageId"
          },
          "rtc_region" : {
            "type" : "string",
            "nullable" : true,
            "x-ballerina-name" : "rtcRegion"
          },
          "parent_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "oneOf" : [ {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "parentId"
          },
          "permissions" : {
            "type" : "string",
            "nullable" : true
          },
          "guild_id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string",
            "x-ballerina-name" : "guildId"
          },
          "name" : {
            "type" : "string"
          },
          "member" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ThreadMemberResponse"
            }, {
              "nullable" : true
            } ]
          },
          "id" : {
            "pattern" : "^(0|[1-9][0-9]*)$",
            "type" : "string"
          },
          "thread_metadata" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ThreadMetadataResponse"
            }, {
              "nullable" : true
            } ],
            "x-ballerina-name" : "threadMetadata"
          },
          "member_count" : {
            "type" : "integer",
            "format" : "int32",
            "x-ballerina-name" : "memberCount"
          },
          "video_quality_mode" : {
            "allOf" : [ {
              "oneOf" : [ {
                "nullable" : true
              }, {
                "$ref" : "#/components/schemas/VideoQualityModes"
              } ]
            }, { } ],
            "x-ballerina-name" : "videoQualityMode"
          },
          "applied_tags" : {
            "type" : "array",
            "description" : "",
            "nullable" : true,
            "items" : {
              "pattern" : "^(0|[1-9][0-9]*)$",
              "type" : "string"
            },
            "x-ballerina-name" : "appliedTags"
          }
        }
      }
    },
    "securitySchemes" : {
      "BotToken" : {
        "type" : "apiKey",
        "description" : "Discord bot token",
        "name" : "Authorization",
        "in" : "header",
        "x-ballerina-name" : "authorization"
      },
      "OAuth2" : {
        "type" : "oauth2",
        "flows" : {
          "implicit" : {
            "authorizationUrl" : "discord.com/oauth2/authorize",
            "scopes" : {
              "activities.read" : "allows your app to fetch data from a user's \"Now Playing/Recently Played\" list - requires Discord approval",
              "activities.write" : "allows your app to update a user's activity - requires Discord approval (NOT REQUIRED FOR GAMESDK ACTIVITY MANAGER)",
              "applications.builds.read" : "allows your app to read build data for a user's applications",
              "applications.builds.upload" : "allows your app to upload/update builds for a user's applications - requires Discord approval",
              "applications.commands" : "allows your app to use commands in a guild",
              "applications.commands.permissions.update" : "allows your app to update permissions for its commands in a guild a user has permissions to",
              "applications.entitlements" : "allows your app to read entitlements for a user's applications",
              "applications.store.update" : "allows your app to read and update store data (SKUs, store listings, achievements, etc.) for a user's applications",
              "bot" : "for oauth2 bots, this puts the bot in the user's selected guild by default",
              "connections" : "allows /users/@me/connections to return linked third-party accounts",
              "dm_channels.read" : "allows your app to see information about the user's DMs and group DMs - requires Discord approval",
              "email" : "enables /users/@me to return an email",
              "gdm.join" : "allows your app to join users to a group dm",
              "guilds" : "allows /users/@me/guilds to return basic information about all of a user's guilds",
              "guilds.join" : "allows /guilds/{guild.id}/members/{user.id} to be used for joining users to a guild",
              "guilds.members.read" : "allows /users/@me/guilds/{guild.id}/member to return a user's member information in a guild",
              "identify" : "allows /users/@me without email",
              "messages.read" : "for local rpc server api access, this allows you to read messages from all client channels (otherwise restricted to channels/guilds your app creates)",
              "openid" : "for OpenID Connect, this allows your app to receive user id and basic profile information",
              "relationships.read" : "allows your app to know a user's friends and implicit relationships - requires Discord approval",
              "rpc" : "for local rpc server access, this allows you to control a user's local Discord client - requires Discord approval",
              "rpc.activities.write" : "for local rpc server access, this allows you to update a user's activity - requires Discord approval",
              "rpc.notifications.read" : "for local rpc server access, this allows you to receive notifications pushed out to the user - requires Discord approval",
              "rpc.screenshare.read" : "for local rpc server access, this allows you to read a user's screenshare status- requires Discord approval",
              "rpc.screenshare.write" : "for local rpc server access, this allows you to update a user's screenshare settings- requires Discord approval",
              "rpc.video.read" : "for local rpc server access, this allows you to read a user's video status - requires Discord approval",
              "rpc.video.write" : "for local rpc server access, this allows you to update a user's video settings - requires Discord approval",
              "rpc.voice.read" : "for local rpc server access, this allows you to read a user's voice settings and listen for voice events - requires Discord approval",
              "rpc.voice.write" : "for local rpc server access, this allows you to update a user's voice settings - requires Discord approval",
              "voice" : "allows your app to connect to voice on user's behalf and see all the voice members - requires Discord approval",
              "webhook.incoming" : "this generates a webhook that is returned in the oauth token response for authorization code grants",
              "applications.commands.update" : "",
              "role_connections.write" : ""
            }
          },
          "clientCredentials" : {
            "tokenUrl" : "https://discord.com/api/oauth2/token",
            "scopes" : {
              "activities.read" : "allows your app to fetch data from a user's \"Now Playing/Recently Played\" list - requires Discord approval",
              "activities.write" : "allows your app to update a user's activity - requires Discord approval (NOT REQUIRED FOR GAMESDK ACTIVITY MANAGER)",
              "applications.builds.read" : "allows your app to read build data for a user's applications",
              "applications.builds.upload" : "allows your app to upload/update builds for a user's applications - requires Discord approval",
              "applications.commands" : "allows your app to use commands in a guild",
              "applications.commands.permissions.update" : "allows your app to update permissions for its commands in a guild a user has permissions to",
              "applications.commands.update" : "allows your app to update its commands using a Bearer token - client credentials grant only",
              "applications.entitlements" : "allows your app to read entitlements for a user's applications",
              "applications.store.update" : "allows your app to read and update store data (SKUs, store listings, achievements, etc.) for a user's applications",
              "bot" : "for oauth2 bots, this puts the bot in the user's selected guild by default",
              "connections" : "allows /users/@me/connections to return linked third-party accounts",
              "dm_channels.read" : "allows your app to see information about the user's DMs and group DMs - requires Discord approval",
              "email" : "enables /users/@me to return an email",
              "gdm.join" : "allows your app to join users to a group dm",
              "guilds" : "allows /users/@me/guilds to return basic information about all of a user's guilds",
              "guilds.join" : "allows /guilds/{guild.id}/members/{user.id} to be used for joining users to a guild",
              "guilds.members.read" : "allows /users/@me/guilds/{guild.id}/member to return a user's member information in a guild",
              "identify" : "allows /users/@me without email",
              "messages.read" : "for local rpc server api access, this allows you to read messages from all client channels (otherwise restricted to channels/guilds your app creates)",
              "openid" : "for OpenID Connect, this allows your app to receive user id and basic profile information",
              "relationships.read" : "allows your app to know a user's friends and implicit relationships - requires Discord approval",
              "rpc" : "for local rpc server access, this allows you to control a user's local Discord client - requires Discord approval",
              "rpc.activities.write" : "for local rpc server access, this allows you to update a user's activity - requires Discord approval",
              "rpc.notifications.read" : "for local rpc server access, this allows you to receive notifications pushed out to the user - requires Discord approval",
              "rpc.screenshare.read" : "for local rpc server access, this allows you to read a user's screenshare status- requires Discord approval",
              "rpc.screenshare.write" : "for local rpc server access, this allows you to update a user's screenshare settings- requires Discord approval",
              "rpc.video.read" : "for local rpc server access, this allows you to read a user's video status - requires Discord approval",
              "rpc.video.write" : "for local rpc server access, this allows you to update a user's video settings - requires Discord approval",
              "rpc.voice.read" : "for local rpc server access, this allows you to read a user's voice settings and listen for voice events - requires Discord approval",
              "rpc.voice.write" : "for local rpc server access, this allows you to update a user's voice settings - requires Discord approval",
              "voice" : "allows your app to connect to voice on user's behalf and see all the voice members - requires Discord approval",
              "webhook.incoming" : "this generates a webhook that is returned in the oauth token response for authorization code grants",
              "role_connections.write" : ""
            }
          },
          "authorizationCode" : {
            "authorizationUrl" : "discord.com/oauth2/authorize",
            "tokenUrl" : "https://discord.com/api/oauth2/token",
            "scopes" : {
              "activities.read" : "allows your app to fetch data from a user's \"Now Playing/Recently Played\" list - requires Discord approval",
              "activities.write" : "allows your app to update a user's activity - requires Discord approval (NOT REQUIRED FOR GAMESDK ACTIVITY MANAGER)",
              "applications.builds.read" : "allows your app to read build data for a user's applications",
              "applications.builds.upload" : "allows your app to upload/update builds for a user's applications - requires Discord approval",
              "applications.commands" : "allows your app to use commands in a guild",
              "applications.commands.permissions.update" : "allows your app to update permissions for its commands in a guild a user has permissions to",
              "applications.entitlements" : "allows your app to read entitlements for a user's applications",
              "applications.store.update" : "allows your app to read and update store data (SKUs, store listings, achievements, etc.) for a user's applications",
              "bot" : "for oauth2 bots, this puts the bot in the user's selected guild by default",
              "connections" : "allows /users/@me/connections to return linked third-party accounts",
              "dm_channels.read" : "allows your app to see information about the user's DMs and group DMs - requires Discord approval",
              "email" : "enables /users/@me to return an email",
              "gdm.join" : "allows your app to join users to a group dm",
              "guilds" : "allows /users/@me/guilds to return basic information about all of a user's guilds",
              "guilds.join" : "allows /guilds/{guild.id}/members/{user.id} to be used for joining users to a guild",
              "guilds.members.read" : "allows /users/@me/guilds/{guild.id}/member to return a user's member information in a guild",
              "identify" : "allows /users/@me without email",
              "messages.read" : "for local rpc server api access, this allows you to read messages from all client channels (otherwise restricted to channels/guilds your app creates)",
              "openid" : "for OpenID Connect, this allows your app to receive user id and basic profile information",
              "relationships.read" : "allows your app to know a user's friends and implicit relationships - requires Discord approval",
              "role_connections.write" : "allows your app to update a user's connection and metadata for the app",
              "rpc" : "for local rpc server access, this allows you to control a user's local Discord client - requires Discord approval",
              "rpc.activities.write" : "for local rpc server access, this allows you to update a user's activity - requires Discord approval",
              "rpc.notifications.read" : "for local rpc server access, this allows you to receive notifications pushed out to the user - requires Discord approval",
              "rpc.screenshare.read" : "for local rpc server access, this allows you to read a user's screenshare status- requires Discord approval",
              "rpc.screenshare.write" : "for local rpc server access, this allows you to update a user's screenshare settings- requires Discord approval",
              "rpc.video.read" : "for local rpc server access, this allows you to read a user's video status - requires Discord approval",
              "rpc.video.write" : "for local rpc server access, this allows you to update a user's video settings - requires Discord approval",
              "rpc.voice.read" : "for local rpc server access, this allows you to read a user's voice settings and listen for voice events - requires Discord approval",
              "rpc.voice.write" : "for local rpc server access, this allows you to update a user's voice settings - requires Discord approval",
              "voice" : "allows your app to connect to voice on user's behalf and see all the voice members - requires Discord approval",
              "webhook.incoming" : "this generates a webhook that is returned in the oauth token response for authorization code grants",
              "applications.commands.update" : ""
            }
          }
        }
      }
    }
  }
}