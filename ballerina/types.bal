// AUTO-GENERATED FILE. DO NOT MODIFY.
// This file is auto-generated by the Ballerina OpenAPI tool.

// Copyright (c) 2024, WSO2 LLC. (http://www.wso2.com).
//
// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

import ballerina/constraint;
import ballerina/data.jsondata;
import ballerina/http;

public type KeywordUpsertRequestPartialExemptrolesItemsString string;

public type VOICECHANNELSTATUSCREATE 192;

# the metadata value (ISO8601 string) is greater than or equal to the guild's configured value (integer; days before current date)
public type DATETIMEGREATERTHANEQUAL 6;

# Represents the Headers record for the operation: update_webhook_message
public type UpdateWebhookMessageHeaders record {
    # 
    @http:Header {name: "Content-Type"}
    "application/x-www-form-urlencoded" contentType;
};

# The zh-CN locale
public type ZhCN "zh-CN";

public type CommandPermissionResponse record {
    boolean permission;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    ApplicationCommandPermissionType 'type;
};

public type PrivateChannelRequestPartial record {
    string? name?;
    record {byte[] fileContent; string fileName;}? icon?;
};

public type GuildCreateRequest record {
    @jsondata:Name {value: "preferred_locale"}
    anydata preferredLocale?;
    @jsondata:Name {value: "default_message_notifications"}
    anydata defaultMessageNotifications?;
    # 
    CreateGuildRequestRoleItem[]? roles?;
    @jsondata:Name {value: "system_channel_flags"}
    int:Signed32? systemChannelFlags?;
    record {byte[] fileContent; string fileName;}? icon?;
    string? description?;
    @jsondata:Name {value: "system_channel_id"}
    anydata systemChannelId?;
    @jsondata:Name {value: "afk_timeout"}
    anydata afkTimeout?;
    @jsondata:Name {value: "verification_level"}
    anydata verificationLevel?;
    @jsondata:Name {value: "explicit_content_filter"}
    anydata explicitContentFilter?;
    # 
    CreateGuildRequestChannelItem[]? channels?;
    @jsondata:Name {value: "afk_channel_id"}
    anydata afkChannelId?;
    @constraint:String {maxLength: 100, minLength: 2}
    string name;
    string? region?;
};

public type INVITEUPDATE 41;

public type GithubCheckSuite record {
    string? conclusion?;
    GithubCheckApp app;
    # 
    @jsondata:Name {value: "pull_requests"}
    GithubCheckPullRequest[]? pullRequests?;
    @jsondata:Name {value: "head_branch"}
    string? headBranch?;
    @jsondata:Name {value: "head_sha"}
    string headSha;
};

public type GuildAuditLogResponseIntegrations PartialDiscordIntegrationResponse|PartialExternalConnectionIntegrationResponse|PartialGuildSubscriptionIntegrationResponse;

public type PurchaseType GUILDPRODUCT;

public type ROLEDELETE 32;

public type UserSelect record {
    # 
    @jsondata:Name {value: "default_values"}
    UserSelectDefaultValue[]? defaultValues?;
    @jsondata:Name {value: "min_values"}
    int:Signed32? minValues?;
    @jsondata:Name {value: "custom_id"}
    string customId;
    @jsondata:Name {value: "max_values"}
    int:Signed32? maxValues?;
    boolean? disabled?;
    string? placeholder?;
    5 'type;
};

public type WelcomeMessageResponseAuthoridsItemsString string;

public type CreatePrivateChannelRequestAccesstokensItemsString string;

public type OptionsOneOf101 anydata?;

public type THREADUPDATE 111;

# Check if content contains more unique mentions than allowed
public type MENTIONSPAM 5;

public type EMOJICREATE 60;

public type HOMESETTINGSUPDATE 191;

public type ApplicationCommandStringOptionResponse record {
    @jsondata:Name {value: "name_localized"}
    string? nameLocalized?;
    @jsondata:Name {value: "name_localizations"}
    record {|string...;|}? nameLocalizations?;
    boolean? autocomplete?;
    @jsondata:Name {value: "min_length"}
    int:Signed32? minLength?;
    string name;
    string description;
    @jsondata:Name {value: "description_localized"}
    string? descriptionLocalized?;
    @jsondata:Name {value: "description_localizations"}
    record {|string...;|}? descriptionLocalizations?;
    3 'type;
    # 
    ApplicationCommandOptionStringChoiceResponse[]? choices?;
    boolean? required?;
    @jsondata:Name {value: "max_length"}
    int:Signed32? maxLength?;
};

public type ConnectedAccountGuildResponse record {
    string name;
    string? icon?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
};

# The sv-SE locale
public type SvSE "sv-SE";

public type APPLICATIONCOMMANDAUTOCOMPLETERESULT 8;

public type ExternalScheduledEventResponse record {
    string? image?;
    anydata creator?;
    @jsondata:Name {value: "privacy_level"}
    GuildScheduledEventPrivacyLevels privacyLevel;
    @jsondata:Name {value: "entity_metadata"}
    EntityMetadataExternalResponse entityMetadata;
    string? description?;
    @jsondata:Name {value: "entity_id"}
    anydata entityId?;
    @jsondata:Name {value: "scheduled_end_time"}
    string? scheduledEndTime?;
    @jsondata:Name {value: "entity_type"}
    3 entityType;
    @jsondata:Name {value: "user_rsvp"}
    anydata userRsvp?;
    @jsondata:Name {value: "user_count"}
    int:Signed32? userCount?;
    @jsondata:Name {value: "guild_id"}
    string guildId;
    string name;
    @jsondata:Name {value: "creator_id"}
    anydata creatorId?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    @jsondata:Name {value: "channel_id"}
    anydata channelId?;
    @jsondata:Name {value: "scheduled_start_time"}
    string scheduledStartTime;
    GuildScheduledEventStatuses status;
};

public type GuildsMembersRequestRoles RolesOneOf13|RolesRolesOneOf132?;

public type GUILDHOMEREMOVEITEM 172;

public type DOMAIN "domain";

public type INSTAGRAM "instagram";

public type InviteGuildResponse record {
    # 
    GuildFeatures[] features;
    @jsondata:Name {value: "verification_level"}
    anydata verificationLevel?;
    boolean? nsfw?;
    @jsondata:Name {value: "vanity_url_code"}
    string? vanityUrlCode?;
    string name;
    string? icon?;
    string? banner?;
    string? description?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    @jsondata:Name {value: "premium_subscription_count"}
    int:Signed32? premiumSubscriptionCount?;
    @jsondata:Name {value: "nsfw_level"}
    anydata nsfwLevel?;
    string? splash?;
};

# guild has paused invites, preventing new users from joining
public type INVITESDISABLED "INVITES_DISABLED";

public type MLSpamUpsertRequest record {
    @jsondata:Name {value: "event_type"}
    AutomodEventType eventType;
    @jsondata:Name {value: "trigger_type"}
    3 triggerType;
    @constraint:String {maxLength: 100}
    string name;
    # 
    @jsondata:Name {value: "exempt_roles"}
    MLSpamUpsertRequestExemptrolesItemsString[]? exemptRoles?;
    # 
    @jsondata:Name {value: "exempt_channels"}
    MLSpamUpsertRequestExemptchannelsItemsString[]? exemptChannels?;
    # 
    MLSpamUpsertRequestActions[]? actions?;
    boolean? enabled?;
    @jsondata:Name {value: "trigger_metadata"}
    anydata triggerMetadata?;
};

public type InlineArrayItemsSkuIdsSkuIdsOneOf12 SkuIdsSkuIdsOneOf12OneOf1;

public type GuildScheduledEventEntityTypes NONE|STAGEINSTANCE|VOICE1|EXTERNAL;

# Represents the Queries record for the operation: update_webhook_message
public type UpdateWebhookMessageQueries record {
    # 
    @http:Query {name: "thread_id"}
    string threadId?;
};

public type UpdateThreadRequestPartialAppliedtagsItemsString string;

# The ar locale
public type Ar "ar";

# A UI-based command that shows up when you right click or tap on a message
public type MESSAGE 3;

public type StickerFormatTypes PNG|APNG|LOTTIE|GIF;

public type GithubDiscussion record {
    int:Signed32 number;
    @jsondata:Name {value: "answer_html_url"}
    string? answerHtmlUrl?;
    @jsondata:Name {value: "html_url"}
    string htmlUrl;
    @constraint:String {maxLength: 152133}
    string title;
    string? body?;
    GithubUser user;
};

public type MentionableSelectDefaultValues RoleSelectDefaultValue|UserSelectDefaultValue|DefaultValuesOneOf3?;

public type BOTADD 28;

public type THREADSTARTERMESSAGE 21;

public type RECIPIENTREMOVE 2;

public type GUILDBOOSTTIER1 9;

public type SUCCESS 3;

# The bg locale
public type Bg "bg";

public type OptionsOneOf123 anydata?;

# allows /users/@me/guilds/{guild.id}/member to return a user's member information in a guild
public type GUILDSMEMBERSREAD "guilds.members.read";

public type OptionsOneOf122 anydata?;

public type OptionsOneOf121 anydata?;

public type GuildMFALevel NONE3|ELEVATED;

public type WebhookIdwebhookTokenBody IncomingWebhookRequestPartial|IncomingWebhookUpdateRequestPartial;

# Represents the Queries record for the operation: delete_original_webhook_message
public type DeleteOriginalWebhookMessageQueries record {
    # 
    @http:Query {name: "thread_id"}
    string threadId?;
};

# guild has access to set a vanity URL
public type VANITYURL "VANITY_URL";

public type MEMBERMOVE 26;

public type MessagesoriginalBody record {
    # 
    ActionRow[]? components?;
    # 
    MessageAttachmentRequest[]? attachments?;
    int:Signed32? flags?;
    @jsondata:Name {value: "allowed_mentions"}
    anydata allowedMentions?;
    # 
    RichEmbed[]? embeds?;
    string? content?;
};

@constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
public type PrivateGuildMemberResponseRolesItemsString string;

public type ApplicationCommandChannelOptionResponse record {
    @jsondata:Name {value: "name_localized"}
    string? nameLocalized?;
    @jsondata:Name {value: "name_localizations"}
    record {|string...;|}? nameLocalizations?;
    string name;
    string description;
    # 
    @jsondata:Name {value: "channel_types"}
    ChannelTypes[]? channelTypes?;
    @jsondata:Name {value: "description_localized"}
    string? descriptionLocalized?;
    @jsondata:Name {value: "description_localizations"}
    record {|string...;|}? descriptionLocalizations?;
    7 'type;
    boolean? required?;
};

public type MentionChannelsOneOf21 anydata?;

public type MessageEmbedProviderResponse record {
    string name;
    string? url?;
};

public type IncomingWebhookUpdateForInteractionCallbackRequestPartial record {
    # 
    ActionRow[]? components?;
    # 
    MessageAttachmentRequest[]? attachments?;
    int:Signed32? flags?;
    @jsondata:Name {value: "allowed_mentions"}
    anydata allowedMentions?;
    # 
    RichEmbed[]? embeds?;
    string? content?;
};

public type UsersUsersOneOf12 anydata?;

public type SOUNDBOARDSOUNDDELETE 132;

# A text channel within a server
public type GUILDTEXT 0;

public type GuildsTemplatesRequest record {
    @constraint:String {maxLength: 100, minLength: 2}
    string name;
    record {byte[] fileContent; string fileName;}? icon?;
};

# guild has set up auto moderation rules
public type AUTOMODERATION "AUTO_MODERATION";

public type GuildsChannelsRequest record {
    @jsondata:Name {value: "lock_permissions"}
    boolean? lockPermissions?;
    @jsondata:Name {value: "parent_id"}
    anydata parentId?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id?;
    int:Signed32? position?;
};

# OAuth2 Client Credentials Grant Configs
public type OAuth2ClientCredentialsGrantConfig record {|
    *http:OAuth2ClientCredentialsGrantConfig;
    # Token URL
    string tokenUrl = "https://discord.com/api/oauth2/token";
|};

# the metadata value (integer) is equal to the guild's configured value (integer; 1)
public type BOOLEANEQUAL 7;

public type KeywordRuleResponseExemptchannelsItemsString string;

public type OnboardingPromptOptionResponse record {
    # 
    @jsondata:Name {value: "channel_ids"}
    OnboardingPromptOptionResponseChannelidsItemsString[] channelIds;
    SettingsEmojiResponse emoji;
    string description;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    string title;
    # 
    @jsondata:Name {value: "role_ids"}
    OnboardingPromptOptionResponseRoleidsItemsString[] roleIds;
};

public type GuildsMembersRequest1 record {
    string? nick?;
    @jsondata:Name {value: "communication_disabled_until"}
    string? communicationDisabledUntil?;
    # 
    GuildsMembersRequest1Roles[]? roles?;
    boolean? deaf?;
    int:Signed32? flags?;
    boolean? mute?;
    @jsondata:Name {value: "channel_id"}
    anydata channelId?;
};

# A direct message between users
public type DM 1;

# enables /users/@me to return an email
public type EMAIL "email";

# The cs locale
public type Cs "cs";

public type StageInstancesRequest record {
    @jsondata:Name {value: "privacy_level"}
    anydata privacyLevel?;
    @jsondata:Name {value: "send_start_notification"}
    boolean? sendStartNotification?;
    @constraint:String {maxLength: 120, minLength: 1}
    string topic;
    @jsondata:Name {value: "guild_scheduled_event_id"}
    anydata guildScheduledEventId?;
    @jsondata:Name {value: "channel_id"}
    string channelId;
};

public type GuildWelcomeChannel record {
    @constraint:String {maxLength: 50, minLength: 1}
    string description;
    @jsondata:Name {value: "emoji_id"}
    anydata emojiId?;
    @jsondata:Name {value: "emoji_name"}
    string? emojiName?;
    @jsondata:Name {value: "channel_id"}
    string channelId;
};

# guild is able to be discovered in the directory
public type DISCOVERABLE "DISCOVERABLE";

public type KeywordTriggerMetadataResponse record {
    # 
    @jsondata:Name {value: "keyword_filter"}
    string[] keywordFilter;
    # 
    @jsondata:Name {value: "allow_list"}
    string[] allowList;
    # 
    @jsondata:Name {value: "regex_patterns"}
    string[] regexPatterns;
};

# The da locale
public type Da "da";

public type MessageType DEFAULT|RECIPIENTADD|RECIPIENTREMOVE|CALL|CHANNELNAMECHANGE|CHANNELICONCHANGE|CHANNELPINNEDMESSAGE|USERJOIN|GUILDBOOST|GUILDBOOSTTIER1|GUILDBOOSTTIER2|GUILDBOOSTTIER3|CHANNELFOLLOWADD|GUILDDISCOVERYDISQUALIFIED|GUILDDISCOVERYREQUALIFIED|GUILDDISCOVERYGRACEPERIODINITIALWARNING|GUILDDISCOVERYGRACEPERIODFINALWARNING|THREADCREATED|REPLY|CHATINPUTCOMMAND|THREADSTARTERMESSAGE|GUILDINVITEREMINDER|CONTEXTMENUCOMMAND|AUTOMODERATIONACTION|ROLESUBSCRIPTIONPURCHASE|INTERACTIONPREMIUMUPSELL|STAGESTART|STAGEEND|STAGESPEAKER|STAGETOPIC|GUILDAPPLICATIONPREMIUMSUBSCRIPTION|GUILDINCIDENTALERTMODEENABLED|GUILDINCIDENTALERTMODEDISABLED|GUILDINCIDENTREPORTRAID|GUILDINCIDENTREPORTFALSEALARM;

public type '200AnyOf4 anydata?;

# Represents the Queries record for the operation: list_guild_audit_log_entries
public type ListGuildAuditLogEntriesQueries record {
    # 
    @http:Query {name: "user_id"}
    string userId?;
    # 
    @http:Query {name: "action_type"}
    int:Signed32 actionType?;
    # 
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string before?;
    # 
    @constraint:Int {minValue: 1, maxValue: 100}
    int:Signed32 'limit?;
    # 
    @http:Query {name: "target_id"}
    string targetId?;
    # 
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string after?;
};

public type ConnectedAccountResponse record {
    @jsondata:Name {value: "friend_sync"}
    boolean friendSync;
    @jsondata:Name {value: "show_activity"}
    boolean showActivity;
    ConnectedAccountVisibility visibility;
    @jsondata:Name {value: "two_way_link"}
    boolean twoWayLink;
    string? name?;
    boolean verified;
    string id;
    ConnectedAccountProviders 'type;
    boolean? revoked?;
    # 
    ConnectedAccountIntegrationResponse[]? integrations?;
};

# The de locale
public type De "de";

public type RichEmbedAuthor record {
    @jsondata:Name {value: "icon_url"}
    string? iconUrl?;
    string? name?;
    string? url?;
};

# guild has enabled the role subscription promo page
public type CREATORSTOREPAGE "CREATOR_STORE_PAGE";

public type YOUTUBE "youtube";

public type GithubRepository record {
    @jsondata:Name {value: "full_name"}
    string fullName;
    @jsondata:Name {value: "html_url"}
    string htmlUrl;
    @constraint:String {maxLength: 152133}
    string name;
    int:Signed32 id;
};

public type ApplicationRoleConnectionsMetadataItemRequest record {
    @jsondata:Name {value: "name_localizations"}
    record {|string?...;|}? nameLocalizations?;
    @constraint:String {maxLength: 100, minLength: 1}
    string name;
    @constraint:String {maxLength: 200, minLength: 1}
    string description;
    @jsondata:Name {value: "description_localizations"}
    record {|string?...;|}? descriptionLocalizations?;
    MetadataItemTypes 'type;
    @constraint:String {maxLength: 50, minLength: 1}
    string 'key;
};

public type OnboardingPromptOptionRequestChannelidsItemsString string;

public type MessageComponentButtonResponse record {
    anydata emoji?;
    @jsondata:Name {value: "custom_id"}
    string? customId?;
    ButtonStyleTypes style;
    boolean? disabled?;
    @jsondata:Name {value: "sku_id"}
    anydata skuId?;
    int:Signed32 id;
    string? label?;
    2 'type;
    string? url?;
};

# guild can be previewed before joining via Membership Screening or the directory
public type PREVIEWENABLED "PREVIEW_ENABLED";

public type GithubCheckPullRequest record {
    int:Signed32 number;
};

public type ApplicationOAuth2InstallParams record {
    int:Signed32? permissions?;
    # 
    OAuth2Scopes[]? scopes?;
};

public type GuildTemplateSnapshotResponse record {
    @jsondata:Name {value: "preferred_locale"}
    AvailableLocalesEnum preferredLocale;
    @jsondata:Name {value: "default_message_notifications"}
    UserNotificationSettings defaultMessageNotifications;
    @jsondata:Name {value: "system_channel_flags"}
    int:Signed32 systemChannelFlags;
    # 
    GuildTemplateRoleResponse[] roles;
    string? description?;
    @jsondata:Name {value: "system_channel_id"}
    anydata systemChannelId?;
    @jsondata:Name {value: "afk_timeout"}
    AfkTimeouts afkTimeout;
    @jsondata:Name {value: "verification_level"}
    VerificationLevels verificationLevel;
    @jsondata:Name {value: "explicit_content_filter"}
    GuildExplicitContentFilterTypes explicitContentFilter;
    # 
    GuildTemplateChannelResponse[] channels;
    @jsondata:Name {value: "afk_channel_id"}
    anydata afkChannelId?;
    string name;
    string? region?;
};

public type MentionSpamRuleResponse record {
    @jsondata:Name {value: "event_type"}
    AutomodEventType eventType;
    @jsondata:Name {value: "trigger_type"}
    5 triggerType;
    @jsondata:Name {value: "guild_id"}
    string guildId;
    @jsondata:Name {value: "creator_id"}
    string creatorId;
    string name;
    # 
    @jsondata:Name {value: "exempt_roles"}
    MentionSpamRuleResponseExemptrolesItemsString[]? exemptRoles?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    # 
    @jsondata:Name {value: "exempt_channels"}
    MentionSpamRuleResponseExemptchannelsItemsString[]? exemptChannels?;
    # 
    DefaultKeywordRuleResponseActions[] actions;
    boolean? enabled?;
    @jsondata:Name {value: "trigger_metadata"}
    MentionSpamTriggerMetadataResponse triggerMetadata;
};

public type GUILDINCIDENTALERTMODEDISABLED 37;

# The el locale
public type El "el";

public type ZEROES "0000";

public type MetadataItemTypes INTEGERLESSTHANEQUAL|INTEGERGREATERTHANEQUAL|INTEGEREQUAL|INTEGERNOTEQUAL|DATETIMELESSTHANEQUAL|DATETIMEGREATERTHANEQUAL|BOOLEANEQUAL|BOOLEANNOTEQUAL;

public type CreateGuildRequestRoleItem record {
    int:Signed32? color?;
    @jsondata:Name {value: "unicode_emoji"}
    string? unicodeEmoji?;
    int:Signed32? permissions?;
    string? name?;
    boolean? mentionable?;
    int:Signed32 id;
    boolean? hoist?;
};

public type UsersMeApplicationsRoleConnectionRequest record {
    record {|string...;|}? metadata?;
    @jsondata:Name {value: "platform_username"}
    string? platformUsername?;
    @jsondata:Name {value: "platform_name"}
    string? platformName?;
};

public type WebhookSlackEmbedField record {
    boolean? inline?;
    string? name?;
    string? value?;
};

public type GUILDSCHEDULEDEVENTUPDATE 101;

# OAuth2 Refresh Token Grant Configs
public type OAuth2RefreshTokenGrantConfig record {|
    *http:OAuth2RefreshTokenGrantConfig;
    # Refresh URL
    string refreshUrl = "https://discord.com/api/oauth2/token";
|};

public type BlockMessageActionResponse record {
    BlockMessageActionMetadataResponse metadata;
    1 'type;
};

public type DiscordIntegrationResponse record {
    IntegrationApplicationResponse application;
    string? name?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    # 
    OAuth2Scopes[] scopes;
    "discord" 'type;
    anydata user?;
    anydata account?;
    boolean? enabled?;
};

public type TeamMembershipStates INVITED|ACCEPTED;

public type LEAGUEOFLEGENDS "leagueoflegends";

# The fi locale
public type Fi "fi";

# Words and phrases that may be considered slurs and hate speech
public type SLURS 3;

public type ApplicationCommandPermissionType ROLE1|USER2|CHANNEL1;

# The fr locale
public type Fr "fr";

public type PrivateGroupChannelResponse record {
    @jsondata:Name {value: "last_message_id"}
    anydata lastMessageId?;
    @jsondata:Name {value: "last_pin_timestamp"}
    string? lastPinTimestamp?;
    # 
    UserResponse[] recipients;
    @jsondata:Name {value: "owner_id"}
    anydata ownerId?;
    boolean? managed?;
    int:Signed32 flags;
    string? name?;
    string? icon?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    3 'type;
    @jsondata:Name {value: "application_id"}
    anydata applicationId?;
};

# Single-line input
public type SHORT 1;

# for local rpc server access, this allows you to receive notifications pushed out to the user - requires Discord approval
public type RPCNOTIFICATIONSREAD "rpc.notifications.read";

# this generates a webhook that is returned in the oauth token response for authorization code grants
public type WEBHOOKINCOMING "webhook.incoming";

public type DefaultKeywordListTriggerMetadata record {
    # 
    AutomodKeywordPresetType[]? presets?;
    # 
    @jsondata:Name {value: "allow_list"}
    DefaultKeywordListTriggerMetadataAllowlistItemsString[]? allowList?;
};

# Many options shown as a dropdown
public type DROPDOWN 1;

public type TeamMemberResponse record {
    @jsondata:Name {value: "membership_state"}
    TeamMembershipStates membershipState;
    @jsondata:Name {value: "team_id"}
    string teamId;
    UserResponse user;
};

public type PongInteractionCallbackRequest record {
    1 'type;
};

public type UserCommunicationDisabledActionResponse record {
    UserCommunicationDisabledActionMetadataResponse metadata;
    3 'type;
};

public type CreateTextThreadWithoutMessageRequest record {
    @jsondata:Name {value: "rate_limit_per_user"}
    int:Signed32? rateLimitPerUser?;
    @constraint:String {maxLength: 100, minLength: 1}
    string name;
    boolean? invitable?;
    anydata 'type?;
    @jsondata:Name {value: "auto_archive_duration"}
    anydata autoArchiveDuration?;
};

public type GuildsEmojisRequest record {
    # 
    GuildsEmojisRequestRoles[]? roles?;
    @constraint:String {maxLength: 32, minLength: 2}
    string name?;
};

# Guild has a 2FA requirement for moderation actions
public type ELEVATED 1;

public type IncludeRoles IncludeRolesOneOf1|IncludeRolesIncludeRolesOneOf12;

# guild is verified
public type VERIFIED "VERIFIED";

public type AutomodEventType MESSAGESEND|GUILDMEMBERJOINORUPDATE;

public type MessagesmessageIdBody record {
    # 
    ActionRow[]? components?;
    # 
    MessageAttachmentRequest[]? attachments?;
    # 
    @jsondata:Name {value: "sticker_ids"}
    MessagesmessageIdBodyStickeridsItemsString[]? stickerIds?;
    int:Signed32? flags?;
    @jsondata:Name {value: "allowed_mentions"}
    anydata allowedMentions?;
    # 
    RichEmbed[]? embeds?;
    string? content?;
};

public type ApplicationCommandAttachmentOption record {
    @jsondata:Name {value: "name_localizations"}
    record {|string...;|}? nameLocalizations?;
    @constraint:String {maxLength: 32, minLength: 1}
    string name;
    @constraint:String {maxLength: 100, minLength: 1}
    string description;
    @jsondata:Name {value: "description_localizations"}
    record {|string...;|}? descriptionLocalizations?;
    11 'type;
    boolean? required?;
};

public type GuildTemplateChannelTags record {
    boolean? moderated?;
    string name;
    @jsondata:Name {value: "emoji_id"}
    anydata emojiId?;
    @jsondata:Name {value: "emoji_name"}
    string? emojiName?;
};

# User has accepted the team invitation
public type ACCEPTED 2;

# This permission is for a user
public type USER2 2;

public type MessageComponentMentionableSelectResponse record {
    @jsondata:Name {value: "min_values"}
    int:Signed32? minValues?;
    @jsondata:Name {value: "custom_id"}
    string customId;
    @jsondata:Name {value: "max_values"}
    int:Signed32? maxValues?;
    boolean? disabled?;
    int:Signed32 id;
    string? placeholder?;
    7 'type;
};

public type ModalInteractionCallbackData record {
    # 
    @constraint:Array {maxLength: 5, minLength: 1}
    ActionRow[] components;
    @jsondata:Name {value: "custom_id"}
    string customId;
    @constraint:String {maxLength: 45}
    string title;
};

@constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
public type IncludeRolesIncludeRolesOneOf12OneOf1 string;

# Multiple choice options
public type MULTIPLECHOICE 0;

# The he locale
public type He "he";

# Represents the Queries record for the operation: list_message_reactions_by_emoji
public type ListMessageReactionsByEmojiQueries record {
    # 
    @constraint:Int {minValue: 1, maxValue: 100}
    int:Signed32 'limit?;
    # 
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string after?;
};

# The hi locale
public type Hi "hi";

public type MessageEmbedFooterResponse record {
    @jsondata:Name {value: "icon_url"}
    string? iconUrl?;
    @jsondata:Name {value: "proxy_icon_url"}
    string? proxyIconUrl?;
    string text;
};

public type ApplicationCommandChannelOption record {
    @jsondata:Name {value: "name_localizations"}
    record {|string...;|}? nameLocalizations?;
    @constraint:String {maxLength: 32, minLength: 1}
    string name;
    @constraint:String {maxLength: 100, minLength: 1}
    string description;
    # 
    @jsondata:Name {value: "channel_types"}
    ChannelTypes[]? channelTypes?;
    @jsondata:Name {value: "description_localizations"}
    record {|string...;|}? descriptionLocalizations?;
    7 'type;
    boolean? required?;
};

public type MessageComponentStringSelectResponse record {
    @jsondata:Name {value: "min_values"}
    int:Signed32? minValues?;
    @jsondata:Name {value: "custom_id"}
    string customId;
    @jsondata:Name {value: "max_values"}
    int:Signed32? maxValues?;
    # 
    MessageComponentStringSelectResponseOptions[]? options?;
    boolean? disabled?;
    int:Signed32 id;
    string? placeholder?;
    3 'type;
};

public type GuildsEmojisRequest1Roles RolesOneOf12|RolesRolesOneOf122?;

public type MLSpamUpsertRequestPartialExemptchannelsItemsString string;

# The hr locale
public type Hr "hr";

# Represents the Queries record for the operation: search_guild_members
public type SearchGuildMembersQueries record {
    # 
    @constraint:String {maxLength: 100, minLength: 1}
    string query;
    # 
    @constraint:Int {minValue: 1, maxValue: 1000}
    int:Signed32 'limit;
};

# The hu locale
public type Hu "hu";

public type StageInstancesRequest1 record {
    @jsondata:Name {value: "privacy_level"}
    StageInstancesPrivacyLevels privacyLevel?;
    @constraint:String {maxLength: 120, minLength: 1}
    string topic?;
};

public type SPOTIFY "spotify";

public type WidgetActivity record {
    string name;
};

public type FlagToChannelActionMetadata record {
    @jsondata:Name {value: "channel_id"}
    string channelId;
};

public type ApplicationCommandNumberOptionResponse record {
    @jsondata:Name {value: "min_value"}
    decimal? minValue?;
    @jsondata:Name {value: "name_localized"}
    string? nameLocalized?;
    @jsondata:Name {value: "name_localizations"}
    record {|string...;|}? nameLocalizations?;
    boolean? autocomplete?;
    string name;
    string description;
    @jsondata:Name {value: "description_localized"}
    string? descriptionLocalized?;
    @jsondata:Name {value: "description_localizations"}
    record {|string...;|}? descriptionLocalizations?;
    10 'type;
    # 
    ApplicationCommandOptionNumberChoiceResponse[]? choices?;
    boolean? required?;
    @jsondata:Name {value: "max_value"}
    decimal? maxValue?;
};

@constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
public type ChannelsMessagesBulkDeleteRequestMessagesItemsString string;

public type MLSpamUpsertRequestExemptchannelsItemsString string;

public type ChannelIdInvitesBody CreateGroupDMInviteRequest|CreateGuildInviteRequest;

# The id locale
public type Id "id";

# The Stage instance is visible publicly. (deprecated)
public type GUILDONLY1 2;

# Controls role mentions
public type USERS "users";

public type ONEHOUR 3600;

public type GuildTemplateRoleResponse record {
    int:Signed32 color;
    @jsondata:Name {value: "unicode_emoji"}
    string? unicodeEmoji?;
    string permissions;
    string name;
    string? icon?;
    boolean mentionable;
    int:Signed32 id;
    boolean hoist;
};

# Represents the Queries record for the operation: execute_webhook
public type ExecuteWebhookQueries record {
    # 
    boolean 'wait?;
    # 
    @http:Query {name: "thread_id"}
    string threadId?;
};

public type ApplicationCommandSubcommandGroupOption record {
    @jsondata:Name {value: "name_localizations"}
    record {|string...;|}? nameLocalizations?;
    @constraint:String {maxLength: 32, minLength: 1}
    string name;
    # 
    ApplicationCommandSubcommandOption[]? options?;
    @constraint:String {maxLength: 100, minLength: 1}
    string description;
    @jsondata:Name {value: "description_localizations"}
    record {|string...;|}? descriptionLocalizations?;
    2 'type;
    boolean? required?;
};

public type STAGESPEAKER 29;

public type CreateForumThreadRequestAppliedtagsItemsString string;

# The it locale
public type It "it";

public type StringSelect record {
    @jsondata:Name {value: "min_values"}
    int:Signed32? minValues?;
    @jsondata:Name {value: "custom_id"}
    string customId;
    @jsondata:Name {value: "max_values"}
    int:Signed32? maxValues?;
    # 
    @constraint:Array {maxLength: 25, minLength: 1}
    SelectOption[] options;
    boolean? disabled?;
    string? placeholder?;
    3 'type;
};

public type StandardStickerResponse record {
    @jsondata:Name {value: "format_type"}
    anydata formatType?;
    @jsondata:Name {value: "pack_id"}
    string packId;
    string name;
    string? description?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    @jsondata:Name {value: "sort_value"}
    int:Signed32 sortValue;
    1 'type;
    string tags;
};

public type DefaultKeywordListUpsertRequestActions BlockMessageAction|FlagToChannelAction|QuarantineUserAction|UserCommunicationDisabledAction|ActionsOneOf5?;

public type ApplicationCommandAttachmentOptionResponse record {
    @jsondata:Name {value: "name_localized"}
    string? nameLocalized?;
    @jsondata:Name {value: "name_localizations"}
    record {|string...;|}? nameLocalizations?;
    string name;
    string description;
    @jsondata:Name {value: "description_localized"}
    string? descriptionLocalized?;
    @jsondata:Name {value: "description_localizations"}
    record {|string...;|}? descriptionLocalizations?;
    11 'type;
    boolean? required?;
};

# The pt-BR locale
public type PtBR "pt-BR";

# allows your app to update a user's connection and metadata for the app
public type ROLECONNECTIONSWRITE "role_connections.write";

# The ja locale
public type Ja "ja";

# Sent by Discord to validate your application's interaction handler
public type PING 1;

@constraint:Array {maxLength: 100}
public type IncludeRolesIncludeRolesOneOf12 InlineArrayItemsIncludeRolesIncludeRolesOneOf12[];

public type ApplicationRoleConnectionsMetadataItemResponse record {
    @jsondata:Name {value: "name_localizations"}
    record {|string...;|}? nameLocalizations?;
    string name;
    string description;
    @jsondata:Name {value: "description_localizations"}
    record {|string...;|}? descriptionLocalizations?;
    MetadataItemTypes 'type;
    string 'key;
};

public type WebhookSourceChannelResponse record {
    string name;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
};

public type MLSpamRuleResponse record {
    @jsondata:Name {value: "event_type"}
    AutomodEventType eventType;
    @jsondata:Name {value: "trigger_type"}
    3 triggerType;
    @jsondata:Name {value: "guild_id"}
    string guildId;
    @jsondata:Name {value: "creator_id"}
    string creatorId;
    string name;
    # 
    @jsondata:Name {value: "exempt_roles"}
    MLSpamRuleResponseExemptrolesItemsString[]? exemptRoles?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    # 
    @jsondata:Name {value: "exempt_channels"}
    MLSpamRuleResponseExemptchannelsItemsString[]? exemptChannels?;
    # 
    DefaultKeywordRuleResponseActions[] actions;
    boolean? enabled?;
    @jsondata:Name {value: "trigger_metadata"}
    record {} triggerMetadata;
};

public type AutomodTriggerType KEYWORD|SPAMLINK|MLSPAM|DEFAULTKEYWORDLIST|MENTIONSPAM;

public type MLSpamRuleResponseExemptchannelsItemsString string;

public type GatewayBotSessionStartLimitResponse record {
    @jsondata:Name {value: "reset_after"}
    int:Signed32 resetAfter;
    @jsondata:Name {value: "max_concurrency"}
    int:Signed32 maxConcurrency;
    int:Signed32 total;
    int:Signed32 remaining;
};

public type GithubCheckRun record {
    string? conclusion?;
    anydata output?;
    # 
    @jsondata:Name {value: "pull_requests"}
    GithubCheckPullRequest[]? pullRequests?;
    @jsondata:Name {value: "html_url"}
    string htmlUrl;
    @constraint:String {maxLength: 152133}
    string name;
    @jsondata:Name {value: "check_suite"}
    GithubCheckSuite checkSuite;
    @jsondata:Name {value: "details_url"}
    string? detailsUrl?;
};

public type ApplicationCommandOptionIntegerChoiceResponse record {
    @jsondata:Name {value: "name_localized"}
    string? nameLocalized?;
    @jsondata:Name {value: "name_localizations"}
    record {|string...;|}? nameLocalizations?;
    string name;
    @constraint:Int {minValue: 1, maxValue: -1}
    int value;
};

# media content sent by all members will be scanned
public type ALLMEMBERS 2;

public type MLSpamRuleResponseExemptrolesItemsString string;

public type ThreadResponseAppliedtagsItemsString string;

public type MentionSpamUpsertRequestExemptrolesItemsString string;

# allows /users/@me without email
public type IDENTIFY "identify";

# The ko locale
public type Ko "ko";

public type GuildsRolesRequest record {
    int:Signed32? color?;
    @jsondata:Name {value: "unicode_emoji"}
    string? unicodeEmoji?;
    int:Signed32? permissions?;
    string? name?;
    record {byte[] fileContent; string fileName;}? icon?;
    boolean? mentionable?;
    boolean? hoist?;
};

public type ActionRowComponents Button|ChannelSelect|InputText|MentionableSelect|RoleSelect|StringSelect|UserSelect;

# allows your app to update a user's activity - requires Discord approval (NOT REQUIRED FOR GAMESDK ACTIVITY MANAGER)
public type ACTIVITIESWRITE "activities.write";

public type VoiceScheduledEventCreateRequest record {
    record {byte[] fileContent; string fileName;}? image?;
    @jsondata:Name {value: "entity_type"}
    2 entityType;
    @jsondata:Name {value: "privacy_level"}
    GuildScheduledEventPrivacyLevels privacyLevel;
    @constraint:String {maxLength: 100}
    string name;
    @jsondata:Name {value: "entity_metadata"}
    anydata entityMetadata?;
    string? description?;
    @jsondata:Name {value: "channel_id"}
    anydata channelId?;
    @jsondata:Name {value: "scheduled_start_time"}
    string scheduledStartTime;
    @jsondata:Name {value: "scheduled_end_time"}
    string? scheduledEndTime?;
};

public type GuildAuditLogResponse record {
    # 
    InlineResponse2004[] webhooks;
    # 
    @jsondata:Name {value: "application_commands"}
    ApplicationCommandResponse[] applicationCommands;
    # 
    ThreadResponse[] threads;
    # 
    @jsondata:Name {value: "guild_scheduled_events"}
    InlineResponse2003[] guildScheduledEvents;
    # 
    GuildAuditLogResponseIntegrations[] integrations;
    # 
    @jsondata:Name {value: "auto_moderation_rules"}
    InlineResponse2001[] autoModerationRules;
    # 
    UserResponse[] users;
    # 
    @jsondata:Name {value: "audit_log_entries"}
    AuditLogEntryResponse[] auditLogEntries;
};

public type STAGEEND 28;

public type GuildPreviewResponse record {
    # 
    EmojiResponse[] emojis;
    # 
    GuildFeatures[] features;
    @jsondata:Name {value: "home_header"}
    string? homeHeader?;
    @jsondata:Name {value: "approximate_presence_count"}
    int:Signed32 approximatePresenceCount;
    @jsondata:Name {value: "discovery_splash"}
    string? discoverySplash?;
    @jsondata:Name {value: "approximate_member_count"}
    int:Signed32 approximateMemberCount;
    string name;
    string? icon?;
    string? description?;
    # 
    GuildStickerResponse[] stickers;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    string? splash?;
};

public type GroupDMInviteResponse record {
    @jsondata:Name {value: "max_age"}
    int:Signed32? maxAge?;
    string code;
    @jsondata:Name {value: "expires_at"}
    string? expiresAt?;
    @jsondata:Name {value: "approximate_member_count"}
    int:Signed32? approximateMemberCount?;
    anydata channel?;
    @jsondata:Name {value: "created_at"}
    string? createdAt?;
    anydata inviter?;
    anydata 'type?;
};

public type INTEGRATIONCREATE 80;

public type GUILDBOOSTTIER2 10;

# Represents the Queries record for the operation: execute_github_compatible_webhook
public type ExecuteGithubCompatibleWebhookQueries record {
    # 
    boolean 'wait?;
    # 
    @http:Query {name: "thread_id"}
    string threadId?;
};

public type GUILDBOOSTTIER3 11;

public type GuildsVoiceStatesMeRequest record {
    @jsondata:Name {value: "request_to_speak_timestamp"}
    string? requestToSpeakTimestamp?;
    boolean? suppress?;
    @jsondata:Name {value: "channel_id"}
    anydata channelId?;
};

public type GuildFeatures ANIMATEDBANNER|ANIMATEDICON|APPLICATIONCOMMANDPERMISSIONSV2|AUTOMODERATION|BANNER|COMMUNITY|CREATORMONETIZABLEPROVISIONAL|CREATORSTOREPAGE|DEVELOPERSUPPORTSERVER|DISCOVERABLE|FEATURABLE|INVITESDISABLED|INVITESPLASH|MEMBERVERIFICATIONGATEENABLED|MORESTICKERS|NEWS|PARTNERED|PREVIEWENABLED|RAIDALERTSDISABLED|ROLEICONS|ROLESUBSCRIPTIONSAVAILABLEFORPURCHASE|ROLESUBSCRIPTIONSENABLED|TICKETEDEVENTSENABLED|VANITYURL|VERIFIED|VIPREGIONS|WELCOMESCREENENABLED;

public type ButtonStyleTypes PRIMARY|SECONDARY|SUCCESS|DANGER|LINK|PREMIUM;

# for oauth2 bots, this puts the bot in the user's selected guild by default
public type BOT "bot";

# The lt locale
public type Lt "lt";

public type ChannelPermissionOverwrites ROLE2|MEMBER;

public type GuildsMembersMeRequest record {
    string? nick?;
};

public type RichEmbedField record {
    boolean? inline?;
    @constraint:String {maxLength: 256}
    string name;
    @constraint:String {maxLength: 1024}
    string value;
};

public type MessageComponentChannelSelectResponse record {
    @jsondata:Name {value: "min_values"}
    int:Signed32? minValues?;
    @jsondata:Name {value: "custom_id"}
    string customId;
    @jsondata:Name {value: "max_values"}
    int:Signed32? maxValues?;
    # 
    @jsondata:Name {value: "channel_types"}
    ChannelTypes[]? channelTypes?;
    boolean? disabled?;
    int:Signed32 id;
    string? placeholder?;
    8 'type;
};

public type RoleSelectDefaultValue record {
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    "role" 'type;
};

public type MessageReferenceRequest record {
    @jsondata:Name {value: "fail_if_not_exists"}
    boolean? failIfNotExists?;
    @jsondata:Name {value: "guild_id"}
    anydata guildId?;
    @jsondata:Name {value: "message_id"}
    string messageId;
    anydata 'type?;
    @jsondata:Name {value: "channel_id"}
    anydata channelId?;
};

public type MessageAttachmentResponse record {
    string? description?;
    boolean? ephemeral?;
    @jsondata:Name {value: "duration_secs"}
    decimal? durationSecs?;
    string? title?;
    string url;
    # 
    @jsondata:Name {value: "clip_participants"}
    UserResponse[]? clipParticipants?;
    string filename;
    int:Signed32 size;
    @jsondata:Name {value: "content_type"}
    string? contentType?;
    anydata application?;
    int:Signed32? width?;
    @jsondata:Name {value: "clip_created_at"}
    string? clipCreatedAt?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    @jsondata:Name {value: "proxy_url"}
    string proxyUrl;
    string? waveform?;
    int:Signed32? height?;
};

# User has been invited to the team
public type INVITED 1;

public type ACTIVE 2;

public type FlagToChannelAction record {
    FlagToChannelActionMetadata metadata;
    2 'type;
};

public type GuildWelcomeScreenResponse record {
    # 
    @jsondata:Name {value: "welcome_channels"}
    GuildWelcomeScreenChannelResponse[] welcomeChannels;
    string? description?;
};

public type GuildTemplateChannelResponse record {
    string template;
    @jsondata:Name {value: "theme_color"}
    int:Signed32? themeColor?;
    boolean nsfw;
    @jsondata:Name {value: "icon_emoji"}
    anydata iconEmoji?;
    @jsondata:Name {value: "rate_limit_per_user"}
    int:Signed32 rateLimitPerUser;
    int:Signed32 bitrate;
    ChannelTypes 'type;
    @jsondata:Name {value: "user_limit"}
    int:Signed32 userLimit;
    # 
    @jsondata:Name {value: "permission_overwrites"}
    GuildTemplateChannelResponsePermissionOverwrites[] permissionOverwrites;
    @jsondata:Name {value: "default_thread_rate_limit_per_user"}
    int:Signed32? defaultThreadRateLimitPerUser?;
    @jsondata:Name {value: "default_auto_archive_duration"}
    anydata defaultAutoArchiveDuration?;
    @jsondata:Name {value: "parent_id"}
    anydata parentId?;
    @jsondata:Name {value: "default_reaction_emoji"}
    anydata defaultReactionEmoji?;
    string? name?;
    string? topic?;
    @jsondata:Name {value: "default_forum_layout"}
    anydata defaultForumLayout?;
    int:Signed32? id?;
    int:Signed32? position?;
    # 
    @jsondata:Name {value: "available_tags"}
    GuildTemplateChannelTags[]? availableTags?;
    @jsondata:Name {value: "default_sort_order"}
    anydata defaultSortOrder?;
};

# The es-419 locale
public type Es419 "es-419";

public type MEMBER 1;

public type FlagToChannelActionResponse record {
    FlagToChannelActionMetadataResponse metadata;
    2 'type;
};

public type MessageAttachmentRequest record {
    string? filename?;
    string? description?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    @jsondata:Name {value: "is_remix"}
    boolean? isRemix?;
};

public type EXTERNAL 3;

public type MentionSpamUpsertRequestPartial record {
    @jsondata:Name {value: "event_type"}
    AutomodEventType eventType?;
    @jsondata:Name {value: "trigger_type"}
    AutomodTriggerType triggerType?;
    @constraint:String {maxLength: 100}
    string name?;
    # 
    @jsondata:Name {value: "exempt_roles"}
    MentionSpamUpsertRequestPartialExemptrolesItemsString[]? exemptRoles?;
    # 
    @jsondata:Name {value: "exempt_channels"}
    MentionSpamUpsertRequestPartialExemptchannelsItemsString[]? exemptChannels?;
    # 
    MentionSpamUpsertRequestPartialActions[]? actions?;
    boolean? enabled?;
    @jsondata:Name {value: "trigger_metadata"}
    anydata triggerMetadata?;
};

# A temporary sub-channel within a GUILD_ANNOUNCEMENT channel
public type ANNOUNCEMENTTHREAD 10;

public type GithubRelease record {
    @jsondata:Name {value: "tag_name"}
    string tagName;
    GithubUser author;
    @jsondata:Name {value: "html_url"}
    string htmlUrl;
    int:Signed32 id;
};

public type GithubReview record {
    @jsondata:Name {value: "html_url"}
    string htmlUrl;
    @constraint:String {maxLength: 152133}
    string state;
    string? body?;
    GithubUser user;
};

# The nl locale
public type Nl "nl";

# The no locale
public type No "no";

public type ApplicationCommandType CHAT|USER|MESSAGE;

public type ApplicationCommandSubcommandOptionOptions ApplicationCommandAttachmentOption|ApplicationCommandBooleanOption|ApplicationCommandChannelOption|ApplicationCommandIntegerOption|ApplicationCommandMentionableOption|ApplicationCommandNumberOption|ApplicationCommandRoleOption|ApplicationCommandStringOption|ApplicationCommandUserOption|OptionsOneOf10?;

public type MessageEmbedFieldResponse record {
    boolean inline;
    string name;
    string value;
};

public type GUILDHOMEFEATUREITEM 171;

public type MessageReactionResponse record {
    @jsondata:Name {value: "count_details"}
    MessageReactionCountDetailsResponse countDetails;
    MessageReactionEmojiResponse emoji;
    @jsondata:Name {value: "me_burst"}
    boolean meBurst;
    int:Signed32 count;
    boolean me;
    # 
    @jsondata:Name {value: "burst_colors"}
    string[] burstColors;
};

public type PRIMARY 1;

public type ApplicationCommandUpdateRequestOptions ApplicationCommandAttachmentOption|ApplicationCommandBooleanOption|ApplicationCommandChannelOption|ApplicationCommandIntegerOption|ApplicationCommandMentionableOption|ApplicationCommandNumberOption|ApplicationCommandRoleOption|ApplicationCommandStringOption|ApplicationCommandSubcommandGroupOption|ApplicationCommandSubcommandOption|ApplicationCommandUserOption|OptionsOneOf123?;

public type GuildsEmojisRequest1 record {
    record {byte[] fileContent; string fileName;} image;
    # 
    GuildsEmojisRequest1Roles[]? roles?;
    @constraint:String {maxLength: 32, minLength: 2}
    string name;
};

public type CHANNELOVERWRITEUPDATE 14;

public type BaseCreateMessageCreateRequestStickeridsItemsString string;

# Represents the Queries record for the operation: get_guild
public type GetGuildQueries record {
    # 
    @http:Query {name: "with_counts"}
    boolean withCounts?;
};

public type BasicMessageResponseMentionChannels MessageMentionChannelResponse|MentionChannelsOneOf2?;

public type GuildMFALevelResponse record {
    GuildMFALevel level;
};

# guild has enabled role subscriptions
public type ROLESUBSCRIPTIONSENABLED "ROLE_SUBSCRIPTIONS_ENABLED";

public type GithubCheckApp record {
    @constraint:String {maxLength: 152133}
    string name;
};

public type SKYPE "skype";

public type GuildIdStickersBody record {
    record {byte[] fileContent; string fileName;} file;
    @constraint:String {maxLength: 30, minLength: 2}
    string name;
    string? description?;
    @constraint:String {maxLength: 200, minLength: 1}
    string tags;
};

public type UpdateGuildOnboardingRequestDefaultchannelidsItemsString string;

public type OnboardingPromptOptionRequest record {
    # 
    @jsondata:Name {value: "channel_ids"}
    OnboardingPromptOptionRequestChannelidsItemsString[]? channelIds?;
    string? description?;
    @jsondata:Name {value: "emoji_id"}
    anydata emojiId?;
    @jsondata:Name {value: "emoji_name"}
    string? emojiName?;
    anydata id?;
    @constraint:String {maxLength: 50, minLength: 1}
    string title;
    @jsondata:Name {value: "emoji_animated"}
    boolean? emojiAnimated?;
    # 
    @jsondata:Name {value: "role_ids"}
    OnboardingPromptOptionRequestRoleidsItemsString[]? roleIds?;
};

public type IncomingWebhookInteractionRequest record {
    # 
    ActionRow[]? components?;
    boolean? tts?;
    # 
    MessageAttachmentRequest[]? attachments?;
    int:Signed32? flags?;
    @jsondata:Name {value: "allowed_mentions"}
    anydata allowedMentions?;
    # 
    RichEmbed[]? embeds?;
    string? content?;
};

public type RolesRolesOneOf132 anydata?;

public type KeywordUpsertRequest record {
    @jsondata:Name {value: "event_type"}
    AutomodEventType eventType;
    @jsondata:Name {value: "trigger_type"}
    1 triggerType;
    @constraint:String {maxLength: 100}
    string name;
    # 
    @jsondata:Name {value: "exempt_roles"}
    KeywordUpsertRequestExemptrolesItemsString[]? exemptRoles?;
    # 
    @jsondata:Name {value: "exempt_channels"}
    KeywordUpsertRequestExemptchannelsItemsString[]? exemptChannels?;
    # 
    KeywordUpsertRequestActions[]? actions?;
    boolean? enabled?;
    @jsondata:Name {value: "trigger_metadata"}
    anydata triggerMetadata?;
};

public type GuildScheduledEventStatuses SCHEDULED|ACTIVE|COMPLETED|CANCELED;

public type CHATINPUTCOMMAND 20;

# guild can enable welcome screen, Membership Screening, stage channels and discovery, and             receives community updates
public type COMMUNITY "COMMUNITY";

public type UserCommunicationDisabledActionMetadata record {
    @jsondata:Name {value: "duration_seconds"}
    int:Signed32? durationSeconds?;
};

public type ConnectedAccountVisibility NONE|EVERYONE1;

public type BUNGIE "bungie";

public type KeywordUpsertRequestPartial record {
    @jsondata:Name {value: "event_type"}
    AutomodEventType eventType?;
    @jsondata:Name {value: "trigger_type"}
    AutomodTriggerType triggerType?;
    @constraint:String {maxLength: 100}
    string name?;
    # 
    @jsondata:Name {value: "exempt_roles"}
    KeywordUpsertRequestPartialExemptrolesItemsString[]? exemptRoles?;
    # 
    @jsondata:Name {value: "exempt_channels"}
    KeywordUpsertRequestPartialExemptchannelsItemsString[]? exemptChannels?;
    # 
    KeywordUpsertRequestPartialActions[]? actions?;
    boolean? enabled?;
    @jsondata:Name {value: "trigger_metadata"}
    anydata triggerMetadata?;
};

public type AfkTimeouts ONEMINUTE|FIVEMINUTES|FIFTEENMINUTES|THIRTYMINUTES|ONEHOUR;

# The pl locale
public type Pl "pl";

public type MentionSpamTriggerMetadata record {
    @jsondata:Name {value: "mention_total_limit"}
    int:Signed32 mentionTotalLimit;
    @jsondata:Name {value: "mention_raid_protection_enabled"}
    boolean? mentionRaidProtectionEnabled?;
};

public type MESSAGEUNPIN 75;

public type MEMBERBANREMOVE 23;

# Represents the Queries record for the operation: get_original_webhook_message
public type GetOriginalWebhookMessageQueries record {
    # 
    @http:Query {name: "thread_id"}
    string threadId?;
};

# Represents the Headers record for the operation: create_message
public type CreateMessageHeaders record {
    # 
    @http:Header {name: "Content-Type"}
    "application/x-www-form-urlencoded" contentType;
};

public type RolesRolesOneOf142 anydata?;

public type ChannelFollowerWebhookResponse record {
    @jsondata:Name {value: "source_channel"}
    anydata sourceChannel?;
    @jsondata:Name {value: "source_guild"}
    anydata sourceGuild?;
    @jsondata:Name {value: "guild_id"}
    anydata guildId?;
    string name;
    string? avatar?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    2 'type;
    @jsondata:Name {value: "application_id"}
    anydata applicationId?;
    @jsondata:Name {value: "channel_id"}
    anydata channelId?;
    anydata user?;
};

public type GuildPruneResponse record {
    int:Signed32? pruned?;
};

public type APPLICATIONSUBSCRIPTION 8;

public type GithubIssue record {
    int:Signed32 number;
    @jsondata:Name {value: "pull_request"}
    anydata pullRequest?;
    @jsondata:Name {value: "html_url"}
    string htmlUrl;
    int:Signed32 id;
    @constraint:String {maxLength: 152133}
    string title;
    string? body?;
    GithubUser user;
};

public type ChannelschannelIdBody PrivateChannelRequestPartial|UpdateGuildChannelRequestPartial|UpdateThreadRequestPartial;

public type ApplicationCommandRoleOption record {
    @jsondata:Name {value: "name_localizations"}
    record {|string...;|}? nameLocalizations?;
    @constraint:String {maxLength: 32, minLength: 1}
    string name;
    @constraint:String {maxLength: 100, minLength: 1}
    string description;
    @jsondata:Name {value: "description_localizations"}
    record {|string...;|}? descriptionLocalizations?;
    8 'type;
    boolean? required?;
};

public type THREADCREATED 18;

# Controls user mentions
public type ROLES "roles";

public type APNG 2;

# A user is attempting to join the server or a member's properties were updated
public type GUILDMEMBERJOINORUPDATE 2;

public type GuildsBulkBanRequestUseridsItemsString string;

public type ChannelIdMessagesBody record {
    # 
    ActionRow[]? components?;
    boolean? tts?;
    # 
    MessageAttachmentRequest[]? attachments?;
    # 
    @jsondata:Name {value: "sticker_ids"}
    ChannelIdMessagesBodyStickeridsItemsString[]? stickerIds?;
    int:Signed32? flags?;
    @jsondata:Name {value: "allowed_mentions"}
    anydata allowedMentions?;
    @jsondata:Name {value: "message_reference"}
    anydata messageReference?;
    # 
    RichEmbed[]? embeds?;
    anydata nonce?;
    string? content?;
};

public type RolesRolesOneOf12 anydata?;

public type ChannelIdThreadsBody CreateForumThreadRequest|CreateTextThreadWithoutMessageRequest;

public type CALL 3;

# Represents the Queries record for the operation: get_guild_widget_png
public type GetGuildWidgetPngQueries record {
    # 
    WidgetImageStyles style?;
};

# the metadata value (integer) is not equal to the guild's configured value (integer)
public type INTEGERNOTEQUAL 4;

# Represents the Queries record for the operation: list_messages
public type ListMessagesQueries record {
    # 
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string before?;
    # 
    @constraint:Int {minValue: 1, maxValue: 100}
    int:Signed32 'limit?;
    # 
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string after?;
    # 
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string around?;
};

public type PurchaseNotificationResponse record {
    @jsondata:Name {value: "guild_product_purchase"}
    anydata guildProductPurchase?;
    PurchaseType 'type;
};

public type RIOTGAMES "riotgames";

public type CHANNELOVERWRITECREATE 13;

public type STAGEINSTANCEUPDATE 84;

public type CHANNELMESSAGEWITHSOURCE 4;

public type UpdateMessageInteractionCallbackRequest record {
    anydata data?;
    InteractionCallbackTypes 'type;
};

public type GUILDSCHEDULEDEVENTDELETE 102;

public type MessageMentionChannelResponse record {
    string name;
    @jsondata:Name {value: "guild_id"}
    string guildId;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    ChannelTypes 'type;
};

# The ro locale
public type Ro "ro";

# the metadata value (integer) is less than or equal to the guild's configured value (integer)
public type INTEGERLESSTHANEQUAL 1;

public type InteractionTypes PING|APPLICATIONCOMMAND|MESSAGECOMPONENT|APPLICATIONCOMMANDAUTOCOMPLETE|MODALSUBMIT;

public type GuildWelcomeScreenChannelResponse record {
    string description;
    @jsondata:Name {value: "emoji_id"}
    anydata emojiId?;
    @jsondata:Name {value: "emoji_name"}
    string? emojiName?;
    @jsondata:Name {value: "channel_id"}
    string channelId;
};

public type FIFTEENMINUTES 900;

# for local rpc server access, this allows you to read a user's screenshare status- requires Discord approval
public type RPCSCREENSHAREREAD "rpc.screenshare.read";

# The ru locale
public type Ru "ru";

# allows your app to read and update store data (SKUs, store listings, achievements, etc.) for a user's applications
public type APPLICATIONSSTOREUPDATE "applications.store.update";

public type GithubCheckRunOutput record {
    string? summary?;
    string? title?;
};

public type CreatePrivateChannelRequest record {
    # 
    @jsondata:Name {value: "access_tokens"}
    CreatePrivateChannelRequestAccesstokensItemsString[]? accessTokens?;
    @jsondata:Name {value: "recipient_id"}
    anydata recipientId?;
    record {|string?...;|}? nicks?;
};

# for local rpc server api access, this allows you to read messages from all client channels (otherwise restricted to channels/guilds your app creates)
public type MESSAGESREAD "messages.read";

public type EPICGAMES "epicgames";

public type ChannelsWebhooksRequest record {
    @constraint:String {maxLength: 80, minLength: 1}
    string name;
    record {byte[] fileContent; string fileName;}? avatar?;
};

public type CHANNELNAMECHANGE 4;

public type ChannelIdMessagesBodyStickeridsItemsString string;

public type ApplicationCommandMentionableOptionResponse record {
    @jsondata:Name {value: "name_localized"}
    string? nameLocalized?;
    @jsondata:Name {value: "name_localizations"}
    record {|string...;|}? nameLocalizations?;
    string name;
    string description;
    @jsondata:Name {value: "description_localized"}
    string? descriptionLocalized?;
    @jsondata:Name {value: "description_localizations"}
    record {|string...;|}? descriptionLocalizations?;
    9 'type;
    boolean? required?;
};

public type ApplicationCommandIntegerOption record {
    @jsondata:Name {value: "min_value"}
    anydata minValue?;
    @jsondata:Name {value: "name_localizations"}
    record {|string...;|}? nameLocalizations?;
    boolean? autocomplete?;
    @constraint:String {maxLength: 32, minLength: 1}
    string name;
    @constraint:String {maxLength: 100, minLength: 1}
    string description;
    @jsondata:Name {value: "description_localizations"}
    record {|string...;|}? descriptionLocalizations?;
    4 'type;
    # 
    ApplicationCommandOptionIntegerChoice[]? choices?;
    boolean? required?;
    @jsondata:Name {value: "max_value"}
    anydata maxValue?;
};

public type XBOX "xbox";

# The zh-TW locale
public type ZhTW "zh-TW";

public type MessageAllowedMentionsRequestRoles RolesOneOf1|RolesRolesOneOf12?;

@constraint:Array {maxLength: 100}
public type SkuIdsSkuIdsOneOf12 InlineArrayItemsSkuIdsSkuIdsOneOf12[];

public type WebhookTokenSlackBody record {
    @jsondata:Name {value: "icon_url"}
    string? iconUrl?;
    # 
    WebhookSlackEmbed[]? attachments?;
    string? text?;
    string? username?;
};

public type InlineArrayItemsIncludeRolesIncludeRolesOneOf12 IncludeRolesIncludeRolesOneOf12OneOf1;

public type TWITTER "twitter";

public type ThreadAutoArchiveDuration ONEHOUR1|ONEDAY|THREEDAY|SEVENDAY;

public type ActionsOneOf55 anydata?;

public type DefaultKeywordRuleResponseExemptchannelsItemsString string;

public type ActionsOneOf56 anydata?;

public type ActionsOneOf57 anydata?;

public type WebhookSourceGuildResponse record {
    string? icon?;
    string name;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
};

public type GUILDSCHEDULEDEVENTCREATE 100;

public type VIEW 0;

public type AUTOMODERATIONRULEDELETE 142;

# The th locale
public type Th "th";

public type MLSpamUpsertRequestExemptrolesItemsString string;

public type DefaultValuesOneOf3 anydata?;

public type ResourceChannelResponse record {
    anydata emoji?;
    string? icon?;
    string description;
    string title;
    @jsondata:Name {value: "channel_id"}
    string channelId;
};

public type ONBOARDINGCREATE 166;

# The tr locale
public type Tr "tr";

# the metadata value (integer) is greater than or equal to the guild's configured value (integer)
public type INTEGERGREATERTHANEQUAL 2;

# media content sent by members without roles will be scanned
public type MEMBERSWITHOUTROLES 1;

public type FlagToChannelActionMetadataResponse record {
    @jsondata:Name {value: "channel_id"}
    string channelId;
};

public type CreateGuildChannelRequest record {
    boolean? nsfw?;
    @jsondata:Name {value: "rate_limit_per_user"}
    int:Signed32? rateLimitPerUser?;
    int:Signed32? bitrate?;
    anydata 'type?;
    @jsondata:Name {value: "user_limit"}
    int:Signed32? userLimit?;
    # 
    @jsondata:Name {value: "permission_overwrites"}
    ChannelPermissionOverwriteRequest[]? permissionOverwrites?;
    @jsondata:Name {value: "rtc_region"}
    string? rtcRegion?;
    @jsondata:Name {value: "default_thread_rate_limit_per_user"}
    int:Signed32? defaultThreadRateLimitPerUser?;
    @jsondata:Name {value: "default_auto_archive_duration"}
    anydata defaultAutoArchiveDuration?;
    @jsondata:Name {value: "parent_id"}
    anydata parentId?;
    @jsondata:Name {value: "default_reaction_emoji"}
    anydata defaultReactionEmoji?;
    @constraint:String {maxLength: 100, minLength: 1}
    string name;
    string? topic?;
    @jsondata:Name {value: "default_forum_layout"}
    anydata defaultForumLayout?;
    int:Signed32? position?;
    # 
    @jsondata:Name {value: "available_tags"}
    CreateGuildChannelRequestAvailableTags[]? availableTags?;
    @jsondata:Name {value: "video_quality_mode"}
    anydata videoQualityMode?;
    @jsondata:Name {value: "default_sort_order"}
    anydata defaultSortOrder?;
};

public type WidgetMember record {
    anydata activity?;
    boolean? deaf?;
    boolean? mute?;
    string? avatar?;
    boolean? suppress?;
    WidgetUserDiscriminator discriminator;
    @jsondata:Name {value: "avatar_url"}
    string avatarUrl;
    @jsondata:Name {value: "self_deaf"}
    boolean? selfDeaf?;
    string id;
    @jsondata:Name {value: "self_mute"}
    boolean? selfMute?;
    @jsondata:Name {value: "channel_id"}
    anydata channelId?;
    string username;
    string status;
};

public type UserNotificationSettings ALLMESSAGES|ONLYMENTIONS;

public type ChannelsMessagesBulkDeleteRequest record {
    # 
    @constraint:Array {maxLength: 100, minLength: 2}
    ChannelsMessagesBulkDeleteRequestMessagesItemsString[] messages;
};

# Seven days
public type SEVENDAY 10080;

public type ChoicesOneOf21 anydata?;

public type ChoicesOneOf22 anydata?;

# The uk locale
public type Uk "uk";

public type GITHUB "github";

public type ActionsOneOf51 anydata?;

public type ActionsOneOf52 anydata?;

public type GuildsBansRequest record {
    @jsondata:Name {value: "delete_message_days"}
    int:Signed32? deleteMessageDays?;
    @jsondata:Name {value: "delete_message_seconds"}
    int:Signed32? deleteMessageSeconds?;
};

public type ActionsOneOf53 anydata?;

public type ActionsOneOf54 anydata?;

# guild has enabled monetization
public type CREATORMONETIZABLEPROVISIONAL "CREATOR_MONETIZABLE_PROVISIONAL";

public type GuildBanResponse record {
    string? reason?;
    UserResponse user;
};

public type '200AnyOf41 anydata?;

public type InteractionApplicationCommandAutocompleteCallbackStringDataChoices ApplicationCommandOptionStringChoice|ChoicesOneOf22?;

public type WelcomeMessageResponse record {
    # 
    @jsondata:Name {value: "author_ids"}
    WelcomeMessageResponseAuthoridsItemsString[] authorIds;
    string message;
};

# guild is able to be featured in the directory
public type FEATURABLE "FEATURABLE";

public type MessageInteractionResponse record {
    @jsondata:Name {value: "name_localized"}
    string? nameLocalized?;
    string name;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    InteractionTypes 'type;
    anydata user?;
};

# members will receive notifications only for messages that @mention them by default
public type ONLYMENTIONS 1;

@constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
public type RolesOneOf12 string;

@constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
public type RolesOneOf11 string;

@constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
public type RolesOneOf14 string;

@constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
public type RolesOneOf13 string;

public type ApplicationUserRoleConnectionResponse record {
    record {|string...;|}? metadata?;
    @jsondata:Name {value: "platform_username"}
    string? platformUsername?;
    @jsondata:Name {value: "platform_name"}
    string? platformName?;
};

public type BasicApplicationResponse record {
    anydata bot?;
    string name;
    string? icon?;
    string description;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    @jsondata:Name {value: "cover_image"}
    string? coverImage?;
    @jsondata:Name {value: "primary_sku_id"}
    anydata primarySkuId?;
    anydata 'type?;
};

public type RolesRolesOneOf112 anydata?;

# Represents the Queries record for the operation: get_webhook_message
public type GetWebhookMessageQueries record {
    # 
    @http:Query {name: "thread_id"}
    string threadId?;
};

public type IntegrationTypes DISCORD|TWITCH|YOUTUBE|GUILDSUBSCRIPTION;

public type QUESTREWARD 10;

public type CHANNELICONCHANGE 5;

# shield style widget with Discord icon and guild members online count
public type SHIELD "shield";

public type GuildsMembersRequest record {
    string? nick?;
    @jsondata:Name {value: "access_token"}
    string accessToken;
    # 
    GuildsMembersRequestRoles[]? roles?;
    boolean? deaf?;
    int:Signed32? flags?;
    boolean? mute?;
};

# The vi locale
public type Vi "vi";

# This permission is for a role
public type ROLE1 1;

public type ROLE2 0;

@constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
public type GuildMemberResponseRolesItemsString string;

public type CreateGroupDMInviteRequest record {
    @jsondata:Name {value: "max_age"}
    int:Signed32? maxAge?;
};

public type GUILDDISCOVERYREQUALIFIED 15;

# allows your app to see information about the user's DMs and group DMs - requires Discord approval
public type DMCHANNELSREAD "dm_channels.read";

public type WidgetImageStyles SHIELD|BANNER1|BANNER2|BANNER3|BANNER4;

public type ChoicesOneOf2 anydata?;

public type MessageReactionEmojiResponse record {
    string? name?;
    boolean? animated?;
    anydata id?;
};

public type DefaultKeywordRuleResponseActions BlockMessageActionResponse|FlagToChannelActionResponse|QuarantineUserActionResponse|UserCommunicationDisabledActionResponse;

# Represents the Queries record for the operation: get_guild_scheduled_event
public type GetGuildScheduledEventQueries record {
    # 
    @http:Query {name: "with_user_count"}
    boolean withUserCount?;
};

public type UserCommunicationDisabledActionMetadataResponse record {
    @jsondata:Name {value: "duration_seconds"}
    int:Signed32 durationSeconds;
};

public type AUTOMODERATIONUSERCOMMDISABLED 145;

public type ComponentsOneOf8 anydata?;

public type RolesRolesOneOf122 anydata?;

public type UserResponse record {
    @jsondata:Name {value: "accent_color"}
    int:Signed32? accentColor?;
    boolean? system?;
    @jsondata:Name {value: "global_name"}
    string? globalName?;
    boolean? bot?;
    @constraint:Int {minValue: 1, maxValue: -1}
    int flags;
    string? banner?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    string? avatar?;
    @jsondata:Name {value: "public_flags"}
    int:Signed32 publicFlags;
    string username;
    string discriminator;
};

public type MEMBERPRUNE 21;

public type ApplicationsGuildsCommandsCommandIdPermissionsRequest record {
    # 
    ApplicationCommandPermission[]? permissions?;
};

public type GuildInviteResponse record {
    boolean? temporary?;
    string code;
    @jsondata:Name {value: "guild_scheduled_event"}
    anydata guildScheduledEvent?;
    @jsondata:Name {value: "approximate_presence_count"}
    int:Signed32? approximatePresenceCount?;
    @jsondata:Name {value: "target_application"}
    anydata targetApplication?;
    int:Signed32? flags?;
    anydata channel?;
    @jsondata:Name {value: "target_type"}
    anydata targetType?;
    @jsondata:Name {value: "created_at"}
    string? createdAt?;
    anydata 'type?;
    @jsondata:Name {value: "is_contact"}
    boolean? isContact?;
    @jsondata:Name {value: "max_age"}
    int:Signed32? maxAge?;
    anydata guild?;
    @jsondata:Name {value: "expires_at"}
    string? expiresAt?;
    @jsondata:Name {value: "max_uses"}
    int:Signed32? maxUses?;
    @jsondata:Name {value: "approximate_member_count"}
    int:Signed32? approximateMemberCount?;
    @jsondata:Name {value: "guild_id"}
    anydata guildId?;
    @jsondata:Name {value: "target_user"}
    anydata targetUser?;
    anydata inviter?;
    int:Signed32? uses?;
    @jsondata:Name {value: "stage_instance"}
    anydata stageInstance?;
};

# guild has access to create announcement channels
public type NEWS "NEWS";

public type NewMemberActionType VIEW|TALK;

public type DefaultKeywordListUpsertRequest record {
    @jsondata:Name {value: "event_type"}
    AutomodEventType eventType;
    @jsondata:Name {value: "trigger_type"}
    4 triggerType;
    @constraint:String {maxLength: 100}
    string name;
    # 
    @jsondata:Name {value: "exempt_roles"}
    DefaultKeywordListUpsertRequestExemptrolesItemsString[]? exemptRoles?;
    # 
    @jsondata:Name {value: "exempt_channels"}
    DefaultKeywordListUpsertRequestExemptchannelsItemsString[]? exemptChannels?;
    # 
    DefaultKeywordListUpsertRequestActions[]? actions?;
    boolean? enabled?;
    @jsondata:Name {value: "trigger_metadata"}
    DefaultKeywordListTriggerMetadata triggerMetadata;
};

public type GUILDINVITEREMINDER 22;

public type NewMemberActionsOneOf2 anydata?;

public type GuildOnboardingResponse record {
    # 
    @jsondata:Name {value: "default_channel_ids"}
    GuildOnboardingResponseDefaultchannelidsItemsString[] defaultChannelIds;
    @jsondata:Name {value: "guild_id"}
    string guildId;
    # 
    OnboardingPromptResponse[] prompts;
    boolean enabled;
};

public type MessageAllowedMentionsRequest record {
    # 
    MessageAllowedMentionsRequestRoles[]? roles?;
    # 
    AllowedMentionTypes[]? parse?;
    @jsondata:Name {value: "replied_user"}
    boolean? repliedUser?;
    # 
    MessageAllowedMentionsRequestUsers[]? users?;
};

# Multi-line input
public type PARAGRAPH 2;

# the metadata value (integer) is not equal to the guild's configured value (integer; 1)
public type BOOLEANNOTEQUAL 8;

public type ConnectedAccountIntegrationResponse record {
    ConnectedAccountGuildResponse guild;
    string id;
    IntegrationTypes 'type;
    AccountResponse account;
};

public type IncludeRolesOneOf1 string;

public type VoiceScheduledEventPatchRequestPartial record {
    record {byte[] fileContent; string fileName;}? image?;
    @jsondata:Name {value: "entity_type"}
    anydata entityType?;
    @jsondata:Name {value: "privacy_level"}
    GuildScheduledEventPrivacyLevels privacyLevel?;
    @constraint:String {maxLength: 100}
    string name?;
    @jsondata:Name {value: "entity_metadata"}
    anydata entityMetadata?;
    string? description?;
    @jsondata:Name {value: "channel_id"}
    anydata channelId?;
    anydata status?;
    @jsondata:Name {value: "scheduled_start_time"}
    string scheduledStartTime?;
    @jsondata:Name {value: "scheduled_end_time"}
    string? scheduledEndTime?;
};

public type ROBLOX "roblox";

# allows /users/@me/guilds to return basic information about all of a user's guilds
public type GUILDS "guilds";

public type MEMBERROLEUPDATE 25;

# guild is using the old permissions configuration behavior
public type APPLICATIONCOMMANDPERMISSIONSV2 "APPLICATION_COMMAND_PERMISSIONS_V2";

public type ApplicationCommandNumberOption record {
    @jsondata:Name {value: "min_value"}
    decimal? minValue?;
    @jsondata:Name {value: "name_localizations"}
    record {|string...;|}? nameLocalizations?;
    boolean? autocomplete?;
    @constraint:String {maxLength: 32, minLength: 1}
    string name;
    @constraint:String {maxLength: 100, minLength: 1}
    string description;
    @jsondata:Name {value: "description_localizations"}
    record {|string...;|}? descriptionLocalizations?;
    10 'type;
    # 
    ApplicationCommandOptionNumberChoice[]? choices?;
    boolean? required?;
    @jsondata:Name {value: "max_value"}
    decimal? maxValue?;
};

public type MessageResponseMentionChannels MessageMentionChannelResponse|MentionChannelsOneOf21?;

public type GuildHomeSettingsResponse record {
    # 
    @jsondata:Name {value: "new_member_actions"}
    GuildHomeSettingsResponseNewMemberActions[]? newMemberActions?;
    @jsondata:Name {value: "guild_id"}
    string guildId;
    @jsondata:Name {value: "welcome_message"}
    anydata welcomeMessage?;
    boolean enabled;
    # 
    @jsondata:Name {value: "resource_channels"}
    GuildHomeSettingsResponseResourceChannels[]? resourceChannels?;
};

public type INVITECREATE 40;

public type GUILDDISCOVERYDISQUALIFIED 14;

public type MEMBERUPDATE 24;

public type AUTOMODERATIONACTION 24;

public type UpdateOnboardingPromptRequest record {
    @jsondata:Name {value: "in_onboarding"}
    boolean? inOnboarding?;
    # 
    @constraint:Array {maxLength: 50, minLength: 1}
    OnboardingPromptOptionRequest[] options;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    @constraint:String {maxLength: 100, minLength: 1}
    string title;
    anydata 'type?;
    @jsondata:Name {value: "single_select"}
    boolean? singleSelect?;
    boolean? required?;
};

# The Stage instance is visible publicly. (deprecated)
public type PUBLIC 1;

public type ChannelPermissionOverwriteRequest record {
    int:Signed32? allow?;
    int:Signed32? deny?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    anydata 'type?;
};

public type WidgetSettingsResponse record {
    @jsondata:Name {value: "channel_id"}
    anydata channelId?;
    boolean enabled;
};

public type EVERYONE1 1;

public type ApplicationCommandMentionableOption record {
    @jsondata:Name {value: "name_localizations"}
    record {|string...;|}? nameLocalizations?;
    @constraint:String {maxLength: 32, minLength: 1}
    string name;
    @constraint:String {maxLength: 100, minLength: 1}
    string description;
    @jsondata:Name {value: "description_localizations"}
    record {|string...;|}? descriptionLocalizations?;
    9 'type;
    boolean? required?;
};

# Represents the Queries record for the operation: list_guild_application_commands
public type ListGuildApplicationCommandsQueries record {
    # 
    @http:Query {name: "with_localizations"}
    boolean withLocalizations?;
};

public type OnboardingPromptType MULTIPLECHOICE|DROPDOWN;

public type GuildSubscriptionIntegrationResponse record {
    string? name?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    "guild_subscription" 'type;
    anydata account?;
    boolean? enabled?;
};

# The en-GB locale
public type EnGB "en-GB";

public type GUILDSUBSCRIPTION "guild_subscription";

# Slash commands; a text-based command that shows up when a user types /
public type CHAT 1;

public type InviteChannelRecipientResponse record {
    string username;
};

public type GuildHomeSettingsResponseResourceChannels ResourceChannelResponse|ResourceChannelsOneOf2?;

public type GuildsRolesRequest2 record {
    anydata id?;
    int:Signed32? position?;
};

# guild has access to set 384kbps bitrate in voice (previously VIP voice servers)
public type VIPREGIONS "VIP_REGIONS";

public type RoleSelect record {
    # 
    @jsondata:Name {value: "default_values"}
    RoleSelectDefaultValue[]? defaultValues?;
    @jsondata:Name {value: "min_values"}
    int:Signed32? minValues?;
    @jsondata:Name {value: "custom_id"}
    string customId;
    @jsondata:Name {value: "max_values"}
    int:Signed32? maxValues?;
    boolean? disabled?;
    string? placeholder?;
    6 'type;
};

public type GithubUser record {
    @jsondata:Name {value: "avatar_url"}
    string avatarUrl;
    @jsondata:Name {value: "html_url"}
    string htmlUrl;
    int:Signed32 id;
    @constraint:String {maxLength: 152133}
    string login;
};

# Sent when a user uses an application command
public type APPLICATIONCOMMAND 2;

public type InteractionCallbackTypes PONG|CHANNELMESSAGEWITHSOURCE|DEFERREDCHANNELMESSAGEWITHSOURCE|DEFERREDUPDATEMESSAGE|UPDATEMESSAGE|APPLICATIONCOMMANDAUTOCOMPLETERESULT|MODAL;

public type AvailableLocalesEnum Ar|Bg|Cs|Da|De|El|EnGB|EnUS|Es419|EsES|Fi|Fr|He|Hi|Hr|Hu|Id|It|Ja|Ko|Lt|Nl|No|Pl|PtBR|Ro|Ru|SvSE|Th|Tr|Uk|Vi|ZhCN|ZhTW;

public type AutoModerationRulesBody DefaultKeywordListUpsertRequest|KeywordUpsertRequest|MLSpamUpsertRequest|MentionSpamUpsertRequest;

public type StageScheduledEventResponse record {
    string? image?;
    anydata creator?;
    @jsondata:Name {value: "privacy_level"}
    GuildScheduledEventPrivacyLevels privacyLevel;
    @jsondata:Name {value: "entity_metadata"}
    anydata entityMetadata?;
    string? description?;
    @jsondata:Name {value: "entity_id"}
    anydata entityId?;
    @jsondata:Name {value: "scheduled_end_time"}
    string? scheduledEndTime?;
    @jsondata:Name {value: "entity_type"}
    1 entityType;
    @jsondata:Name {value: "user_rsvp"}
    anydata userRsvp?;
    @jsondata:Name {value: "user_count"}
    int:Signed32? userCount?;
    @jsondata:Name {value: "guild_id"}
    string guildId;
    string name;
    @jsondata:Name {value: "creator_id"}
    anydata creatorId?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    @jsondata:Name {value: "channel_id"}
    anydata channelId?;
    @jsondata:Name {value: "scheduled_start_time"}
    string scheduledStartTime;
    GuildScheduledEventStatuses status;
};

# allows /guilds/{guild.id}/members/{user.id} to be used for joining users to a guild
public type GUILDSJOIN "guilds.join";

public type KeywordTriggerMetadata record {
    # 
    @jsondata:Name {value: "keyword_filter"}
    KeywordTriggerMetadataKeywordfilterItemsString[]? keywordFilter?;
    # 
    @jsondata:Name {value: "allow_list"}
    KeywordTriggerMetadataAllowlistItemsString[]? allowList?;
    # 
    @jsondata:Name {value: "regex_patterns"}
    KeywordTriggerMetadataRegexpatternsItemsString[]? regexPatterns?;
};

public type INTEGRATIONDELETE 82;

# guild has access to set an animated guild banner image
public type ANIMATEDBANNER "ANIMATED_BANNER";

public type DefaultKeywordListUpsertRequestPartialExemptchannelsItemsString string;

public type CreateGuildRequestChannelItem record {
    boolean? nsfw?;
    @jsondata:Name {value: "rate_limit_per_user"}
    int:Signed32? rateLimitPerUser?;
    int:Signed32? bitrate?;
    anydata 'type?;
    @jsondata:Name {value: "user_limit"}
    int:Signed32? userLimit?;
    # 
    @jsondata:Name {value: "permission_overwrites"}
    ChannelPermissionOverwriteRequest[]? permissionOverwrites?;
    @jsondata:Name {value: "rtc_region"}
    string? rtcRegion?;
    @jsondata:Name {value: "default_thread_rate_limit_per_user"}
    int:Signed32? defaultThreadRateLimitPerUser?;
    @jsondata:Name {value: "default_auto_archive_duration"}
    anydata defaultAutoArchiveDuration?;
    @jsondata:Name {value: "parent_id"}
    anydata parentId?;
    @jsondata:Name {value: "default_reaction_emoji"}
    anydata defaultReactionEmoji?;
    @constraint:String {maxLength: 100, minLength: 1}
    string name;
    string? topic?;
    @jsondata:Name {value: "default_forum_layout"}
    anydata defaultForumLayout?;
    int:Signed32? position?;
    anydata id?;
    # 
    @jsondata:Name {value: "available_tags"}
    CreateOrUpdateThreadTagRequest[]? availableTags?;
    @jsondata:Name {value: "video_quality_mode"}
    anydata videoQualityMode?;
    @jsondata:Name {value: "default_sort_order"}
    anydata defaultSortOrder?;
};

public type GuildChannelResponse record {
    @jsondata:Name {value: "last_pin_timestamp"}
    string? lastPinTimestamp?;
    boolean? nsfw?;
    @jsondata:Name {value: "rate_limit_per_user"}
    int:Signed32? rateLimitPerUser?;
    int:Signed32 flags;
    int:Signed32? bitrate?;
    ChannelTypes 'type;
    @jsondata:Name {value: "user_limit"}
    int:Signed32? userLimit?;
    @jsondata:Name {value: "last_message_id"}
    anydata lastMessageId?;
    @jsondata:Name {value: "rtc_region"}
    string? rtcRegion?;
    # 
    @jsondata:Name {value: "permission_overwrites"}
    ChannelPermissionOverwriteResponse[]? permissionOverwrites?;
    @jsondata:Name {value: "default_thread_rate_limit_per_user"}
    int:Signed32? defaultThreadRateLimitPerUser?;
    @jsondata:Name {value: "default_auto_archive_duration"}
    anydata defaultAutoArchiveDuration?;
    @jsondata:Name {value: "parent_id"}
    anydata parentId?;
    string? permissions?;
    @jsondata:Name {value: "default_reaction_emoji"}
    anydata defaultReactionEmoji?;
    @jsondata:Name {value: "guild_id"}
    string guildId;
    string name;
    string? topic?;
    @jsondata:Name {value: "default_forum_layout"}
    anydata defaultForumLayout?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    int:Signed32 position;
    # 
    @jsondata:Name {value: "available_tags"}
    ForumTagResponse[]? availableTags?;
    @jsondata:Name {value: "video_quality_mode"}
    anydata videoQualityMode?;
    @jsondata:Name {value: "default_sort_order"}
    anydata defaultSortOrder?;
};

# for local rpc server access, this allows you to read a user's video status - requires Discord approval
public type RPCVIDEOREAD "rpc.video.read";

public type MessageStickerItemResponse record {
    @jsondata:Name {value: "format_type"}
    StickerFormatTypes formatType;
    string name;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
};

# Check if content contains words from a list of keywords or matches regex
public type KEYWORD 1;

# unrestricted
public type NONE2 0;

# Guild has no MFA/2FA requirement for moderation actions
public type NONE3 0;

# Guild has not unlocked any Server Boost perks
public type NONE4 0;

public type BlockMessageAction record {
    anydata metadata?;
    1 'type;
};

public type WebhookSlackEmbed record {
    @jsondata:Name {value: "author_name"}
    string? authorName?;
    @jsondata:Name {value: "thumb_url"}
    string? thumbUrl?;
    string? color?;
    string? footer?;
    @jsondata:Name {value: "image_url"}
    string? imageUrl?;
    @jsondata:Name {value: "footer_icon"}
    string? footerIcon?;
    @jsondata:Name {value: "title_link"}
    string? titleLink?;
    string? title?;
    @jsondata:Name {value: "author_link"}
    string? authorLink?;
    @jsondata:Name {value: "author_icon"}
    string? authorIcon?;
    string? pretext?;
    string? text?;
    # 
    WebhookSlackEmbedField[]? fields?;
    int:Signed32? ts?;
};

public type OptionsOneOf12 anydata?;

public type InteractionApplicationCommandAutocompleteCallbackIntegerData record {
    # 
    InteractionApplicationCommandAutocompleteCallbackIntegerDataChoices[]? choices?;
};

# Represents the Queries record for the operation: list_guild_scheduled_event_users
public type ListGuildScheduledEventUsersQueries record {
    # 
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string before?;
    # 
    @constraint:Int {minValue: 1, maxValue: 100}
    int:Signed32 'limit?;
    # 
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string after?;
    # 
    @http:Query {name: "with_member"}
    boolean withMember?;
};

public type MessageComponentInputTextResponse record {
    @jsondata:Name {value: "min_length"}
    int:Signed32? minLength?;
    @jsondata:Name {value: "custom_id"}
    string customId;
    TextStyleTypes style;
    int:Signed32 id;
    string? label?;
    string? placeholder?;
    4 'type;
    string? value?;
    boolean? required?;
    @jsondata:Name {value: "max_length"}
    int:Signed32? maxLength?;
};

public type KeywordUpsertRequestActions BlockMessageAction|FlagToChannelAction|QuarantineUserAction|UserCommunicationDisabledAction|ActionsOneOf52?;

public type AUTOMODERATIONBLOCKMESSAGE 143;

public type HOMESETTINGSCREATE 190;

public type MentionSpamRuleResponseExemptchannelsItemsString string;

# Channel that can only contain threads
public type GUILDFORUM 15;

public type ROLEUPDATE 31;

public type IncomingWebhookUpdateRequestPartial record {
    # 
    ActionRow[]? components?;
    # 
    MessageAttachmentRequest[]? attachments?;
    int:Signed32? flags?;
    @jsondata:Name {value: "allowed_mentions"}
    anydata allowedMentions?;
    # 
    RichEmbed[]? embeds?;
    string? content?;
};

public type GuildStickerResponse record {
    @jsondata:Name {value: "format_type"}
    anydata formatType?;
    string name;
    boolean available;
    @jsondata:Name {value: "guild_id"}
    string guildId;
    string? description?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    2 'type;
    anydata user?;
    string tags;
};

public type MessageComponentActionRowResponseComponents MessageComponentButtonResponse|MessageComponentChannelSelectResponse|MessageComponentInputTextResponse|MessageComponentMentionableSelectResponse|MessageComponentRoleSelectResponse|MessageComponentStringSelectResponse|MessageComponentUserSelectResponse|ComponentsOneOf8?;

public type GIF 4;

public type ModalInteractionCallbackRequest record {
    ModalInteractionCallbackData data;
    9 'type;
};

public type GUILDINCIDENTREPORTFALSEALARM 39;

public type GithubWebhook record {
    @jsondata:Name {value: "pull_request"}
    anydata pullRequest?;
    @jsondata:Name {value: "head_commit"}
    anydata headCommit?;
    string? compare?;
    anydata issue?;
    anydata release?;
    boolean? forced?;
    anydata discussion?;
    anydata repository?;
    string? ref?;
    @jsondata:Name {value: "check_run"}
    anydata checkRun?;
    anydata answer?;
    GithubUser sender;
    anydata review?;
    anydata member?;
    string? action?;
    # 
    GithubCommit[]? commits?;
    anydata comment?;
    @jsondata:Name {value: "ref_type"}
    string? refType?;
    @jsondata:Name {value: "check_suite"}
    anydata checkSuite?;
    anydata forkee?;
};

# allows your app to upload/update builds for a user's applications - requires Discord approval
public type APPLICATIONSBUILDSUPLOAD "applications.builds.upload";

# A temporary sub-channel within a GUILD_TEXT channel that is only viewable by those invited and those with the MANAGE_THREADS permission
public type PRIVATETHREAD 12;

public type OptionsOneOf10 anydata?;

@constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
public type RolesOneOf1 string;

public type INTEGRATIONUPDATE 81;

# A user submitted a message to a channel
public type MESSAGESEND 1;

public type FriendInviteResponse record {
    @jsondata:Name {value: "max_age"}
    int:Signed32? maxAge?;
    @jsondata:Name {value: "friends_count"}
    int:Signed32? friendsCount?;
    string code;
    @jsondata:Name {value: "expires_at"}
    string? expiresAt?;
    @jsondata:Name {value: "max_uses"}
    int:Signed32? maxUses?;
    anydata channel?;
    int:Signed32? flags?;
    @jsondata:Name {value: "created_at"}
    string? createdAt?;
    anydata inviter?;
    int:Signed32? uses?;
    anydata 'type?;
    @jsondata:Name {value: "is_contact"}
    boolean? isContact?;
};

public type AccountResponse record {
    string? name?;
    string id;
};

public type CreateMessageInteractionCallbackRequest record {
    anydata data?;
    InteractionCallbackTypes 'type;
};

public type GuildIdScheduledEventsBody ExternalScheduledEventCreateRequest|StageScheduledEventCreateRequest|VoiceScheduledEventCreateRequest;

public type GuildsStickersRequest record {
    @constraint:String {maxLength: 30, minLength: 2}
    string name?;
    string? description?;
    @constraint:String {maxLength: 200, minLength: 1}
    string tags?;
};

# Represents the Headers record for the operation: update_message
public type UpdateMessageHeaders record {
    # 
    @http:Header {name: "Content-Type"}
    "application/x-www-form-urlencoded" contentType;
};

# Words and phrases that may be considered as sexual content
public type SEXUALCONTENT 2;

public type ChannelSelect record {
    # 
    @jsondata:Name {value: "default_values"}
    ChannelSelectDefaultValue[]? defaultValues?;
    @jsondata:Name {value: "min_values"}
    int:Signed32? minValues?;
    @jsondata:Name {value: "custom_id"}
    string customId;
    @jsondata:Name {value: "max_values"}
    int:Signed32? maxValues?;
    # 
    @jsondata:Name {value: "channel_types"}
    ChannelTypes[]? channelTypes?;
    boolean? disabled?;
    string? placeholder?;
    8 'type;
};

public type WebhooksRequest2 record {
    @constraint:String {maxLength: 80, minLength: 1}
    string name?;
    record {byte[] fileContent; string fileName;}? avatar?;
    @jsondata:Name {value: "channel_id"}
    anydata channelId?;
};

public type WebhooksRequest1 record {
    @constraint:String {maxLength: 80, minLength: 1}
    string name?;
    record {byte[] fileContent; string fileName;}? avatar?;
};

public type MessageRoleSubscriptionDataResponse record {
    @jsondata:Name {value: "tier_name"}
    string tierName;
    @jsondata:Name {value: "is_renewal"}
    boolean isRenewal;
    @jsondata:Name {value: "role_subscription_listing_id"}
    string roleSubscriptionListingId;
    @jsondata:Name {value: "total_months_subscribed"}
    int:Signed32 totalMonthsSubscribed;
};

public type CANCELED 4;

public type Emoji record {
    @constraint:String {maxLength: 32}
    string name;
    boolean? animated?;
    anydata id?;
};

public type DefaultKeywordListTriggerMetadataResponse record {
    # 
    AutomodKeywordPresetType[] presets;
    # 
    @jsondata:Name {value: "allow_list"}
    string[] allowList;
};

public type PremiumGuildTiers NONE4|TIER1|TIER2|TIER3;

public type GuildMemberResponse record {
    @jsondata:Name {value: "joined_at"}
    string joinedAt;
    string? nick?;
    @jsondata:Name {value: "premium_since"}
    string? premiumSince?;
    @jsondata:Name {value: "communication_disabled_until"}
    string? communicationDisabledUntil?;
    @jsondata:Name {value: "avatar_decoration_data"}
    anydata avatarDecorationData?;
    boolean pending;
    # 
    GuildMemberResponseRolesItemsString[] roles;
    int:Signed32 flags;
    boolean deaf;
    boolean mute;
    string? avatar?;
    UserResponse user;
};

public type GuildsWidgetRequest record {
    @jsondata:Name {value: "channel_id"}
    anydata channelId?;
    boolean? enabled?;
};

public type GithubComment record {
    @jsondata:Name {value: "html_url"}
    string htmlUrl;
    int:Signed32 id;
    @constraint:String {maxLength: 152133}
    string body;
    GithubUser user;
    @jsondata:Name {value: "commit_id"}
    string? commitId?;
};

public type ApplicationCommandBooleanOption record {
    @jsondata:Name {value: "name_localizations"}
    record {|string...;|}? nameLocalizations?;
    @constraint:String {maxLength: 32, minLength: 1}
    string name;
    @constraint:String {maxLength: 100, minLength: 1}
    string description;
    @jsondata:Name {value: "description_localizations"}
    record {|string...;|}? descriptionLocalizations?;
    5 'type;
    boolean? required?;
};

public type ChannelPermissionOverwriteResponse record {
    string allow;
    string deny;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    ChannelPermissionOverwrites 'type;
};

public type IncomingWebhookRequestPartialAppliedtagsItemsString string;

public type ApplicationResponse record {
    # 
    @jsondata:Name {value: "rpc_origins"}
    string[]? rpcOrigins?;
    @jsondata:Name {value: "privacy_policy_url"}
    string? privacyPolicyUrl?;
    @jsondata:Name {value: "bot_require_code_grant"}
    boolean? botRequireCodeGrant?;
    anydata bot?;
    string? icon?;
    int:Signed32 flags;
    string description;
    @jsondata:Name {value: "verify_key"}
    string verifyKey;
    anydata 'type?;
    @jsondata:Name {value: "max_participants"}
    int:Signed32? maxParticipants?;
    # 
    string[]? tags?;
    @jsondata:Name {value: "custom_install_url"}
    string? customInstallUrl?;
    @jsondata:Name {value: "install_params"}
    anydata installParams?;
    string name;
    @jsondata:Name {value: "guild_id"}
    anydata guildId?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    @jsondata:Name {value: "cover_image"}
    string? coverImage?;
    @jsondata:Name {value: "primary_sku_id"}
    anydata primarySkuId?;
    string? slug?;
    @jsondata:Name {value: "bot_public"}
    boolean? botPublic?;
    @jsondata:Name {value: "terms_of_service_url"}
    string? termsOfServiceUrl?;
};

# A UI-based command that shows up when you right click or tap on a user
public type USER 2;

public type MessageAllowedMentionsRequestUsers UsersOneOf1|UsersUsersOneOf12?;

@constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
public type EmojiResponseRolesItemsString string;

public type CreateGuildChannelRequestAvailableTags CreateOrUpdateThreadTagRequest|AvailableTagsOneOf2?;

# the metadata value (integer) is equal to the guild's configured value (integer)
public type INTEGEREQUAL 3;

public type INTERACTIONPREMIUMUPSELL 26;

public type MessageComponentEmojiResponse record {
    string name;
    boolean? animated?;
    anydata id?;
};

# DEPRECATED
public type SPAMLINK 2;

# Represents the Queries record for the operation: list_private_archived_threads
public type ListPrivateArchivedThreadsQueries record {
    # 
    string before?;
    # 
    @constraint:Int {minValue: 2, maxValue: 100}
    int:Signed32 'limit?;
};

public type MessageCallResponse record {
    @jsondata:Name {value: "ended_timestamp"}
    string? endedTimestamp?;
    # 
    MessageCallResponseParticipantsItemsString[] participants;
};

# Represents the Queries record for the operation: list_guild_bans
public type ListGuildBansQueries record {
    # 
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string before?;
    # 
    @constraint:Int {minValue: 1, maxValue: 1000}
    int:Signed32 'limit?;
    # 
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string after?;
};

public type SECONDARY 2;

public type DefaultKeywordListUpsertRequestPartialExemptrolesItemsString string;

# Represents the Queries record for the operation: list_application_commands
public type ListApplicationCommandsQueries record {
    # 
    @http:Query {name: "with_localizations"}
    boolean withLocalizations?;
};

public type ScheduledEventsguildScheduledEventIdBody ExternalScheduledEventPatchRequestPartial|StageScheduledEventPatchRequestPartial|VoiceScheduledEventPatchRequestPartial;

public type MESSAGEPIN 74;

public type SCHEDULED 1;

# Represents the Queries record for the operation: list_my_private_archived_threads
public type ListMyPrivateArchivedThreadsQueries record {
    # 
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string before?;
    # 
    @constraint:Int {minValue: 2, maxValue: 100}
    int:Signed32 'limit?;
};

# The channel in a hub containing the listed servers
public type GUILDDIRECTORY 14;

public type GuildRoleTagsResponse record {
    @jsondata:Name {value: "subscription_listing_id"}
    anydata subscriptionListingId?;
    @jsondata:Name {value: "guild_connections"}
    string? guildConnections?;
    @jsondata:Name {value: "integration_id"}
    anydata integrationId?;
    @jsondata:Name {value: "premium_subscriber"}
    string? premiumSubscriber?;
    @jsondata:Name {value: "available_for_purchase"}
    string? availableForPurchase?;
    @jsondata:Name {value: "bot_id"}
    anydata botId?;
};

public type Button record {
    anydata emoji?;
    @jsondata:Name {value: "custom_id"}
    string? customId?;
    ButtonStyleTypes style;
    boolean? disabled?;
    @jsondata:Name {value: "sku_id"}
    anydata skuId?;
    string? label?;
    2 'type;
    string? url?;
};

public type ApplicationCommandSubcommandOption record {
    @jsondata:Name {value: "name_localizations"}
    record {|string...;|}? nameLocalizations?;
    @constraint:String {maxLength: 32, minLength: 1}
    string name;
    # 
    ApplicationCommandSubcommandOptionOptions[]? options?;
    @constraint:String {maxLength: 100, minLength: 1}
    string description;
    @jsondata:Name {value: "description_localizations"}
    record {|string...;|}? descriptionLocalizations?;
    1 'type;
    boolean? required?;
};

public type GUILDDISCOVERYGRACEPERIODINITIALWARNING 16;

public type UserGuildOnboardingResponseDefaultchannelidsItemsString string;

public type GUILDAPPLICATIONPREMIUMSUBSCRIPTION 32;

public type DEFERREDCHANNELMESSAGEWITHSOURCE 5;

# must be registered on Discord for longer than 5 minutes
public type MEDIUM 2;

public type GuildOnboardingResponseDefaultchannelidsItemsString string;

# A temporary sub-channel within a GUILD_TEXT or GUILD_THREADS_ONLY channel type set
public type PUBLICTHREAD 11;

public type CHANNELPINNEDMESSAGE 6;

public type NewMemberActionResponse record {
    anydata emoji?;
    @jsondata:Name {value: "action_type"}
    NewMemberActionType actionType;
    string? icon?;
    string description;
    string title;
    @jsondata:Name {value: "channel_id"}
    string channelId;
};

# large image with guild icon, name and online count. "POWERED BY DISCORD" as the footer of the widget
public type BANNER1 "banner1";

# large image with guild icon, name and online count. In the footer, Discord logo on the left and "Chat Now" on the right
public type BANNER3 "banner3";

# Words and phrases that may be considered profanity
public type PROFANITY 1;

# smaller widget style with guild icon, name and online count. Split on the right with Discord logo
public type BANNER2 "banner2";

# for local rpc server access, this allows you to update a user's voice settings - requires Discord approval
public type RPCVOICEWRITE "rpc.voice.write";

public type ExternalScheduledEventCreateRequest record {
    record {byte[] fileContent; string fileName;}? image?;
    @jsondata:Name {value: "entity_type"}
    3 entityType;
    @jsondata:Name {value: "privacy_level"}
    GuildScheduledEventPrivacyLevels privacyLevel;
    @constraint:String {maxLength: 100}
    string name;
    @jsondata:Name {value: "entity_metadata"}
    EntityMetadataExternal entityMetadata;
    string? description?;
    @jsondata:Name {value: "channel_id"}
    anydata channelId?;
    @jsondata:Name {value: "scheduled_start_time"}
    string scheduledStartTime;
    @jsondata:Name {value: "scheduled_end_time"}
    string? scheduledEndTime?;
};

# guild has disabled activity alerts in the configured safety alerts channel
public type RAIDALERTSDISABLED "RAID_ALERTS_DISABLED";

public type ApplicationCommandOptionNumberChoice record {
    @jsondata:Name {value: "name_localizations"}
    record {|string...;|}? nameLocalizations?;
    @constraint:String {maxLength: 100, minLength: 1}
    string name;
    decimal value;
};

public type CONTEXTMENUCOMMAND 23;

# guild has access to set an animated guild icon
public type ANIMATEDICON "ANIMATED_ICON";

public type ApplicationCommandResponseOptions ApplicationCommandAttachmentOptionResponse|ApplicationCommandBooleanOptionResponse|ApplicationCommandChannelOptionResponse|ApplicationCommandIntegerOptionResponse|ApplicationCommandMentionableOptionResponse|ApplicationCommandNumberOptionResponse|ApplicationCommandRoleOptionResponse|ApplicationCommandStringOptionResponse|ApplicationCommandSubcommandGroupOptionResponse|ApplicationCommandSubcommandOptionResponse|ApplicationCommandUserOptionResponse|OptionsOneOf122?;

public type ROLESUBSCRIPTIONPURCHASE 25;

# large Discord logo at the top of the widget. Guild icon, name and online count in the middle portion of the widget and a "JOIN MY SERVER" button at the bottom
public type BANNER4 "banner4";

public type STAGETOPIC 31;

public type ONBOARDINGUPDATE 167;

public type MessageComponentStringSelectResponseOptions SelectOptionResponse|OptionsOneOf2?;

public type VanityURLResponse record {
    string? code?;
    int:Signed32 uses;
    anydata 'error?;
};

# allows your app to fetch data from a user's "Now Playing/Recently Played" list - requires Discord approval
public type ACTIVITIESREAD "activities.read";

public type WEBHOOKUPDATE 51;

public type PrivateChannelResponse record {
    @jsondata:Name {value: "last_message_id"}
    anydata lastMessageId?;
    @jsondata:Name {value: "last_pin_timestamp"}
    string? lastPinTimestamp?;
    # 
    UserResponse[] recipients;
    int:Signed32 flags;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    1 'type;
};

# One day
public type ONEDAY 1440;

# Represents the Queries record for the operation: list_public_archived_threads
public type ListPublicArchivedThreadsQueries record {
    # 
    string before?;
    # 
    @constraint:Int {minValue: 2, maxValue: 100}
    int:Signed32 'limit?;
};

# allows your app to update its commands using a Bearer token - client credentials grant only
public type APPLICATIONSCOMMANDSUPDATE "applications.commands.update";

public type BotAccountPatchRequest record {
    record {byte[] fileContent; string fileName;}? banner?;
    record {byte[] fileContent; string fileName;}? avatar?;
    @constraint:String {maxLength: 32, minLength: 2}
    string username;
};

# Represents the Queries record for the operation: execute_slack_compatible_webhook
public type ExecuteSlackCompatibleWebhookQueries record {
    # 
    boolean 'wait?;
    # 
    @http:Query {name: "thread_id"}
    string threadId?;
};

public type COMPLETED 3;

public type BulkBanUsersResponse record {
    # 
    @jsondata:Name {value: "failed_users"}
    BulkBanUsersResponseFailedusersItemsString[] failedUsers;
    # 
    @jsondata:Name {value: "banned_users"}
    BulkBanUsersResponseBannedusersItemsString[] bannedUsers;
};

# guild is partnered
public type PARTNERED "PARTNERED";

public type VOICECHANNELSTATUSDELETE 193;

@constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
public type SkuIdsSkuIdsOneOf12OneOf1 string;

public type ApplicationCommandCreateRequestOptions ApplicationCommandAttachmentOption|ApplicationCommandBooleanOption|ApplicationCommandChannelOption|ApplicationCommandIntegerOption|ApplicationCommandMentionableOption|ApplicationCommandNumberOption|ApplicationCommandRoleOption|ApplicationCommandStringOption|ApplicationCommandSubcommandGroupOption|ApplicationCommandSubcommandOption|ApplicationCommandUserOption|OptionsOneOf12?;

public type WelcomeScreenPatchRequestPartial record {
    # 
    @jsondata:Name {value: "welcome_channels"}
    GuildWelcomeChannel[]? welcomeChannels?;
    string? description?;
    boolean? enabled?;
};

public type ApplicationCommandBooleanOptionResponse record {
    @jsondata:Name {value: "name_localized"}
    string? nameLocalized?;
    @jsondata:Name {value: "name_localizations"}
    record {|string...;|}? nameLocalizations?;
    string name;
    string description;
    @jsondata:Name {value: "description_localized"}
    string? descriptionLocalized?;
    @jsondata:Name {value: "description_localizations"}
    record {|string...;|}? descriptionLocalizations?;
    5 'type;
    boolean? required?;
};

public type EntityMetadataExternalResponse record {
    string location;
};

# Represents the Queries record for the operation: preview_prune_guild
public type PreviewPruneGuildQueries record {
    # 
    @constraint:Int {minValue: 1, maxValue: 30}
    int:Signed32 days?;
    # 
    @http:Query {name: "include_roles"}
    IncludeRoles includeRoles?;
};

public type GuildRoleResponse record {
    int:Signed32 color;
    @jsondata:Name {value: "unicode_emoji"}
    string? unicodeEmoji?;
    string permissions;
    boolean managed;
    string name;
    string? icon?;
    string? description?;
    boolean mentionable;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    int:Signed32 position;
    boolean hoist;
    anydata tags?;
};

public type ApplicationCommandOptionNumberChoiceResponse record {
    @jsondata:Name {value: "name_localized"}
    string? nameLocalized?;
    @jsondata:Name {value: "name_localizations"}
    record {|string...;|}? nameLocalizations?;
    string name;
    decimal value;
};

public type StageInstanceResponse record {
    @jsondata:Name {value: "privacy_level"}
    StageInstancesPrivacyLevels privacyLevel;
    @jsondata:Name {value: "guild_id"}
    string guildId;
    string topic;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    @jsondata:Name {value: "guild_scheduled_event_id"}
    anydata guildScheduledEventId?;
    @jsondata:Name {value: "discoverable_disabled"}
    boolean? discoverableDisabled?;
    @jsondata:Name {value: "channel_id"}
    string channelId;
};

public type IncomingWebhookRequestPartial record {
    # 
    ActionRow[]? components?;
    boolean? tts?;
    # 
    MessageAttachmentRequest[]? attachments?;
    @jsondata:Name {value: "avatar_url"}
    string? avatarUrl?;
    @jsondata:Name {value: "thread_name"}
    string? threadName?;
    int:Signed32? flags?;
    @jsondata:Name {value: "allowed_mentions"}
    anydata allowedMentions?;
    # 
    RichEmbed[]? embeds?;
    string? content?;
    string? username?;
    # 
    @jsondata:Name {value: "applied_tags"}
    IncomingWebhookRequestPartialAppliedtagsItemsString[]? appliedTags?;
};

public type WidgetChannel record {
    string name;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    int:Signed32 position;
};

public type UpdateThreadRequestPartial record {
    boolean? archived?;
    @jsondata:Name {value: "rtc_region"}
    string? rtcRegion?;
    @jsondata:Name {value: "rate_limit_per_user"}
    int:Signed32? rateLimitPerUser?;
    string? name?;
    int:Signed32? flags?;
    boolean? invitable?;
    int:Signed32? bitrate?;
    boolean? locked?;
    @jsondata:Name {value: "user_limit"}
    int:Signed32? userLimit?;
    @jsondata:Name {value: "auto_archive_duration"}
    anydata autoArchiveDuration?;
    # 
    @jsondata:Name {value: "applied_tags"}
    UpdateThreadRequestPartialAppliedtagsItemsString[]? appliedTags?;
    @jsondata:Name {value: "video_quality_mode"}
    anydata videoQualityMode?;
};

# Sent when a user submits a modal previously sent by your application
public type MODALSUBMIT 5;

public type InteractionApplicationCommandAutocompleteCallbackStringData record {
    # 
    InteractionApplicationCommandAutocompleteCallbackStringDataChoices[]? choices?;
};

public type AuditLogObjectChangeResponse record {
    @jsondata:Name {value: "old_value"}
    anydata oldValue?;
    string? 'key?;
    @jsondata:Name {value: "new_value"}
    anydata newValue?;
};

public type ROLECREATE 30;

public type InlineResponse2001 DefaultKeywordRuleResponse|KeywordRuleResponse|MLSpamRuleResponse|MentionSpamRuleResponse|SpamLinkRuleResponse;

# allows your app to join users to a group dm
public type GDMJOIN "gdm.join";

public type InlineResponse2003 ExternalScheduledEventResponse|StageScheduledEventResponse|VoiceScheduledEventResponse;

public type InlineResponse2002 FriendInviteResponse|GroupDMInviteResponse|GuildInviteResponse;

public type InlineResponse2005 GuildStickerResponse|StandardStickerResponse;

public type InlineResponse2004 ApplicationIncomingWebhookResponse|ChannelFollowerWebhookResponse|GuildIncomingWebhookResponse;

public type InlineResponse2006 GuildChannelResponse|PrivateChannelResponse|PrivateGroupChannelResponse|ThreadResponse;

public type RichEmbedFooter record {
    @jsondata:Name {value: "icon_url"}
    string? iconUrl?;
    string? text?;
};

# Represents the Queries record for the operation: update_original_webhook_message
public type UpdateOriginalWebhookMessageQueries record {
    # 
    @http:Query {name: "thread_id"}
    string threadId?;
};

public type MentionSpamRuleResponseExemptrolesItemsString string;

public type StickersOneOf3 anydata?;

public type TALK 1;

# Represents the Headers record for the operation: execute_slack_compatible_webhook
public type ExecuteSlackCompatibleWebhookHeaders record {
    # 
    @http:Header {name: "Content-Type"}
    "application/x-www-form-urlencoded" contentType;
};

public type CREATORMONETIZATIONREQUESTCREATED 150;

public type MyGuildResponse record {
    boolean owner;
    # 
    GuildFeatures[] features;
    @jsondata:Name {value: "approximate_presence_count"}
    int:Signed32? approximatePresenceCount?;
    string permissions;
    @jsondata:Name {value: "approximate_member_count"}
    int:Signed32? approximateMemberCount?;
    string name;
    string? icon?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
};

# allows your app to use commands in a guild
public type APPLICATIONSCOMMANDS "applications.commands";

public type CommandPermissionsResponse record {
    # 
    CommandPermissionResponse[] permissions;
    @jsondata:Name {value: "guild_id"}
    string guildId;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    @jsondata:Name {value: "application_id"}
    string applicationId;
};

public type ResolvedObjectsResponse record {
    record {} channels;
    record {|GuildMemberResponse...;|} members;
    record {|GuildRoleResponse...;|} roles;
    record {|UserResponse...;|} users;
};

public type MLSpamUpsertRequestPartialExemptrolesItemsString string;

# A channel that users can follow and crosspost into their own server (formerly news channels)
public type GUILDANNOUNCEMENT 5;

public type GuildResponse record {
    @jsondata:Name {value: "max_stage_video_channel_users"}
    int:Signed32? maxStageVideoChannelUsers?;
    @jsondata:Name {value: "preferred_locale"}
    AvailableLocalesEnum preferredLocale;
    @jsondata:Name {value: "default_message_notifications"}
    UserNotificationSettings defaultMessageNotifications;
    @jsondata:Name {value: "owner_id"}
    string ownerId;
    @jsondata:Name {value: "widget_channel_id"}
    anydata widgetChannelId?;
    # 
    GuildRoleResponse[] roles;
    string? icon?;
    string? description?;
    @jsondata:Name {value: "system_channel_id"}
    anydata systemChannelId?;
    @jsondata:Name {value: "rules_channel_id"}
    anydata rulesChannelId?;
    @jsondata:Name {value: "afk_timeout"}
    AfkTimeouts afkTimeout;
    # 
    GuildFeatures[] features;
    @jsondata:Name {value: "afk_channel_id"}
    anydata afkChannelId?;
    @jsondata:Name {value: "max_members"}
    int:Signed32? maxMembers?;
    # 
    GuildStickerResponse[] stickers;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    @jsondata:Name {value: "widget_enabled"}
    boolean widgetEnabled;
    @jsondata:Name {value: "max_video_channel_users"}
    int:Signed32? maxVideoChannelUsers?;
    @jsondata:Name {value: "nsfw_level"}
    GuildNSFWContentLevel nsfwLevel;
    @jsondata:Name {value: "safety_alerts_channel_id"}
    anydata safetyAlertsChannelId?;
    # 
    EmojiResponse[] emojis;
    boolean nsfw;
    @jsondata:Name {value: "vanity_url_code"}
    string? vanityUrlCode?;
    @jsondata:Name {value: "system_channel_flags"}
    int:Signed32 systemChannelFlags;
    @jsondata:Name {value: "max_presences"}
    int:Signed32? maxPresences?;
    @jsondata:Name {value: "premium_progress_bar_enabled"}
    boolean premiumProgressBarEnabled;
    string? banner?;
    @jsondata:Name {value: "premium_subscription_count"}
    int:Signed32 premiumSubscriptionCount;
    @jsondata:Name {value: "public_updates_channel_id"}
    anydata publicUpdatesChannelId?;
    @jsondata:Name {value: "application_id"}
    anydata applicationId?;
    @jsondata:Name {value: "home_header"}
    string? homeHeader?;
    @jsondata:Name {value: "verification_level"}
    VerificationLevels verificationLevel;
    @jsondata:Name {value: "discovery_splash"}
    string? discoverySplash?;
    @jsondata:Name {value: "explicit_content_filter"}
    GuildExplicitContentFilterTypes explicitContentFilter;
    string name;
    @jsondata:Name {value: "mfa_level"}
    GuildMFALevel mfaLevel;
    @jsondata:Name {value: "premium_tier"}
    PremiumGuildTiers premiumTier;
    string region;
    string? splash?;
};

public type BasicMessageResponse record {
    @jsondata:Name {value: "mention_everyone"}
    boolean mentionEveryone;
    # 
    BasicMessageResponseComponents[] components;
    boolean pinned;
    # 
    MessageAttachmentResponse[] attachments;
    anydata activity?;
    int:Signed32 flags;
    MessageType 'type;
    # 
    @jsondata:Name {value: "mention_roles"}
    BasicMessageResponseMentionrolesItemsString[] mentionRoles;
    string content;
    @jsondata:Name {value: "edited_timestamp"}
    string? editedTimestamp?;
    # 
    BasicMessageResponseStickers[]? stickers?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    @jsondata:Name {value: "message_reference"}
    anydata messageReference?;
    # 
    @jsondata:Name {value: "sticker_items"}
    MessageStickerItemResponse[]? stickerItems?;
    string timestamp;
    anydata resolved?;
    @jsondata:Name {value: "role_subscription_data"}
    anydata roleSubscriptionData?;
    UserResponse author;
    anydata thread?;
    @jsondata:Name {value: "application_id"}
    anydata applicationId?;
    anydata nonce?;
    anydata call?;
    boolean tts;
    # 
    @jsondata:Name {value: "mention_channels"}
    BasicMessageResponseMentionChannels[]? mentionChannels?;
    anydata application?;
    @jsondata:Name {value: "webhook_id"}
    anydata webhookId?;
    # 
    UserResponse[] mentions;
    @jsondata:Name {value: "purchase_notification"}
    anydata purchaseNotification?;
    anydata interaction?;
    int:Signed32? position?;
    @jsondata:Name {value: "channel_id"}
    string channelId;
    # 
    MessageEmbedResponse[] embeds;
};

public type CreateOrUpdateThreadTagRequest record {
    boolean? moderated?;
    @constraint:String {maxLength: 20}
    string name;
    @jsondata:Name {value: "emoji_id"}
    anydata emojiId?;
    @jsondata:Name {value: "emoji_name"}
    string? emojiName?;
};

# media content will not be scanned
public type DISABLED 0;

public type GuildProductPurchaseResponse record {
    @jsondata:Name {value: "listing_id"}
    string listingId;
    @jsondata:Name {value: "product_name"}
    string productName;
};

public type UPDATEMESSAGE 7;

public type ApplicationCommandPermission record {
    boolean permission;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    ApplicationCommandPermissionType 'type;
};

public type DefaultKeywordListTriggerMetadataAllowlistItemsString string;

public type BlockMessageActionMetadata record {
    @jsondata:Name {value: "custom_message"}
    string? customMessage?;
};

public type AGERESTRICTED 3;

public type CREATORMONETIZATIONTERMSACCEPTED 151;

public type EMOJIDELETE 62;

public type ApplicationCommandOptionStringChoiceResponse record {
    @jsondata:Name {value: "name_localized"}
    string? nameLocalized?;
    @jsondata:Name {value: "name_localizations"}
    record {|string...;|}? nameLocalizations?;
    string name;
    string value;
};

public type OAuth2GetAuthorizationResponse record {
    string expires;
    ApplicationResponse application;
    # 
    OAuth2Scopes[] scopes;
    anydata user?;
};

public type MentionSpamUpsertRequest record {
    @jsondata:Name {value: "event_type"}
    AutomodEventType eventType;
    @jsondata:Name {value: "trigger_type"}
    5 triggerType;
    @constraint:String {maxLength: 100}
    string name;
    # 
    @jsondata:Name {value: "exempt_roles"}
    MentionSpamUpsertRequestExemptrolesItemsString[]? exemptRoles?;
    # 
    @jsondata:Name {value: "exempt_channels"}
    MentionSpamUpsertRequestExemptchannelsItemsString[]? exemptChannels?;
    # 
    MentionSpamUpsertRequestActions[]? actions?;
    boolean? enabled?;
    @jsondata:Name {value: "trigger_metadata"}
    anydata triggerMetadata?;
};

public type BATTLENET "battlenet";

public type STAGEINSTANCEDELETE 85;

public type InviteChannelResponse record {
    # 
    InviteChannelRecipientResponse[]? recipients?;
    string? name?;
    string? icon?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    ChannelTypes 'type;
};

# Check if content contains words from internal pre-defined wordsets
public type DEFAULTKEYWORDLIST 4;

public type GithubCommit record {
    GithubAuthor author;
    @constraint:String {maxLength: 152133}
    string id;
    @constraint:String {maxLength: 152133}
    string message;
    @constraint:String {maxLength: 2048}
    string url;
};

public type TeamResponse record {
    @jsondata:Name {value: "owner_user_id"}
    string ownerUserId;
    # 
    TeamMemberResponse[] members;
    string? icon?;
    string name;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
};

public type SelectOption record {
    boolean? default?;
    anydata emoji?;
    string? description?;
    @constraint:String {maxLength: 100, minLength: 1}
    string label;
    @constraint:String {maxLength: 100, minLength: 1}
    string value;
};

public type ConnectedAccountProviders BATTLENET|BUNGIE|EBAY|EPICGAMES|FACEBOOK|GITHUB|INSTAGRAM|LEAGUEOFLEGENDS|PAYPAL|PLAYSTATION|REDDIT|RIOTGAMES|ROBLOX|SKYPE|SPOTIFY|STEAM|TIKTOK|TWITCH|TWITTER|XBOX|YOUTUBE|DOMAIN;

public type KeywordUpsertRequestPartialActions BlockMessageAction|FlagToChannelAction|QuarantineUserAction|UserCommunicationDisabledAction|ActionsOneOf53?;

public type SelectOptionResponse record {
    boolean? default?;
    anydata emoji?;
    string? description?;
    string label;
    string value;
};

public type STAGESTART 27;

public type ActionRow record {
    # 
    @constraint:Array {maxLength: 5, minLength: 1}
    ActionRowComponents[] components;
    1 'type;
};

# for local rpc server access, this allows you to update a user's video settings - requires Discord approval
public type RPCVIDEOWRITE "rpc.video.write";

# guild has role subscriptions that can be purchased
public type ROLESUBSCRIPTIONSAVAILABLEFORPURCHASE "ROLE_SUBSCRIPTIONS_AVAILABLE_FOR_PURCHASE";

public type MessageResponseMentionrolesItemsString string;

# for local rpc server access, this allows you to update a user's activity - requires Discord approval
public type RPCACTIVITIESWRITE "rpc.activities.write";

public type RichEmbed record {
    anydata image?;
    anydata thumbnail?;
    int:Signed32? color?;
    anydata footer?;
    anydata author?;
    string? description?;
    anydata video?;
    string? 'type?;
    string? title?;
    string? url?;
    anydata provider?;
    # 
    RichEmbedField[]? fields?;
    string? timestamp?;
};

public type DEFAULT 0;

public type InteractionTokenCallbackBody ApplicationCommandAutocompleteCallbackRequest|CreateMessageInteractionCallbackRequest|ModalInteractionCallbackRequest|PongInteractionCallbackRequest|UpdateMessageInteractionCallbackRequest;

public type MessageEmbedResponse record {
    anydata image?;
    anydata thumbnail?;
    int:Signed32? color?;
    anydata footer?;
    anydata author?;
    string? description?;
    anydata video?;
    string 'type;
    string? title?;
    string? url?;
    anydata provider?;
    # 
    MessageEmbedFieldResponse[]? fields?;
    string? timestamp?;
};

public type OnboardingPromptResponse record {
    @jsondata:Name {value: "in_onboarding"}
    boolean inOnboarding;
    # 
    OnboardingPromptOptionResponse[] options;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    string title;
    OnboardingPromptType 'type;
    @jsondata:Name {value: "single_select"}
    boolean singleSelect;
    boolean required;
};

public type InteractionApplicationCommandAutocompleteCallbackNumberData record {
    # 
    InteractionApplicationCommandAutocompleteCallbackNumberDataChoices[]? choices?;
};

# The en-US locale
public type EnUS "en-US";

public type GuildsPruneRequest record {
    @jsondata:Name {value: "compute_prune_count"}
    boolean? computePruneCount?;
    int:Signed32? days?;
    @jsondata:Name {value: "include_roles"}
    anydata includeRoles?;
};

public type ChannelTypes DM|GROUPDM|GUILDTEXT|GUILDVOICE|GUILDCATEGORY|GUILDANNOUNCEMENT|ANNOUNCEMENTTHREAD|PUBLICTHREAD|PRIVATETHREAD|GUILDSTAGEVOICE|GUILDDIRECTORY|GUILDFORUM;

public type StageScheduledEventPatchRequestPartial record {
    record {byte[] fileContent; string fileName;}? image?;
    @jsondata:Name {value: "entity_type"}
    anydata entityType?;
    @jsondata:Name {value: "privacy_level"}
    GuildScheduledEventPrivacyLevels privacyLevel?;
    @constraint:String {maxLength: 100}
    string name?;
    @jsondata:Name {value: "entity_metadata"}
    anydata entityMetadata?;
    string? description?;
    @jsondata:Name {value: "channel_id"}
    anydata channelId?;
    anydata status?;
    @jsondata:Name {value: "scheduled_start_time"}
    string scheduledStartTime?;
    @jsondata:Name {value: "scheduled_end_time"}
    string? scheduledEndTime?;
};

public type CHANNELCREATE 10;

public type AUTOMODERATIONRULEUPDATE 141;

public type GuildPatchRequestPartialFeaturesItemsString string?;

public type UpdateGuildOnboardingRequest record {
    anydata mode?;
    # 
    @jsondata:Name {value: "default_channel_ids"}
    UpdateGuildOnboardingRequestDefaultchannelidsItemsString[]? defaultChannelIds?;
    # 
    UpdateOnboardingPromptRequest[]? prompts?;
    boolean? enabled?;
};

public type WEBHOOKCREATE 50;

public type RichEmbedThumbnail record {
    int:Signed32? width?;
    @jsondata:Name {value: "placeholder_version"}
    int:Signed32? placeholderVersion?;
    string? placeholder?;
    string? url?;
    int:Signed32? height?;
};

public type ChannelsPermissionsRequest record {
    int:Signed32? allow?;
    int:Signed32? deny?;
    anydata 'type?;
};

public type ApplicationCommandAutocompleteCallbackRequest record {
    InteractionApplicationCommandAutocompleteCallbackIntegerData|InteractionApplicationCommandAutocompleteCallbackNumberData|InteractionApplicationCommandAutocompleteCallbackStringData data;
    8 'type;
};

# Represents the Queries record for the operation: invite_resolve
public type InviteResolveQueries record {
    # 
    @http:Query {name: "with_counts"}
    boolean withCounts?;
    # 
    @http:Query {name: "guild_scheduled_event_id"}
    string guildScheduledEventId?;
};

public type InviteStageInstanceResponse record {
    @jsondata:Name {value: "speaker_count"}
    int:Signed32? speakerCount?;
    @jsondata:Name {value: "participant_count"}
    int:Signed32? participantCount?;
    # 
    GuildMemberResponse[]? members?;
    string topic;
};

public type RichEmbedProvider record {
    string? name?;
    string? url?;
};

public type ApplicationCommandSubcommandGroupOptionResponse record {
    @jsondata:Name {value: "name_localized"}
    string? nameLocalized?;
    @jsondata:Name {value: "name_localizations"}
    record {|string...;|}? nameLocalizations?;
    string name;
    # 
    ApplicationCommandSubcommandOptionResponse[]? options?;
    string description;
    @jsondata:Name {value: "description_localized"}
    string? descriptionLocalized?;
    @jsondata:Name {value: "description_localizations"}
    record {|string...;|}? descriptionLocalizations?;
    2 'type;
    boolean? required?;
};

public type ApplicationCommandUserOption record {
    @jsondata:Name {value: "name_localizations"}
    record {|string...;|}? nameLocalizations?;
    @constraint:String {maxLength: 32, minLength: 1}
    string name;
    @constraint:String {maxLength: 100, minLength: 1}
    string description;
    @jsondata:Name {value: "description_localizations"}
    record {|string...;|}? descriptionLocalizations?;
    6 'type;
    boolean? required?;
};

public type BlockMessageActionMetadataResponse record {
    @jsondata:Name {value: "custom_message"}
    string? customMessage?;
};

public type MessageResponseStickers GuildStickerResponse|StandardStickerResponse|StickersOneOf31?;

public type ApplicationIncomingWebhookResponse record {
    @jsondata:Name {value: "guild_id"}
    anydata guildId?;
    string name;
    string? avatar?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    3 'type;
    @jsondata:Name {value: "application_id"}
    anydata applicationId?;
    @jsondata:Name {value: "channel_id"}
    anydata channelId?;
    anydata user?;
};

public type MentionSpamUpsertRequestPartialExemptchannelsItemsString string;

# A voice channel for hosting events with an audience
public type GUILDSTAGEVOICE 13;

public type MESSAGEDELETE 72;

public type ApplicationCommandPatchRequestPartialOptions ApplicationCommandAttachmentOption|ApplicationCommandBooleanOption|ApplicationCommandChannelOption|ApplicationCommandIntegerOption|ApplicationCommandMentionableOption|ApplicationCommandNumberOption|ApplicationCommandRoleOption|ApplicationCommandStringOption|ApplicationCommandSubcommandGroupOption|ApplicationCommandSubcommandOption|ApplicationCommandUserOption|OptionsOneOf121?;

public type VerificationLevels NONE2|LOW|MEDIUM|HIGH|VERYHIGH;

@constraint:String {maxLength: 20}
public type ApplicationFormPartialTagsItemsString string;

# Represents the Queries record for the operation: list_my_guilds
public type ListMyGuildsQueries record {
    # 
    @http:Query {name: "with_counts"}
    boolean withCounts?;
    # 
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string before?;
    # 
    @constraint:Int {minValue: 1, maxValue: 200}
    int:Signed32 'limit?;
    # 
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string after?;
};

public type BasicMessageResponseMentionrolesItemsString string;

public type ONBOARDINGPROMPTDELETE 165;

public type AUTOMODERATIONQUARANTINEUSER 146;

public type AuditLogActionTypes GUILDUPDATE|CHANNELCREATE|CHANNELUPDATE|CHANNELDELETE|CHANNELOVERWRITECREATE|CHANNELOVERWRITEUPDATE|CHANNELOVERWRITEDELETE|MEMBERKICK|MEMBERPRUNE|MEMBERBANADD|MEMBERBANREMOVE|MEMBERUPDATE|MEMBERROLEUPDATE|MEMBERMOVE|MEMBERDISCONNECT|BOTADD|ROLECREATE|ROLEUPDATE|ROLEDELETE|INVITECREATE|INVITEUPDATE|INVITEDELETE|WEBHOOKCREATE|WEBHOOKUPDATE|WEBHOOKDELETE|EMOJICREATE|EMOJIUPDATE|EMOJIDELETE|MESSAGEDELETE|MESSAGEBULKDELETE|MESSAGEPIN|MESSAGEUNPIN|INTEGRATIONCREATE|INTEGRATIONUPDATE|INTEGRATIONDELETE|STAGEINSTANCECREATE|STAGEINSTANCEUPDATE|STAGEINSTANCEDELETE|STICKERCREATE|STICKERUPDATE|STICKERDELETE|GUILDSCHEDULEDEVENTCREATE|GUILDSCHEDULEDEVENTUPDATE|GUILDSCHEDULEDEVENTDELETE|THREADCREATE|THREADUPDATE|THREADDELETE|APPLICATIONCOMMANDPERMISSIONUPDATE|SOUNDBOARDSOUNDCREATE|SOUNDBOARDSOUNDUPDATE|SOUNDBOARDSOUNDDELETE|AUTOMODERATIONRULECREATE|AUTOMODERATIONRULEUPDATE|AUTOMODERATIONRULEDELETE|AUTOMODERATIONBLOCKMESSAGE|AUTOMODERATIONFLAGTOCHANNEL|AUTOMODERATIONUSERCOMMDISABLED|AUTOMODERATIONQUARANTINEUSER|CREATORMONETIZATIONREQUESTCREATED|CREATORMONETIZATIONTERMSACCEPTED|ONBOARDINGPROMPTCREATE|ONBOARDINGPROMPTUPDATE|ONBOARDINGPROMPTDELETE|ONBOARDINGCREATE|ONBOARDINGUPDATE|GUILDHOMEFEATUREITEM|GUILDHOMEREMOVEITEM|HARMFULLINKSBLOCKEDMESSAGE|HOMESETTINGSCREATE|HOMESETTINGSUPDATE|VOICECHANNELSTATUSCREATE|VOICECHANNELSTATUSDELETE;

public type EntitlementResponse record {
    @jsondata:Name {value: "fulfilled_at"}
    string? fulfilledAt?;
    boolean? consumed?;
    @jsondata:Name {value: "starts_at"}
    string? startsAt?;
    boolean deleted;
    @jsondata:Name {value: "fulfillment_status"}
    anydata fulfillmentStatus?;
    @jsondata:Name {value: "user_id"}
    string userId;
    @jsondata:Name {value: "guild_id"}
    anydata guildId?;
    @jsondata:Name {value: "sku_id"}
    string skuId;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    @jsondata:Name {value: "ends_at"}
    string? endsAt?;
    EntitlementTypes 'type;
    @jsondata:Name {value: "application_id"}
    string applicationId;
};

public type ForumTagResponse record {
    boolean moderated;
    string name;
    @jsondata:Name {value: "emoji_id"}
    anydata emojiId?;
    @jsondata:Name {value: "emoji_name"}
    string? emojiName?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
};

public type KeywordUpsertRequestPartialExemptchannelsItemsString string;

# must be a member of the server for longer than 10 minutes
public type HIGH 3;

public type TextStyleTypes SHORT|PARAGRAPH;

public type REDDIT "reddit";

public type KeywordTriggerMetadataAllowlistItemsString string;

public type STEAM "steam";

# Sent when a user is filling in an autocomplete option in a chat command
public type APPLICATIONCOMMANDAUTOCOMPLETE 4;

public type GuildsEmojisRequestRoles RolesOneOf11|RolesRolesOneOf112?;

public type ApplicationCommandSubcommandOptionResponse record {
    @jsondata:Name {value: "name_localized"}
    string? nameLocalized?;
    @jsondata:Name {value: "name_localizations"}
    record {|string...;|}? nameLocalizations?;
    string name;
    # 
    ApplicationCommandSubcommandOptionResponseOptions[]? options?;
    string description;
    @jsondata:Name {value: "description_localized"}
    string? descriptionLocalized?;
    @jsondata:Name {value: "description_localizations"}
    record {|string...;|}? descriptionLocalizations?;
    1 'type;
    boolean? required?;
};

public type GuildPatchRequestPartial record {
    @jsondata:Name {value: "preferred_locale"}
    anydata preferredLocale?;
    @jsondata:Name {value: "default_message_notifications"}
    anydata defaultMessageNotifications?;
    @jsondata:Name {value: "owner_id"}
    string ownerId?;
    @jsondata:Name {value: "system_channel_flags"}
    int:Signed32? systemChannelFlags?;
    @jsondata:Name {value: "premium_progress_bar_enabled"}
    boolean? premiumProgressBarEnabled?;
    record {byte[] fileContent; string fileName;}? icon?;
    string? description?;
    @jsondata:Name {value: "system_channel_id"}
    anydata systemChannelId?;
    record {byte[] fileContent; string fileName;}? banner?;
    @jsondata:Name {value: "rules_channel_id"}
    anydata rulesChannelId?;
    @jsondata:Name {value: "afk_timeout"}
    anydata afkTimeout?;
    @jsondata:Name {value: "public_updates_channel_id"}
    anydata publicUpdatesChannelId?;
    # 
    GuildPatchRequestPartialFeaturesItemsString[]? features?;
    @jsondata:Name {value: "home_header"}
    record {byte[] fileContent; string fileName;}? homeHeader?;
    @jsondata:Name {value: "verification_level"}
    anydata verificationLevel?;
    @jsondata:Name {value: "explicit_content_filter"}
    anydata explicitContentFilter?;
    @jsondata:Name {value: "discovery_splash"}
    record {byte[] fileContent; string fileName;}? discoverySplash?;
    @jsondata:Name {value: "afk_channel_id"}
    anydata afkChannelId?;
    @constraint:String {maxLength: 100, minLength: 2}
    string name?;
    string? region?;
    record {byte[] fileContent; string fileName;}? splash?;
    @jsondata:Name {value: "safety_alerts_channel_id"}
    anydata safetyAlertsChannelId?;
};

public type MEMBERDISCONNECT 27;

public type EXPLICIT 1;

public type CreateForumThreadRequest record {
    @jsondata:Name {value: "rate_limit_per_user"}
    int:Signed32? rateLimitPerUser?;
    @constraint:String {maxLength: 100, minLength: 1}
    string name;
    BaseCreateMessageCreateRequest message;
    @jsondata:Name {value: "auto_archive_duration"}
    anydata autoArchiveDuration?;
    # 
    @jsondata:Name {value: "applied_tags"}
    CreateForumThreadRequestAppliedtagsItemsString[]? appliedTags?;
};

public type FIVEMINUTES 300;

public type OAuth2Key record {
    string kty;
    string e;
    string use;
    string kid;
    string alg;
    string n;
};

public type STICKERDELETE 92;

public type QuarantineUserAction record {
    anydata metadata?;
    4 'type;
};

public type KeywordTriggerMetadataRegexpatternsItemsString string;

public type ApplicationCommandPatchRequestPartial record {
    @jsondata:Name {value: "name_localizations"}
    record {|string...;|}? nameLocalizations?;
    @jsondata:Name {value: "dm_permission"}
    boolean? dmPermission?;
    @constraint:String {maxLength: 32, minLength: 1}
    string name?;
    # 
    ApplicationCommandPatchRequestPartialOptions[]? options?;
    string? description?;
    @jsondata:Name {value: "description_localizations"}
    record {|string...;|}? descriptionLocalizations?;
    @jsondata:Name {value: "default_member_permissions"}
    int:Signed32? defaultMemberPermissions?;
};

public type LOTTIE 3;

public type SOUNDBOARDSOUNDCREATE 130;

# guild has enabled ticketed events
public type TICKETEDEVENTSENABLED "TICKETED_EVENTS_ENABLED";

public type EBAY "ebay";

public type GuildScheduledEventPrivacyLevels GUILDONLY;

public type OAuth2GetKeys record {
    # 
    OAuth2Key[] keys;
};

public type USERJOIN 7;

public type SpamLinkRuleResponseExemptrolesItemsString string;

# for local rpc server access, this allows you to control a user's local Discord client - requires Discord approval
public type RPC "rpc";

public type ThreadsResponse record {
    # 
    ThreadMemberResponse[] members;
    # 
    ThreadResponse[] threads;
    @jsondata:Name {value: "has_more"}
    boolean? hasMore?;
};

public type BulkBanUsersResponseFailedusersItemsString string;

public type InlineResponse200 PrivateChannelResponse|PrivateGroupChannelResponse;

public type GuildsMembersRequest1Roles RolesOneOf14|RolesRolesOneOf142?;

public type BulkBanUsersResponseBannedusersItemsString string;

public type RichEmbedVideo record {
    int:Signed32? width?;
    @jsondata:Name {value: "placeholder_version"}
    int:Signed32? placeholderVersion?;
    string? placeholder?;
    string? url?;
    int:Signed32? height?;
};

public type WidgetResponse record {
    # 
    WidgetChannel[] channels;
    # 
    WidgetMember[] members;
    string name;
    @jsondata:Name {value: "presence_count"}
    int:Signed32 presenceCount;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    @jsondata:Name {value: "instant_invite"}
    string? instantInvite?;
};

public type OnboardingPromptOptionResponseRoleidsItemsString string;

public type THREADDELETE 112;

# The es-ES locale
public type EsES "es-ES";

public type GatewayResponse record {
    string url;
};

public type DANGER 4;

public type MLSpamUpsertRequestPartial record {
    @jsondata:Name {value: "event_type"}
    AutomodEventType eventType?;
    @jsondata:Name {value: "trigger_type"}
    AutomodTriggerType triggerType?;
    @constraint:String {maxLength: 100}
    string name?;
    # 
    @jsondata:Name {value: "exempt_roles"}
    MLSpamUpsertRequestPartialExemptrolesItemsString[]? exemptRoles?;
    # 
    @jsondata:Name {value: "exempt_channels"}
    MLSpamUpsertRequestPartialExemptchannelsItemsString[]? exemptChannels?;
    # 
    MLSpamUpsertRequestPartialActions[]? actions?;
    boolean? enabled?;
    @jsondata:Name {value: "trigger_metadata"}
    anydata triggerMetadata?;
};

public type MentionSpamUpsertRequestPartialActions BlockMessageAction|FlagToChannelAction|QuarantineUserAction|UserCommunicationDisabledAction|ActionsOneOf57?;

public type ExternalConnectionIntegrationResponse record {
    boolean? syncing?;
    IntegrationTypes 'type;
    boolean? revoked?;
    boolean? enabled?;
    @jsondata:Name {value: "expire_behavior"}
    anydata expireBehavior?;
    @jsondata:Name {value: "expire_grace_period"}
    anydata expireGracePeriod?;
    @jsondata:Name {value: "role_id"}
    anydata roleId?;
    @jsondata:Name {value: "subscriber_count"}
    int:Signed32? subscriberCount?;
    string? name?;
    string id;
    UserResponse user;
    anydata account?;
    @jsondata:Name {value: "enable_emoticons"}
    boolean? enableEmoticons?;
    @jsondata:Name {value: "synced_at"}
    string? syncedAt?;
};

public type MentionSpamTriggerMetadataResponse record {
    @jsondata:Name {value: "mention_total_limit"}
    int:Signed32 mentionTotalLimit;
};

public type PREMIUM 6;

public type GUILDBOOST 8;

public type MessageComponentActionRowResponse record {
    # 
    MessageComponentActionRowResponseComponents[]? components?;
    int:Signed32 id;
    1 'type;
};

public type GuildWithCountsResponse record {
    @jsondata:Name {value: "max_stage_video_channel_users"}
    int:Signed32? maxStageVideoChannelUsers?;
    @jsondata:Name {value: "preferred_locale"}
    AvailableLocalesEnum preferredLocale;
    @jsondata:Name {value: "approximate_presence_count"}
    int:Signed32? approximatePresenceCount?;
    @jsondata:Name {value: "default_message_notifications"}
    UserNotificationSettings defaultMessageNotifications;
    @jsondata:Name {value: "owner_id"}
    string ownerId;
    @jsondata:Name {value: "widget_channel_id"}
    anydata widgetChannelId?;
    # 
    GuildRoleResponse[] roles;
    string? icon?;
    string? description?;
    @jsondata:Name {value: "system_channel_id"}
    anydata systemChannelId?;
    @jsondata:Name {value: "rules_channel_id"}
    anydata rulesChannelId?;
    @jsondata:Name {value: "afk_timeout"}
    AfkTimeouts afkTimeout;
    # 
    GuildFeatures[] features;
    @jsondata:Name {value: "afk_channel_id"}
    anydata afkChannelId?;
    @jsondata:Name {value: "approximate_member_count"}
    int:Signed32? approximateMemberCount?;
    @jsondata:Name {value: "max_members"}
    int:Signed32? maxMembers?;
    # 
    GuildStickerResponse[] stickers;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    @jsondata:Name {value: "widget_enabled"}
    boolean widgetEnabled;
    @jsondata:Name {value: "max_video_channel_users"}
    int:Signed32? maxVideoChannelUsers?;
    @jsondata:Name {value: "nsfw_level"}
    GuildNSFWContentLevel nsfwLevel;
    @jsondata:Name {value: "safety_alerts_channel_id"}
    anydata safetyAlertsChannelId?;
    # 
    EmojiResponse[] emojis;
    boolean nsfw;
    @jsondata:Name {value: "vanity_url_code"}
    string? vanityUrlCode?;
    @jsondata:Name {value: "system_channel_flags"}
    int:Signed32 systemChannelFlags;
    @jsondata:Name {value: "max_presences"}
    int:Signed32? maxPresences?;
    @jsondata:Name {value: "premium_progress_bar_enabled"}
    boolean premiumProgressBarEnabled;
    string? banner?;
    @jsondata:Name {value: "premium_subscription_count"}
    int:Signed32 premiumSubscriptionCount;
    @jsondata:Name {value: "public_updates_channel_id"}
    anydata publicUpdatesChannelId?;
    @jsondata:Name {value: "application_id"}
    anydata applicationId?;
    @jsondata:Name {value: "home_header"}
    string? homeHeader?;
    @jsondata:Name {value: "verification_level"}
    VerificationLevels verificationLevel;
    @jsondata:Name {value: "discovery_splash"}
    string? discoverySplash?;
    @jsondata:Name {value: "explicit_content_filter"}
    GuildExplicitContentFilterTypes explicitContentFilter;
    string name;
    @jsondata:Name {value: "mfa_level"}
    GuildMFALevel mfaLevel;
    @jsondata:Name {value: "premium_tier"}
    PremiumGuildTiers premiumTier;
    string region;
    string? splash?;
};

public type OnboardingPromptOptionResponseChannelidsItemsString string;

public type VoiceRegionResponse record {
    boolean optimal;
    boolean custom;
    boolean deprecated;
    string name;
    string id;
};

# allows your app to connect to voice on user's behalf and see all the voice members - requires Discord approval
public type VOICE "voice";

public type MentionableSelect record {
    # 
    @jsondata:Name {value: "default_values"}
    MentionableSelectDefaultValues[]? defaultValues?;
    @jsondata:Name {value: "min_values"}
    int:Signed32? minValues?;
    @jsondata:Name {value: "custom_id"}
    string customId;
    @jsondata:Name {value: "max_values"}
    int:Signed32? maxValues?;
    boolean? disabled?;
    string? placeholder?;
    7 'type;
};

public type OnboardingPromptOptionRequestRoleidsItemsString string;

# allows your app to read entitlements for a user's applications
public type APPLICATIONSENTITLEMENTS "applications.entitlements";

public type ApplicationCommandOptionStringChoice record {
    @jsondata:Name {value: "name_localizations"}
    record {|string...;|}? nameLocalizations?;
    @constraint:String {maxLength: 100, minLength: 1}
    string name;
    @constraint:String {maxLength: 6000}
    string value;
};

public type ApplicationCommandStringOption record {
    @jsondata:Name {value: "name_localizations"}
    record {|string...;|}? nameLocalizations?;
    boolean? autocomplete?;
    @jsondata:Name {value: "min_length"}
    int:Signed32? minLength?;
    @constraint:String {maxLength: 32, minLength: 1}
    string name;
    @constraint:String {maxLength: 100, minLength: 1}
    string description;
    @jsondata:Name {value: "description_localizations"}
    record {|string...;|}? descriptionLocalizations?;
    3 'type;
    # 
    ApplicationCommandOptionStringChoice[]? choices?;
    boolean? required?;
    @jsondata:Name {value: "max_length"}
    int:Signed32? maxLength?;
};

# Represents the Queries record for the operation: get_thread_member
public type GetThreadMemberQueries record {
    # 
    @http:Query {name: "with_member"}
    boolean withMember?;
};

public type GUILDPRODUCT 0;

# the scheduled event is only accessible to guild members
public type GUILDONLY 2;

public type PNG 1;

public type SettingsEmojiResponse record {
    string? name?;
    boolean? animated?;
    anydata id?;
};

public type ApplicationCommandRoleOptionResponse record {
    @jsondata:Name {value: "name_localized"}
    string? nameLocalized?;
    @jsondata:Name {value: "name_localizations"}
    record {|string...;|}? nameLocalizations?;
    string name;
    string description;
    @jsondata:Name {value: "description_localized"}
    string? descriptionLocalized?;
    @jsondata:Name {value: "description_localizations"}
    record {|string...;|}? descriptionLocalizations?;
    8 'type;
    boolean? required?;
};

public type STAGEINSTANCE 1;

public type QuarantineUserActionResponse record {
    record {} metadata;
    4 'type;
};

public type EntitlementTypes APPLICATIONSUBSCRIPTION|QUESTREWARD;

public type MessageComponentRoleSelectResponse record {
    @jsondata:Name {value: "min_values"}
    int:Signed32? minValues?;
    @jsondata:Name {value: "custom_id"}
    string customId;
    @jsondata:Name {value: "max_values"}
    int:Signed32? maxValues?;
    boolean? disabled?;
    int:Signed32 id;
    string? placeholder?;
    6 'type;
};

# Provides a set of configurations for controlling the behaviours when communicating with a remote HTTP endpoint.
@display {label: "Connection Config"}
public type ConnectionConfig record {|
    # Provides Auth configurations needed when communicating with a remote HTTP endpoint.
    OAuth2ClientCredentialsGrantConfig|http:BearerTokenConfig|OAuth2RefreshTokenGrantConfig|ApiKeysConfig auth;
    # The HTTP version understood by the client
    http:HttpVersion httpVersion = http:HTTP_2_0;
    # Configurations related to HTTP/1.x protocol
    http:ClientHttp1Settings http1Settings = {};
    # Configurations related to HTTP/2 protocol
    http:ClientHttp2Settings http2Settings = {};
    # The maximum time to wait (in seconds) for a response before closing the connection
    decimal timeout = 30;
    # The choice of setting `forwarded`/`x-forwarded` header
    string forwarded = "disable";
    # Configurations associated with Redirection
    http:FollowRedirects followRedirects?;
    # Configurations associated with request pooling
    http:PoolConfiguration poolConfig?;
    # HTTP caching related configurations
    http:CacheConfig cache = {};
    # Specifies the way of handling compression (`accept-encoding`) header
    http:Compression compression = http:COMPRESSION_AUTO;
    # Configurations associated with the behaviour of the Circuit Breaker
    http:CircuitBreakerConfig circuitBreaker?;
    # Configurations associated with retrying
    http:RetryConfig retryConfig?;
    # Configurations associated with cookies
    http:CookieConfig cookieConfig?;
    # Configurations associated with inbound response size limits
    http:ResponseLimitConfigs responseLimits = {};
    # SSL/TLS-related options
    http:ClientSecureSocket secureSocket?;
    # Proxy server related options
    http:ProxyConfig proxy?;
    # Provides settings related to client socket configuration
    http:ClientSocketConfig socketConfig = {};
    # Enables the inbound payload validation functionality which provided by the constraint package. Enabled by default
    boolean validation = true;
    # Enables relaxed data binding on the client side. When enabled, `nil` values are treated as optional, 
    # and absent fields are handled as `nilable` types. Enabled by default.
    boolean laxDataBinding = true;
|};

# allows your app to know a user's friends and implicit relationships - requires Discord approval
public type RELATIONSHIPSREAD "relationships.read";

# Controls @everyone and @here mentions
public type EVERYONE "everyone";

public type KeywordUpsertRequestExemptrolesItemsString string;

public type AUTOMODERATIONRULECREATE 140;

public type RichEmbedImage record {
    int:Signed32? width?;
    @jsondata:Name {value: "placeholder_version"}
    int:Signed32? placeholderVersion?;
    string? placeholder?;
    string? url?;
    int:Signed32? height?;
};

public type IntegrationApplicationResponse record {
    anydata bot?;
    string name;
    string? icon?;
    string description;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    @jsondata:Name {value: "cover_image"}
    string? coverImage?;
    @jsondata:Name {value: "primary_sku_id"}
    anydata primarySkuId?;
    anydata 'type?;
};

# allows /users/@me/connections to return linked third-party accounts
public type CONNECTIONS "connections";

public type MessageReactionCountDetailsResponse record {
    int:Signed32 normal;
    int:Signed32 burst;
};

public type UpdateThreadTagRequest record {
    boolean? moderated?;
    @constraint:String {maxLength: 20}
    string name;
    @jsondata:Name {value: "emoji_id"}
    anydata emojiId?;
    @jsondata:Name {value: "emoji_name"}
    string? emojiName?;
    anydata id?;
};

public type CHANNELOVERWRITEDELETE 15;

# One hour
public type ONEHOUR1 60;

# Represents the Queries record for the operation: get_entitlements
public type GetEntitlementsQueries record {
    # 
    @http:Query {name: "exclude_ended"}
    boolean excludeEnded?;
    # 
    @http:Query {name: "user_id"}
    string userId?;
    # 
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string before?;
    # 
    @http:Query {name: "sku_ids"}
    SkuIds skuIds;
    # 
    @http:Query {name: "guild_id"}
    string guildId?;
    # 
    @constraint:Int {minValue: 1, maxValue: 100}
    int:Signed32 'limit?;
    # 
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string after?;
    # 
    @http:Query {name: "only_active"}
    boolean onlyActive?;
};

public type CreatedThreadResponseAppliedtagsItemsString string;

public type UpdateDefaultReactionEmojiRequest record {
    @jsondata:Name {value: "emoji_id"}
    anydata emojiId?;
    @jsondata:Name {value: "emoji_name"}
    string? emojiName?;
};

public type DefaultKeywordListUpsertRequestExemptrolesItemsString string;

public type CHANNELUPDATE 11;

public type InteractionApplicationCommandAutocompleteCallbackIntegerDataChoices ApplicationCommandOptionIntegerChoice|ChoicesOneOf2?;

public type MessageReferenceResponse record {
    @jsondata:Name {value: "guild_id"}
    anydata guildId?;
    @jsondata:Name {value: "message_id"}
    anydata messageId?;
    anydata 'type?;
    @jsondata:Name {value: "channel_id"}
    string channelId;
};

public type APPLICATIONCOMMANDPERMISSIONUPDATE 121;

public type AvailableTagsOneOf2 anydata?;

# Guild has unlocked Server Boost level 1 perks
public type TIER1 1;

# Guild has unlocked Server Boost level 3 perks
public type TIER3 3;

public type RulesruleIdBody DefaultKeywordListUpsertRequestPartial|KeywordUpsertRequestPartial|MLSpamUpsertRequestPartial|MentionSpamUpsertRequestPartial;

# Guild has unlocked Server Boost level 2 perks
public type TIER2 2;

@constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
public type UsersOneOf1 string;

# guild has enabled the welcome screen
public type WELCOMESCREENENABLED "WELCOME_SCREEN_ENABLED";

public type STICKERUPDATE 91;

public type VOICE1 2;

public type REPLY 19;

public type MentionChannelsOneOf2 anydata?;

# Represents the Queries record for the operation: delete_webhook_message
public type DeleteWebhookMessageQueries record {
    # 
    @http:Query {name: "thread_id"}
    string threadId?;
};

public type ApplicationCommandResponse record {
    @jsondata:Name {value: "name_localized"}
    string? nameLocalized?;
    @jsondata:Name {value: "name_localizations"}
    record {|string...;|}? nameLocalizations?;
    boolean? nsfw?;
    string description;
    @jsondata:Name {value: "description_localizations"}
    record {|string...;|}? descriptionLocalizations?;
    ApplicationCommandType 'type;
    @jsondata:Name {value: "application_id"}
    string applicationId;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string version;
    @jsondata:Name {value: "dm_permission"}
    boolean? dmPermission?;
    string name;
    @jsondata:Name {value: "guild_id"}
    anydata guildId?;
    # 
    ApplicationCommandResponseOptions[]? options?;
    @jsondata:Name {value: "description_localized"}
    string? descriptionLocalized?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    @jsondata:Name {value: "default_member_permissions"}
    string? defaultMemberPermissions?;
};

public type FACEBOOK "facebook";

public type MentionSpamUpsertRequestExemptchannelsItemsString string;

public type INVITEDELETE 42;

public type DefaultReactionEmojiResponse record {
    @jsondata:Name {value: "emoji_id"}
    anydata emojiId?;
    @jsondata:Name {value: "emoji_name"}
    string? emojiName?;
};

# members will receive notifications for all messages by default
public type ALLMESSAGES 0;

public type ApplicationCommandUpdateRequest record {
    @jsondata:Name {value: "name_localizations"}
    record {|string...;|}? nameLocalizations?;
    @jsondata:Name {value: "dm_permission"}
    boolean? dmPermission?;
    @constraint:String {maxLength: 32, minLength: 1}
    string name;
    # 
    ApplicationCommandUpdateRequestOptions[]? options?;
    string? description?;
    @jsondata:Name {value: "description_localizations"}
    record {|string...;|}? descriptionLocalizations?;
    @jsondata:Name {value: "default_member_permissions"}
    int:Signed32? defaultMemberPermissions?;
    anydata id?;
    anydata 'type?;
};

public type GUILDINCIDENTREPORTRAID 38;

public type ONEMINUTE 60;

public type KeywordRuleResponseExemptrolesItemsString string;

public type StickerPackResponse record {
    @jsondata:Name {value: "banner_asset_id"}
    anydata bannerAssetId?;
    @jsondata:Name {value: "cover_sticker_id"}
    anydata coverStickerId?;
    string name;
    string? description?;
    @jsondata:Name {value: "sku_id"}
    string skuId;
    # 
    StandardStickerResponse[] stickers;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
};

# A voice channel within a server
public type GUILDVOICE 2;

public type GuildsVoiceStatesRequest record {
    boolean? suppress?;
    @jsondata:Name {value: "channel_id"}
    anydata channelId?;
};

public type ONBOARDINGPROMPTUPDATE 164;

# guild has enabled Membership Screening
public type MEMBERVERIFICATIONGATEENABLED "MEMBER_VERIFICATION_GATE_ENABLED";

public type RECIPIENTADD 1;

public type MessageEmbedImageResponse record {
    anydata width?;
    @jsondata:Name {value: "placeholder_version"}
    anydata placeholderVersion?;
    @jsondata:Name {value: "proxy_url"}
    string? proxyUrl?;
    string? placeholder?;
    string? url?;
    anydata height?;
};

public type ApplicationCommandSubcommandOptionResponseOptions ApplicationCommandAttachmentOptionResponse|ApplicationCommandBooleanOptionResponse|ApplicationCommandChannelOptionResponse|ApplicationCommandIntegerOptionResponse|ApplicationCommandMentionableOptionResponse|ApplicationCommandNumberOptionResponse|ApplicationCommandRoleOptionResponse|ApplicationCommandStringOptionResponse|ApplicationCommandUserOptionResponse|OptionsOneOf101?;

public type UpdateGuildChannelRequestPartial record {
    boolean? nsfw?;
    @jsondata:Name {value: "rate_limit_per_user"}
    int:Signed32? rateLimitPerUser?;
    int:Signed32? flags?;
    int:Signed32? bitrate?;
    anydata 'type?;
    @jsondata:Name {value: "user_limit"}
    int:Signed32? userLimit?;
    # 
    @jsondata:Name {value: "permission_overwrites"}
    ChannelPermissionOverwriteRequest[]? permissionOverwrites?;
    @jsondata:Name {value: "rtc_region"}
    string? rtcRegion?;
    @jsondata:Name {value: "default_thread_rate_limit_per_user"}
    int:Signed32? defaultThreadRateLimitPerUser?;
    @jsondata:Name {value: "default_auto_archive_duration"}
    anydata defaultAutoArchiveDuration?;
    @jsondata:Name {value: "parent_id"}
    anydata parentId?;
    @jsondata:Name {value: "default_reaction_emoji"}
    anydata defaultReactionEmoji?;
    @constraint:String {maxLength: 100, minLength: 1}
    string name?;
    string? topic?;
    @jsondata:Name {value: "default_forum_layout"}
    anydata defaultForumLayout?;
    int:Signed32? position?;
    # 
    @jsondata:Name {value: "available_tags"}
    UpdateThreadTagRequest[]? availableTags?;
    @jsondata:Name {value: "video_quality_mode"}
    anydata videoQualityMode?;
    @jsondata:Name {value: "default_sort_order"}
    anydata defaultSortOrder?;
};

public type MessagesmessageIdBodyStickeridsItemsString string;

public type GuildTemplateChannelResponsePermissionOverwrites ChannelPermissionOverwriteResponse;

public type MessageResponse record {
    @jsondata:Name {value: "mention_everyone"}
    boolean mentionEveryone;
    # 
    BasicMessageResponseComponents[] components;
    boolean pinned;
    # 
    MessageAttachmentResponse[] attachments;
    anydata activity?;
    int:Signed32 flags;
    MessageType 'type;
    # 
    @jsondata:Name {value: "mention_roles"}
    MessageResponseMentionrolesItemsString[] mentionRoles;
    string content;
    @jsondata:Name {value: "edited_timestamp"}
    string? editedTimestamp?;
    @jsondata:Name {value: "referenced_message"}
    anydata referencedMessage?;
    # 
    MessageResponseStickers[]? stickers?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    @jsondata:Name {value: "message_reference"}
    anydata messageReference?;
    # 
    @jsondata:Name {value: "sticker_items"}
    MessageStickerItemResponse[]? stickerItems?;
    string timestamp;
    anydata resolved?;
    @jsondata:Name {value: "role_subscription_data"}
    anydata roleSubscriptionData?;
    UserResponse author;
    anydata thread?;
    @jsondata:Name {value: "application_id"}
    anydata applicationId?;
    anydata nonce?;
    anydata call?;
    boolean tts;
    # 
    @jsondata:Name {value: "mention_channels"}
    MessageResponseMentionChannels[]? mentionChannels?;
    anydata application?;
    @jsondata:Name {value: "webhook_id"}
    anydata webhookId?;
    # 
    UserResponse[] mentions;
    @jsondata:Name {value: "purchase_notification"}
    anydata purchaseNotification?;
    anydata interaction?;
    # 
    MessageReactionResponse[]? reactions?;
    int:Signed32? position?;
    @jsondata:Name {value: "channel_id"}
    string channelId;
    # 
    MessageEmbedResponse[] embeds;
};

public type HARMFULLINKSBLOCKEDMESSAGE 180;

public type ApplicationCommandOptionIntegerChoice record {
    @jsondata:Name {value: "name_localizations"}
    record {|string...;|}? nameLocalizations?;
    @constraint:String {maxLength: 100, minLength: 1}
    string name;
    @constraint:Int {minValue: 1, maxValue: -1}
    int value;
};

public type InteractionApplicationCommandAutocompleteCallbackNumberDataChoices ApplicationCommandOptionNumberChoice|ChoicesOneOf21?;

public type PAYPAL "paypal";

# Sent when a user interacts with a message component previously sent by your application
public type MESSAGECOMPONENT 3;

public type WidgetUserDiscriminator ZEROES;

public type GUILDUPDATE 1;

public type UserCommunicationDisabledAction record {
    UserCommunicationDisabledActionMetadata metadata;
    3 'type;
};

public type ApplicationOAuth2InstallParamsResponse record {
    string permissions;
    # 
    OAuth2Scopes[] scopes;
};

public type PLAYSTATION "playstation";

public type InputText record {
    @jsondata:Name {value: "min_length"}
    int:Signed32? minLength?;
    @jsondata:Name {value: "custom_id"}
    string customId;
    TextStyleTypes style;
    @constraint:String {maxLength: 45}
    string label;
    string? placeholder?;
    4 'type;
    string? value?;
    boolean? required?;
    @jsondata:Name {value: "max_length"}
    int:Signed32? maxLength?;
};

public type DefaultKeywordListUpsertRequestPartial record {
    @jsondata:Name {value: "event_type"}
    AutomodEventType eventType?;
    @jsondata:Name {value: "trigger_type"}
    AutomodTriggerType triggerType?;
    @constraint:String {maxLength: 100}
    string name?;
    # 
    @jsondata:Name {value: "exempt_roles"}
    DefaultKeywordListUpsertRequestPartialExemptrolesItemsString[]? exemptRoles?;
    # 
    @jsondata:Name {value: "exempt_channels"}
    DefaultKeywordListUpsertRequestPartialExemptchannelsItemsString[]? exemptChannels?;
    # 
    DefaultKeywordListUpsertRequestPartialActions[]? actions?;
    boolean? enabled?;
    @jsondata:Name {value: "trigger_metadata"}
    DefaultKeywordListTriggerMetadata triggerMetadata?;
};

public type OAuth2Scopes IDENTIFY|EMAIL|CONNECTIONS|GUILDS|GUILDSJOIN|GUILDSMEMBERSREAD|GDMJOIN|BOT|RPC|RPCNOTIFICATIONSREAD|RPCVOICEREAD|RPCVOICEWRITE|RPCVIDEOREAD|RPCVIDEOWRITE|RPCSCREENSHAREREAD|RPCSCREENSHAREWRITE|RPCACTIVITIESWRITE|WEBHOOKINCOMING|MESSAGESREAD|APPLICATIONSBUILDSUPLOAD|APPLICATIONSBUILDSREAD|APPLICATIONSCOMMANDS|APPLICATIONSCOMMANDSPERMISSIONSUPDATE|APPLICATIONSCOMMANDSUPDATE|APPLICATIONSSTOREUPDATE|APPLICATIONSENTITLEMENTS|ACTIVITIESREAD|ACTIVITIESWRITE|RELATIONSHIPSREAD|VOICE|DMCHANNELSREAD|ROLECONNECTIONSWRITE|OPENID;

public type WEBHOOKDELETE 52;

public type GUILDDISCOVERYGRACEPERIODFINALWARNING 17;

# Check if content represents generic spam
public type MLSPAM 3;

public type KeywordTriggerMetadataKeywordfilterItemsString string;

public type MEMBERBANADD 22;

public type CHANNELFOLLOWADD 12;

# guild is able to set role icons
public type ROLEICONS "ROLE_ICONS";

public type DEFERREDUPDATEMESSAGE 6;

public type MEMBERKICK 20;

public type GuildNSFWContentLevel DEFAULT|EXPLICIT|SAFE|AGERESTRICTED;

public type MODAL 9;

public type DefaultKeywordRuleResponseExemptrolesItemsString string;

public type ChannelFollowerResponse record {
    @jsondata:Name {value: "webhook_id"}
    string webhookId;
    @jsondata:Name {value: "channel_id"}
    string channelId;
};

public type InlineResponseItems2008 FriendInviteResponse|GroupDMInviteResponse|GuildInviteResponse|'200AnyOf41?;

public type SpamLinkRuleResponse record {
    @jsondata:Name {value: "event_type"}
    AutomodEventType eventType;
    @jsondata:Name {value: "trigger_type"}
    2 triggerType;
    @jsondata:Name {value: "guild_id"}
    string guildId;
    @jsondata:Name {value: "creator_id"}
    string creatorId;
    string name;
    # 
    @jsondata:Name {value: "exempt_roles"}
    SpamLinkRuleResponseExemptrolesItemsString[]? exemptRoles?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    # 
    @jsondata:Name {value: "exempt_channels"}
    SpamLinkRuleResponseExemptchannelsItemsString[]? exemptChannels?;
    # 
    DefaultKeywordRuleResponseActions[] actions;
    boolean? enabled?;
    @jsondata:Name {value: "trigger_metadata"}
    record {} triggerMetadata;
};

public type InlineResponseItems2006 ApplicationIncomingWebhookResponse|ChannelFollowerWebhookResponse|GuildIncomingWebhookResponse|'200OneOf43?;

public type InlineResponseItems2007 GuildChannelResponse|PrivateChannelResponse|PrivateGroupChannelResponse|ThreadResponse|'200OneOf5?;

public type InlineResponseItems2004 ExternalScheduledEventResponse|StageScheduledEventResponse|VoiceScheduledEventResponse|'200OneOf41?;

public type GatewayBotResponse record {
    int:Signed32 shards;
    @jsondata:Name {value: "session_start_limit"}
    GatewayBotSessionStartLimitResponse sessionStartLimit;
    string url;
};

public type InlineResponseItems2005 DiscordIntegrationResponse|ExternalConnectionIntegrationResponse|GuildSubscriptionIntegrationResponse|'200OneOf42?;

public type MessageEmbedAuthorResponse record {
    @jsondata:Name {value: "icon_url"}
    string? iconUrl?;
    string name;
    @jsondata:Name {value: "proxy_icon_url"}
    string? proxyIconUrl?;
    string? url?;
};

public type InlineResponseItems2002 ApplicationIncomingWebhookResponse|ChannelFollowerWebhookResponse|GuildIncomingWebhookResponse|'200OneOf4?;

public type InlineResponseItems2003 FriendInviteResponse|GroupDMInviteResponse|GuildInviteResponse|'200AnyOf4?;

# Represents the Queries record for the operation: list_guild_scheduled_events
public type ListGuildScheduledEventsQueries record {
    # 
    @http:Query {name: "with_user_count"}
    boolean withUserCount?;
};

public type DefaultKeywordListUpsertRequestExemptchannelsItemsString string;

public type InlineResponseItems2001 EntitlementResponse;

# An organizational category that contains up to 50 channels
public type GUILDCATEGORY 4;

public type SkuIdsOneOf1 string;

public type GuildTemplateResponse record {
    @jsondata:Name {value: "usage_count"}
    int:Signed32 usageCount;
    anydata creator?;
    string code;
    @jsondata:Name {value: "source_guild_id"}
    string sourceGuildId;
    @jsondata:Name {value: "updated_at"}
    string updatedAt;
    @jsondata:Name {value: "serialized_source_guild"}
    GuildTemplateSnapshotResponse serializedSourceGuild;
    string name;
    @jsondata:Name {value: "creator_id"}
    string creatorId;
    string? description?;
    @jsondata:Name {value: "created_at"}
    string createdAt;
    @jsondata:Name {value: "is_dirty"}
    boolean? isDirty?;
};

public type ChannelSelectDefaultValue record {
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    "channel" 'type;
};

public type ApplicationCommandIntegerOptionResponse record {
    @jsondata:Name {value: "min_value"}
    anydata minValue?;
    @jsondata:Name {value: "name_localized"}
    string? nameLocalized?;
    @jsondata:Name {value: "name_localizations"}
    record {|string...;|}? nameLocalizations?;
    boolean? autocomplete?;
    string name;
    string description;
    @jsondata:Name {value: "description_localized"}
    string? descriptionLocalized?;
    @jsondata:Name {value: "description_localizations"}
    record {|string...;|}? descriptionLocalizations?;
    4 'type;
    # 
    ApplicationCommandOptionIntegerChoiceResponse[]? choices?;
    boolean? required?;
    @jsondata:Name {value: "max_value"}
    anydata maxValue?;
};

public type ScheduledEventResponse record {
    string? image?;
    anydata creator?;
    @jsondata:Name {value: "privacy_level"}
    GuildScheduledEventPrivacyLevels privacyLevel;
    string? description?;
    @jsondata:Name {value: "entity_id"}
    anydata entityId?;
    @jsondata:Name {value: "scheduled_end_time"}
    string? scheduledEndTime?;
    @jsondata:Name {value: "entity_type"}
    GuildScheduledEventEntityTypes entityType;
    @jsondata:Name {value: "user_rsvp"}
    anydata userRsvp?;
    @jsondata:Name {value: "user_count"}
    int:Signed32? userCount?;
    @jsondata:Name {value: "guild_id"}
    string guildId;
    string name;
    @jsondata:Name {value: "creator_id"}
    anydata creatorId?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    @jsondata:Name {value: "channel_id"}
    anydata channelId?;
    @jsondata:Name {value: "scheduled_start_time"}
    string scheduledStartTime;
    GuildScheduledEventStatuses status;
};

public type MessageComponentUserSelectResponse record {
    @jsondata:Name {value: "min_values"}
    int:Signed32? minValues?;
    @jsondata:Name {value: "custom_id"}
    string customId;
    @jsondata:Name {value: "max_values"}
    int:Signed32? maxValues?;
    boolean? disabled?;
    int:Signed32 id;
    string? placeholder?;
    5 'type;
};

public type AllowedMentionTypes USERS|ROLES|EVERYONE;

public type InviteApplicationResponse record {
    # 
    @jsondata:Name {value: "rpc_origins"}
    string[]? rpcOrigins?;
    @jsondata:Name {value: "privacy_policy_url"}
    string? privacyPolicyUrl?;
    @jsondata:Name {value: "bot_require_code_grant"}
    boolean? botRequireCodeGrant?;
    anydata bot?;
    string? icon?;
    int:Signed32 flags;
    string description;
    @jsondata:Name {value: "verify_key"}
    string verifyKey;
    anydata 'type?;
    @jsondata:Name {value: "max_participants"}
    int:Signed32? maxParticipants?;
    # 
    string[]? tags?;
    @jsondata:Name {value: "custom_install_url"}
    string? customInstallUrl?;
    @jsondata:Name {value: "install_params"}
    anydata installParams?;
    string name;
    @jsondata:Name {value: "guild_id"}
    anydata guildId?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    @jsondata:Name {value: "cover_image"}
    string? coverImage?;
    @jsondata:Name {value: "primary_sku_id"}
    anydata primarySkuId?;
    string? slug?;
    @jsondata:Name {value: "bot_public"}
    boolean? botPublic?;
    @jsondata:Name {value: "terms_of_service_url"}
    string? termsOfServiceUrl?;
};

public type ApplicationCommandUserOptionResponse record {
    @jsondata:Name {value: "name_localized"}
    string? nameLocalized?;
    @jsondata:Name {value: "name_localizations"}
    record {|string...;|}? nameLocalizations?;
    string name;
    string description;
    @jsondata:Name {value: "description_localized"}
    string? descriptionLocalized?;
    @jsondata:Name {value: "description_localizations"}
    record {|string...;|}? descriptionLocalizations?;
    6 'type;
    boolean? required?;
};

public type BaseCreateMessageCreateRequest record {
    # 
    ActionRow[]? components?;
    # 
    MessageAttachmentRequest[]? attachments?;
    # 
    @jsondata:Name {value: "sticker_ids"}
    BaseCreateMessageCreateRequestStickeridsItemsString[]? stickerIds?;
    int:Signed32? flags?;
    @jsondata:Name {value: "allowed_mentions"}
    anydata allowedMentions?;
    # 
    RichEmbed[]? embeds?;
    string? content?;
};

# guild has access to set an invite splash background
public type INVITESPLASH "INVITE_SPLASH";

public type MentionSpamUpsertRequestPartialExemptrolesItemsString string;

public type CreatedThreadResponse record {
    @jsondata:Name {value: "last_pin_timestamp"}
    string? lastPinTimestamp?;
    @jsondata:Name {value: "rate_limit_per_user"}
    int:Signed32? rateLimitPerUser?;
    @jsondata:Name {value: "owner_id"}
    string ownerId;
    int:Signed32 flags;
    int:Signed32? bitrate?;
    ChannelTypes 'type;
    @jsondata:Name {value: "user_limit"}
    int:Signed32? userLimit?;
    @jsondata:Name {value: "message_count"}
    int:Signed32 messageCount;
    @jsondata:Name {value: "total_message_sent"}
    int:Signed32 totalMessageSent;
    @jsondata:Name {value: "last_message_id"}
    anydata lastMessageId?;
    @jsondata:Name {value: "rtc_region"}
    string? rtcRegion?;
    @jsondata:Name {value: "parent_id"}
    anydata parentId?;
    string? permissions?;
    @jsondata:Name {value: "guild_id"}
    string guildId;
    string name;
    anydata member?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    @jsondata:Name {value: "thread_metadata"}
    anydata threadMetadata?;
    @jsondata:Name {value: "member_count"}
    int:Signed32 memberCount;
    @jsondata:Name {value: "video_quality_mode"}
    anydata videoQualityMode?;
    # 
    @jsondata:Name {value: "applied_tags"}
    CreatedThreadResponseAppliedtagsItemsString[]? appliedTags?;
};

public type NONE 0;

public type GuildHomeSettingsResponseNewMemberActions NewMemberActionResponse|NewMemberActionsOneOf2?;

public type MessageEmbedVideoResponse record {
    anydata width?;
    @jsondata:Name {value: "placeholder_version"}
    anydata placeholderVersion?;
    @jsondata:Name {value: "proxy_url"}
    string? proxyUrl?;
    string? placeholder?;
    string? url?;
    anydata height?;
};

public type ThreadMemberResponse record {
    @jsondata:Name {value: "join_timestamp"}
    string joinTimestamp;
    @jsondata:Name {value: "user_id"}
    string userId;
    int:Signed32 flags;
    anydata member?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
};

public type THIRTYMINUTES 1800;

public type ScheduledEventUserResponse record {
    @jsondata:Name {value: "user_id"}
    string userId;
    anydata member?;
    @jsondata:Name {value: "guild_scheduled_event_id"}
    string guildScheduledEventId;
    anydata user?;
};

public type ChannelsFollowersRequest record {
    @jsondata:Name {value: "webhook_channel_id"}
    string webhookChannelId;
};

# must have verified email on account
public type LOW 1;

public type STAGEINSTANCECREATE 83;

public type ONBOARDINGPROMPTCREATE 163;

# Provides API key configurations needed when communicating with a remote HTTP endpoint.
public type ApiKeysConfig record {|
    # Discord bot token
    @display {label: "", kind: "password"}
    string authorization;
|};

public type VanityURLErrorResponse record {
    int:Signed32 code;
    string message;
};

# Three days
public type THREEDAY 4320;

public type EMOJIUPDATE 61;

public type KeywordUpsertRequestExemptchannelsItemsString string;

public type ChannelsRecipientsRequest record {
    @jsondata:Name {value: "access_token"}
    string? accessToken?;
    string? nick?;
};

public type StageInstancesPrivacyLevels PUBLIC|GUILDONLY1;

public type MessagesmessageIdBody1 record {
    # 
    ActionRow[]? components?;
    # 
    MessageAttachmentRequest[]? attachments?;
    int:Signed32? flags?;
    @jsondata:Name {value: "allowed_mentions"}
    anydata allowedMentions?;
    # 
    RichEmbed[]? embeds?;
    string? content?;
};

public type MentionSpamUpsertRequestActions BlockMessageAction|FlagToChannelAction|QuarantineUserAction|UserCommunicationDisabledAction|ActionsOneOf56?;

@constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
public type MessageCallResponseParticipantsItemsString string;

public type KeywordRuleResponse record {
    @jsondata:Name {value: "event_type"}
    AutomodEventType eventType;
    @jsondata:Name {value: "trigger_type"}
    1 triggerType;
    @jsondata:Name {value: "guild_id"}
    string guildId;
    @jsondata:Name {value: "creator_id"}
    string creatorId;
    string name;
    # 
    @jsondata:Name {value: "exempt_roles"}
    KeywordRuleResponseExemptrolesItemsString[]? exemptRoles?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    # 
    @jsondata:Name {value: "exempt_channels"}
    KeywordRuleResponseExemptchannelsItemsString[]? exemptChannels?;
    # 
    DefaultKeywordRuleResponseActions[] actions;
    boolean? enabled?;
    @jsondata:Name {value: "trigger_metadata"}
    KeywordTriggerMetadataResponse triggerMetadata;
};

public type AutomodKeywordPresetType PROFANITY|SEXUALCONTENT|SLURS;

public type ResourceChannelsOneOf2 anydata?;

public type ApplicationFormPartial record {
    @jsondata:Name {value: "role_connections_verification_url"}
    string? roleConnectionsVerificationUrl?;
    @jsondata:Name {value: "custom_install_url"}
    string? customInstallUrl?;
    @jsondata:Name {value: "install_params"}
    anydata installParams?;
    record {byte[] fileContent; string fileName;}? icon?;
    int:Signed32? flags?;
    anydata description?;
    @jsondata:Name {value: "interactions_endpoint_url"}
    string? interactionsEndpointUrl?;
    @jsondata:Name {value: "cover_image"}
    record {byte[] fileContent; string fileName;}? coverImage?;
    @jsondata:Name {value: "team_id"}
    anydata teamId?;
    anydata 'type?;
    @jsondata:Name {value: "max_participants"}
    int:Signed32? maxParticipants?;
    # 
    ApplicationFormPartialTagsItemsString[]? tags?;
};

public type PrivateGuildMemberResponse record {
    @jsondata:Name {value: "premium_since"}
    string? premiumSince?;
    boolean pending;
    # 
    PrivateGuildMemberResponseRolesItemsString[] roles;
    int:Signed32 flags;
    boolean deaf;
    string? banner?;
    boolean mute;
    string? avatar?;
    @jsondata:Name {value: "joined_at"}
    string joinedAt;
    string? nick?;
    @jsondata:Name {value: "communication_disabled_until"}
    string? communicationDisabledUntil?;
    @jsondata:Name {value: "avatar_decoration_data"}
    anydata avatarDecorationData?;
    UserResponse user;
};

# A direct message between multiple users
public type GROUPDM 3;

public type DISCORD "discord";

public type THREADCREATE 110;

public type MLSpamUpsertRequestActions BlockMessageAction|FlagToChannelAction|QuarantineUserAction|UserCommunicationDisabledAction|ActionsOneOf54?;

public type ApplicationCommandCreateRequest record {
    @jsondata:Name {value: "name_localizations"}
    record {|string...;|}? nameLocalizations?;
    @jsondata:Name {value: "dm_permission"}
    boolean? dmPermission?;
    @constraint:String {maxLength: 32, minLength: 1}
    string name;
    # 
    ApplicationCommandCreateRequestOptions[]? options?;
    string? description?;
    @jsondata:Name {value: "description_localizations"}
    record {|string...;|}? descriptionLocalizations?;
    @jsondata:Name {value: "default_member_permissions"}
    int:Signed32? defaultMemberPermissions?;
    anydata 'type?;
};

public type CreateTextThreadWithMessageRequest record {
    @jsondata:Name {value: "rate_limit_per_user"}
    int:Signed32? rateLimitPerUser?;
    @constraint:String {maxLength: 100, minLength: 1}
    string name;
    @jsondata:Name {value: "auto_archive_duration"}
    anydata autoArchiveDuration?;
};

# must have a verified phone number
public type VERYHIGH 4;

# guild has access to set a guild banner image
public type BANNER "BANNER";

public type AuditLogEntryResponse record {
    string? reason?;
    @jsondata:Name {value: "action_type"}
    AuditLogActionTypes actionType;
    @jsondata:Name {value: "user_id"}
    anydata userId?;
    # 
    AuditLogObjectChangeResponse[]? changes?;
    record {|string...;|}? options?;
    @jsondata:Name {value: "target_id"}
    anydata targetId?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
};

# Represents the Queries record for the operation: list_thread_members
public type ListThreadMembersQueries record {
    # 
    @constraint:Int {minValue: 1, maxValue: 100}
    int:Signed32 'limit?;
    # 
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string after?;
    # 
    @http:Query {name: "with_member"}
    boolean withMember?;
};

public type PrivateApplicationResponse record {
    @jsondata:Name {value: "privacy_policy_url"}
    string? privacyPolicyUrl?;
    @jsondata:Name {value: "bot_require_code_grant"}
    boolean? botRequireCodeGrant?;
    anydata bot?;
    string? icon?;
    int:Signed32 flags;
    string description;
    @jsondata:Name {value: "interactions_endpoint_url"}
    string? interactionsEndpointUrl?;
    anydata 'type?;
    @jsondata:Name {value: "max_participants"}
    int:Signed32? maxParticipants?;
    @jsondata:Name {value: "custom_install_url"}
    string? customInstallUrl?;
    @jsondata:Name {value: "install_params"}
    anydata installParams?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    @jsondata:Name {value: "cover_image"}
    string? coverImage?;
    string? slug?;
    @jsondata:Name {value: "bot_public"}
    boolean? botPublic?;
    @jsondata:Name {value: "terms_of_service_url"}
    string? termsOfServiceUrl?;
    # 
    @jsondata:Name {value: "rpc_origins"}
    string[]? rpcOrigins?;
    UserResponse owner;
    @jsondata:Name {value: "role_connections_verification_url"}
    string? roleConnectionsVerificationUrl?;
    @jsondata:Name {value: "verify_key"}
    string verifyKey;
    # 
    @jsondata:Name {value: "redirect_uris"}
    string[] redirectUris;
    anydata team?;
    # 
    string[]? tags?;
    @jsondata:Name {value: "approximate_guild_count"}
    int:Signed32? approximateGuildCount?;
    string name;
    @jsondata:Name {value: "guild_id"}
    anydata guildId?;
    @jsondata:Name {value: "primary_sku_id"}
    anydata primarySkuId?;
};

# for local rpc server access, this allows you to update a user's screenshare settings- requires Discord approval
public type RPCSCREENSHAREWRITE "rpc.screenshare.write";

public type InlineResponseItems200 DefaultKeywordRuleResponse|KeywordRuleResponse|MLSpamRuleResponse|MentionSpamRuleResponse|SpamLinkRuleResponse|'200OneOf6?;

# for local rpc server access, this allows you to read a user's voice settings and listen for voice events - requires Discord approval
public type RPCVOICEREAD "rpc.voice.read";

# guild has been set as a support server on the App Directory
public type DEVELOPERSUPPORTSERVER "DEVELOPER_SUPPORT_SERVER";

public type ThreadMetadataResponse record {
    boolean archived;
    @jsondata:Name {value: "archive_timestamp"}
    string? archiveTimestamp?;
    @jsondata:Name {value: "create_timestamp"}
    string? createTimestamp?;
    boolean? invitable?;
    boolean locked;
    @jsondata:Name {value: "auto_archive_duration"}
    ThreadAutoArchiveDuration autoArchiveDuration;
};

public type ExternalScheduledEventPatchRequestPartial record {
    record {byte[] fileContent; string fileName;}? image?;
    @jsondata:Name {value: "entity_type"}
    anydata entityType?;
    @jsondata:Name {value: "privacy_level"}
    GuildScheduledEventPrivacyLevels privacyLevel?;
    @constraint:String {maxLength: 100}
    string name?;
    @jsondata:Name {value: "entity_metadata"}
    EntityMetadataExternal entityMetadata?;
    string? description?;
    @jsondata:Name {value: "channel_id"}
    anydata channelId?;
    anydata status?;
    @jsondata:Name {value: "scheduled_start_time"}
    string scheduledStartTime?;
    @jsondata:Name {value: "scheduled_end_time"}
    string? scheduledEndTime?;
};

public type TIKTOK "tiktok";

public type TWITCH "twitch";

public type UserGuildOnboardingResponse record {
    # 
    @jsondata:Name {value: "default_channel_ids"}
    UserGuildOnboardingResponseDefaultchannelidsItemsString[] defaultChannelIds;
    @jsondata:Name {value: "guild_id"}
    string guildId;
    # 
    OnboardingPromptResponse[] prompts;
    boolean enabled;
};

public type PartialGuildSubscriptionIntegrationResponse record {
    string? name?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    "guild_subscription" 'type;
    anydata account?;
};

public type BasicMessageResponseComponents MessageComponentActionRowResponse|MessageComponentButtonResponse|MessageComponentChannelSelectResponse|MessageComponentInputTextResponse|MessageComponentMentionableSelectResponse|MessageComponentRoleSelectResponse|MessageComponentStringSelectResponse|MessageComponentUserSelectResponse;

public type StickersOneOf31 anydata?;

public type AUTOMODERATIONFLAGTOCHANNEL 144;

# This permission is for a channel
public type CHANNEL1 3;

public type StageScheduledEventCreateRequest record {
    record {byte[] fileContent; string fileName;}? image?;
    @jsondata:Name {value: "entity_type"}
    1 entityType;
    @jsondata:Name {value: "privacy_level"}
    GuildScheduledEventPrivacyLevels privacyLevel;
    @constraint:String {maxLength: 100}
    string name;
    @jsondata:Name {value: "entity_metadata"}
    anydata entityMetadata?;
    string? description?;
    @jsondata:Name {value: "channel_id"}
    anydata channelId?;
    @jsondata:Name {value: "scheduled_start_time"}
    string scheduledStartTime;
    @jsondata:Name {value: "scheduled_end_time"}
    string? scheduledEndTime?;
};

public type GUILDINCIDENTALERTMODEENABLED 36;

public type GithubAuthor record {
    @constraint:String {maxLength: 152133}
    string name;
    string? username?;
};

public type SAFE 2;

public type ActionsOneOf5 anydata?;

public type GuildsTemplatesRequest1 record {
    @constraint:String {maxLength: 100, minLength: 1}
    string name?;
    string? description?;
};

public type GuildsTemplatesRequest2 record {
    @constraint:String {maxLength: 100, minLength: 1}
    string name;
    string? description?;
};

public type EmojiResponse record {
    boolean managed;
    # 
    EmojiResponseRolesItemsString[] roles;
    string name;
    boolean available;
    boolean animated;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    anydata user?;
    @jsondata:Name {value: "require_colons"}
    boolean requireColons;
};

public type GuildExplicitContentFilterTypes DISABLED|MEMBERSWITHOUTROLES|ALLMEMBERS;

# Represents the Queries record for the operation: list_guild_members
public type ListGuildMembersQueries record {
    # 
    @constraint:Int {minValue: 1, maxValue: 1000}
    int:Signed32 'limit?;
    # 
    @constraint:Int {minValue: 0}
    int:Signed32 after?;
};

public type PartialDiscordIntegrationResponse record {
    string? name?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    "discord" 'type;
    @jsondata:Name {value: "application_id"}
    string applicationId;
    anydata account?;
};

# for OpenID Connect, this allows your app to receive user id and basic profile information
public type OPENID "openid";

public type SOUNDBOARDSOUNDUPDATE 131;

public type EntityMetadataExternal record {
    @constraint:String {maxLength: 100}
    string location;
};

public type CreateEntitlementRequestData record {
    @jsondata:Name {value: "owner_id"}
    string ownerId;
    @jsondata:Name {value: "sku_id"}
    string skuId;
    @jsondata:Name {value: "owner_type"}
    int:Signed32 ownerType;
};

public type BasicMessageResponseStickers GuildStickerResponse|StandardStickerResponse|StickersOneOf3?;

public type UserPIIResponse record {
    boolean? bot?;
    @constraint:Int {minValue: 1, maxValue: -1}
    int flags;
    boolean? verified?;
    string? banner?;
    string? avatar?;
    AvailableLocalesEnum locale;
    string discriminator;
    @jsondata:Name {value: "premium_type"}
    anydata premiumType?;
    @jsondata:Name {value: "accent_color"}
    int:Signed32? accentColor?;
    boolean? system?;
    @jsondata:Name {value: "global_name"}
    string? globalName?;
    @jsondata:Name {value: "mfa_enabled"}
    boolean mfaEnabled;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    @jsondata:Name {value: "public_flags"}
    int:Signed32 publicFlags;
    string? email?;
    string username;
};

public type '200OneOf42 anydata?;

public type DefaultKeywordListUpsertRequestPartialActions BlockMessageAction|FlagToChannelAction|QuarantineUserAction|UserCommunicationDisabledAction|ActionsOneOf51?;

public type '200OneOf43 anydata?;

# guild has increased custom sticker slots
public type MORESTICKERS "MORE_STICKERS";

public type SkuIds SkuIdsOneOf1|SkuIdsSkuIdsOneOf12;

public type DefaultKeywordRuleResponse record {
    @jsondata:Name {value: "event_type"}
    AutomodEventType eventType;
    @jsondata:Name {value: "trigger_type"}
    4 triggerType;
    @jsondata:Name {value: "guild_id"}
    string guildId;
    @jsondata:Name {value: "creator_id"}
    string creatorId;
    string name;
    # 
    @jsondata:Name {value: "exempt_roles"}
    DefaultKeywordRuleResponseExemptrolesItemsString[]? exemptRoles?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    # 
    @jsondata:Name {value: "exempt_channels"}
    DefaultKeywordRuleResponseExemptchannelsItemsString[]? exemptChannels?;
    # 
    DefaultKeywordRuleResponseActions[] actions;
    boolean? enabled?;
    @jsondata:Name {value: "trigger_metadata"}
    DefaultKeywordListTriggerMetadataResponse triggerMetadata;
};

# Represents the Headers record for the operation: update_original_webhook_message
public type UpdateOriginalWebhookMessageHeaders record {
    # 
    @http:Header {name: "Content-Type"}
    "application/x-www-form-urlencoded" contentType;
};

public type GuildIncomingWebhookResponse record {
    @jsondata:Name {value: "guild_id"}
    anydata guildId?;
    string name;
    string? avatar?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    1 'type;
    @jsondata:Name {value: "application_id"}
    anydata applicationId?;
    @jsondata:Name {value: "channel_id"}
    anydata channelId?;
    anydata user?;
    string? url?;
    string? token?;
};

public type CreateGuildInviteRequest record {
    @jsondata:Name {value: "max_age"}
    int:Signed32? maxAge?;
    boolean? temporary?;
    @jsondata:Name {value: "max_uses"}
    int:Signed32? maxUses?;
    boolean? unique?;
    @jsondata:Name {value: "target_type"}
    anydata targetType?;
    @jsondata:Name {value: "target_user_id"}
    anydata targetUserId?;
    @jsondata:Name {value: "target_application_id"}
    anydata targetApplicationId?;
};

# allows your app to read build data for a user's applications
public type APPLICATIONSBUILDSREAD "applications.builds.read";

public type VoiceScheduledEventResponse record {
    string? image?;
    anydata creator?;
    @jsondata:Name {value: "privacy_level"}
    GuildScheduledEventPrivacyLevels privacyLevel;
    @jsondata:Name {value: "entity_metadata"}
    anydata entityMetadata?;
    string? description?;
    @jsondata:Name {value: "entity_id"}
    anydata entityId?;
    @jsondata:Name {value: "scheduled_end_time"}
    string? scheduledEndTime?;
    @jsondata:Name {value: "entity_type"}
    2 entityType;
    @jsondata:Name {value: "user_rsvp"}
    anydata userRsvp?;
    @jsondata:Name {value: "user_count"}
    int:Signed32? userCount?;
    @jsondata:Name {value: "guild_id"}
    string guildId;
    string name;
    @jsondata:Name {value: "creator_id"}
    anydata creatorId?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    @jsondata:Name {value: "channel_id"}
    anydata channelId?;
    @jsondata:Name {value: "scheduled_start_time"}
    string scheduledStartTime;
    GuildScheduledEventStatuses status;
};

public type GuildsBulkBanRequest record {
    # 
    @jsondata:Name {value: "user_ids"}
    GuildsBulkBanRequestUseridsItemsString[] userIds;
    @jsondata:Name {value: "delete_message_seconds"}
    int:Signed32? deleteMessageSeconds?;
};

public type LINK 5;

public type PONG 1;

public type '200OneOf41 anydata?;

public type OptionsOneOf2 anydata?;

# allows your app to update permissions for its commands in a guild a user has permissions to
public type APPLICATIONSCOMMANDSPERMISSIONSUPDATE "applications.commands.permissions.update";

public type CHANNELDELETE 12;

public type StickerPackCollectionResponse record {
    # 
    @jsondata:Name {value: "sticker_packs"}
    StickerPackResponse[] stickerPacks;
};

# the metadata value (ISO8601 string) is less than or equal to the guild's configured value (integer; days before current date)
public type DATETIMELESSTHANEQUAL 5;

public type SpamLinkRuleResponseExemptchannelsItemsString string;

public type UserSelectDefaultValue record {
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    "user" 'type;
};

public type MLSpamUpsertRequestPartialActions BlockMessageAction|FlagToChannelAction|QuarantineUserAction|UserCommunicationDisabledAction|ActionsOneOf55?;

public type PartialExternalConnectionIntegrationResponse record {
    string? name?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    IntegrationTypes 'type;
    anydata account?;
};

public type STICKERCREATE 90;

public type MESSAGEBULKDELETE 73;

public type '200OneOf6 anydata?;

public type ThreadResponse record {
    @jsondata:Name {value: "last_pin_timestamp"}
    string? lastPinTimestamp?;
    @jsondata:Name {value: "rate_limit_per_user"}
    int:Signed32? rateLimitPerUser?;
    @jsondata:Name {value: "owner_id"}
    string ownerId;
    int:Signed32 flags;
    int:Signed32? bitrate?;
    ChannelTypes 'type;
    @jsondata:Name {value: "user_limit"}
    int:Signed32? userLimit?;
    @jsondata:Name {value: "message_count"}
    int:Signed32 messageCount;
    @jsondata:Name {value: "total_message_sent"}
    int:Signed32 totalMessageSent;
    @jsondata:Name {value: "last_message_id"}
    anydata lastMessageId?;
    @jsondata:Name {value: "rtc_region"}
    string? rtcRegion?;
    @jsondata:Name {value: "parent_id"}
    anydata parentId?;
    string? permissions?;
    @jsondata:Name {value: "guild_id"}
    string guildId;
    string name;
    anydata member?;
    @constraint:String {pattern: re `^(0|[1-9][0-9]*)$`}
    string id;
    @jsondata:Name {value: "thread_metadata"}
    anydata threadMetadata?;
    @jsondata:Name {value: "member_count"}
    int:Signed32 memberCount;
    @jsondata:Name {value: "video_quality_mode"}
    anydata videoQualityMode?;
    # 
    @jsondata:Name {value: "applied_tags"}
    ThreadResponseAppliedtagsItemsString[]? appliedTags?;
};

public type '200OneOf5 anydata?;

public type '200OneOf4 anydata?;

public type IncluderolesItemsnull string;
